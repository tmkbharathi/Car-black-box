

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Dec 14 16:38:06 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4580 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   000B02                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _signature
    71   000B02  20                 	db	low STR_1
    72   000B03  06                 	db	high STR_1
    73   000B04  1D                 	db	low STR_2
    74   000B05  06                 	db	high STR_2
    75   000B06  11                 	db	low STR_3
    76   000B07  06                 	db	high STR_3
    77   000B08  14                 	db	low STR_4
    78   000B09  06                 	db	high STR_4
    79   000B0A  17                 	db	low STR_5
    80   000B0B  06                 	db	high STR_5
    81   000B0C  1A                 	db	low STR_6
    82   000B0D  06                 	db	high STR_6
    83   000B0E  23                 	db	low STR_7
    84   000B0F  06                 	db	high STR_7
    85   000B10  0E                 	db	low STR_8
    86   000B11  06                 	db	high STR_8
    87                           
    88                           ;initializer for init_animation@F10468
    89   000B12  00                 	db	0
    90   000B13  1E                 	db	30
    91   000B14  1E                 	db	30
    92   000B15  1F                 	db	31
    93   000B16  1F                 	db	31
    94   000B17  1F                 	db	31
    95   000B18  0C                 	db	12
    96   000B19  00                 	db	0
    97                           
    98                           ;initializer for init_animation@F10466
    99   000B1A  00                 	db	0
   100   000B1B  03                 	db	3
   101   000B1C  07                 	db	7
   102   000B1D  1F                 	db	31
   103   000B1E  1F                 	db	31
   104   000B1F  1F                 	db	31
   105   000B20  0C                 	db	12
   106   000B21  00                 	db	0
   107                           
   108                           ;initializer for init_animation@F10464
   109   000B22  00                 	db	0
   110   000B23  1C                 	db	28
   111   000B24  04                 	db	4
   112   000B25  0E                 	db	14
   113   000B26  1F                 	db	31
   114   000B27  04                 	db	4
   115   000B28  00                 	db	0
   116   000B29  00                 	db	0
   117                           
   118                           ;initializer for init_animation@F10462
   119   000B2A  00                 	db	0
   120   000B2B  07                 	db	7
   121   000B2C  04                 	db	4
   122   000B2D  0E                 	db	14
   123   000B2E  1F                 	db	31
   124   000B2F  04                 	db	4
   125   000B30  00                 	db	0
   126   000B31  00                 	db	0
   127                           
   128                           ;initializer for read_switches@uconce
   129   000B32  01                 	db	1
   130   000000                     _TRISC	set	3988
   131   000000                     _TRISD7	set	31919
   132   000000                     _RBPU	set	32655
   133   000000                     _TRISD	set	3989
   134   000000                     _PORTDbits	set	3971
   135   000000                     _PORTBbits	set	3969
   136   000000                     _PORTB	set	3969
   137   000000                     _PORTD	set	3971
   138   000000                     _PORTCbits	set	3970
   139   000000                     _TRISB	set	3987
   140                           
   141                           	psect	smallconst
   142   000600                     __psmallconst:
   143                           	callstack 0
   144   000600  00                 	db	0
   145   000601                     STR_9:
   146   000601  54                 	db	84	;'T'
   147   000602  49                 	db	73	;'I'
   148   000603  4D                 	db	77	;'M'
   149   000604  45                 	db	69	;'E'
   150   000605  20                 	db	32
   151   000606  20                 	db	32
   152   000607  20                 	db	32
   153   000608  45                 	db	69	;'E'
   154   000609  20                 	db	32
   155   00060A  20                 	db	32
   156   00060B  53                 	db	83	;'S'
   157   00060C  50                 	db	80	;'P'
   158   00060D  00                 	db	0
   159   00060E                     STR_8:
   160   00060E  43                 	db	67	;'C'
   161   00060F  20                 	db	32
   162   000610  00                 	db	0
   163   000611                     STR_3:
   164   000611  47                 	db	71	;'G'
   165   000612  31                 	db	49	;'1'
   166   000613  00                 	db	0
   167   000614                     STR_4:
   168   000614  47                 	db	71	;'G'
   169   000615  32                 	db	50	;'2'
   170   000616  00                 	db	0
   171   000617                     STR_5:
   172   000617  47                 	db	71	;'G'
   173   000618  33                 	db	51	;'3'
   174   000619  00                 	db	0
   175   00061A                     STR_6:
   176   00061A  47                 	db	71	;'G'
   177   00061B  34                 	db	52	;'4'
   178   00061C  00                 	db	0
   179   00061D                     STR_2:
   180   00061D  47                 	db	71	;'G'
   181   00061E  4E                 	db	78	;'N'
   182   00061F  00                 	db	0
   183   000620                     STR_1:
   184   000620  4F                 	db	79	;'O'
   185   000621  4E                 	db	78	;'N'
   186   000622  00                 	db	0
   187   000623                     STR_7:
   188   000623  47                 	db	71	;'G'
   189   000624  52                 	db	82	;'R'
   190   000625  00                 	db	0
   191   000626  00                 	db	0	; dummy byte at the end
   192   000000                     
   193                           ; #config settings
   194                           
   195                           	psect	cinit
   196   000A9C                     __pcinit:
   197                           	callstack 0
   198   000A9C                     start_initialization:
   199                           	callstack 0
   200   000A9C                     __initialization:
   201                           	callstack 0
   202                           
   203                           ; Initialize objects allocated to COMRAM (49 bytes)
   204                           ; load TBLPTR registers with __pidataCOMRAM
   205   000A9C  0E02               	movlw	low __pidataCOMRAM
   206   000A9E  6EF6               	movwf	tblptrl,c
   207   000AA0  0E0B               	movlw	high __pidataCOMRAM
   208   000AA2  6EF7               	movwf	tblptrh,c
   209   000AA4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   210   000AA6  6EF8               	movwf	tblptru,c
   211   000AA8  EE00  F001         	lfsr	0,__pdataCOMRAM
   212   000AAC  EE10 F031          	lfsr	1,49
   213   000AB0                     copy_data0:
   214   000AB0  0009               	tblrd		*+
   215   000AB2  CFF5 FFEE          	movff	tablat,postinc0
   216   000AB6  50E5               	movf	postdec1,w,c
   217   000AB8  50E1               	movf	fsr1l,w,c
   218   000ABA  E1FA               	bnz	copy_data0
   219                           
   220                           ; Clear objects allocated to COMRAM (3 bytes)
   221   000ABC  6A5F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   222   000ABE  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   223   000AC0  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   224   000AC2                     end_of_initialization:
   225                           	callstack 0
   226   000AC2                     __end_of__initialization:
   227                           	callstack 0
   228   000AC2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   229   000AC4  6EF8               	movwf	tblptru,c
   230   000AC6  0E06               	movlw	high __Lsmallconst
   231   000AC8  6EF7               	movwf	tblptrh,c
   232   000ACA  0100               	movlb	0
   233   000ACC  EFC2  F005         	goto	_main	;jump to C main() function
   234                           
   235                           	psect	bssCOMRAM
   236   00005D                     __pbssCOMRAM:
   237                           	callstack 0
   238   00005D                     read_switches@uckey:
   239                           	callstack 0
   240   00005D                     	ds	1
   241   00005E                     gear_monitor@crashflag:
   242                           	callstack 0
   243   00005E                     	ds	1
   244   00005F                     gear_monitor@signindex:
   245                           	callstack 0
   246   00005F                     	ds	1
   247                           
   248                           	psect	dataCOMRAM
   249   000001                     __pdataCOMRAM:
   250                           	callstack 0
   251   000001                     _signature:
   252                           	callstack 0
   253   000001                     	ds	16
   254   000011                     init_animation@F10468:
   255                           	callstack 0
   256   000011                     	ds	8
   257   000019                     init_animation@F10466:
   258                           	callstack 0
   259   000019                     	ds	8
   260   000021                     init_animation@F10464:
   261                           	callstack 0
   262   000021                     	ds	8
   263   000029                     init_animation@F10462:
   264                           	callstack 0
   265   000029                     	ds	8
   266   000031                     read_switches@uconce:
   267                           	callstack 0
   268   000031                     	ds	1
   269                           
   270                           	psect	cstackCOMRAM
   271   000032                     __pcstackCOMRAM:
   272                           	callstack 0
   273   000032                     read_switches@ucdetection:
   274                           	callstack 0
   275   000032                     clcd_write@control_bit:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x0
   279   000032                     	ds	1
   280   000033                     clcd_write@byte:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x1
   284   000033                     	ds	1
   285   000034                     ??_init_clcd:
   286   000034                     clcd_putch@addr:
   287                           	callstack 0
   288   000034                     clcd_print@data:
   289                           	callstack 0
   290   000034                     init_animation@firsthalfcar:
   291                           	callstack 0
   292                           
   293                           ; 8 bytes @ 0x2
   294   000034                     	ds	1
   295   000035                     clcd_putch@data:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x3
   299   000035                     	ds	1
   300   000036                     ??_gear_monitor:
   301   000036                     clcd_print@addr:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x4
   305   000036                     	ds	1
   306   000037                     
   307                           ; 1 bytes @ 0x5
   308   000037                     	ds	1
   309   000038                     gear_monitor@uckey:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x6
   313   000038                     	ds	1
   314   000039                     display_dashboard@uckey:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x7
   318   000039                     	ds	3
   319   00003C                     init_animation@secondhalfcar:
   320                           	callstack 0
   321                           
   322                           ; 8 bytes @ 0xA
   323   00003C                     	ds	8
   324   000044                     init_animation@m:
   325                           	callstack 0
   326                           
   327                           ; 8 bytes @ 0x12
   328   000044                     	ds	8
   329   00004C                     init_animation@n:
   330                           	callstack 0
   331                           
   332                           ; 8 bytes @ 0x1A
   333   00004C                     	ds	8
   334   000054                     init_animation@i:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x22
   338   000054                     	ds	2
   339   000056                     init_animation@i_385:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x24
   343   000056                     	ds	2
   344   000058                     init_animation@i_386:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x26
   348   000058                     	ds	2
   349   00005A                     init_animation@i_387:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x28
   353   00005A                     	ds	2
   354   00005C                     main@ucKey:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0x2A
   358   00005C                     	ds	1
   359                           
   360 ;;
   361 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   362 ;;
   363 ;; *************** function _main *****************
   364 ;; Defined at:
   365 ;;		line 16 in file "main.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;  ucKey           1   42[COMRAM] unsigned char 
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   379 ;;      Params:         0       0       0       0       0       0       0
   380 ;;      Locals:         1       0       0       0       0       0       0
   381 ;;      Temps:          0       0       0       0       0       0       0
   382 ;;      Totals:         1       0       0       0       0       0       0
   383 ;;Total ram usage:        1 bytes
   384 ;; Hardware stack levels required when called: 4
   385 ;; This function calls:
   386 ;;		_display_dashboard
   387 ;;		_init_config
   388 ;;		_read_switches
   389 ;; This function is called by:
   390 ;;		Startup code after reset
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           	psect	text0
   395   000B84                     __ptext0:
   396                           	callstack 0
   397   000B84                     _main:
   398                           	callstack 27
   399   000B84                     
   400                           ;main.c: 17:     init_config();
   401   000B84  ECE6  F005         	call	_init_config	;wreg free
   402   000B88                     l1233:
   403                           
   404                           ;main.c: 21:         ucKey = read_switches(1);
   405   000B88  0E01               	movlw	1
   406   000B8A  EC9E  F004         	call	_read_switches
   407   000B8E  6E5C               	movwf	main@ucKey^0,c
   408   000B90                     
   409                           ;main.c: 22:         display_dashboard(ucKey);
   410   000B90  505C               	movf	main@ucKey^0,w,c
   411   000B92  ECAF  F005         	call	_display_dashboard
   412   000B96  EFC4  F005         	goto	l1233
   413   000B9A  EF00  F000         	goto	start
   414   000B9E                     __end_of_main:
   415                           	callstack 0
   416                           
   417 ;; *************** function _read_switches *****************
   418 ;; Defined at:
   419 ;;		line 10 in file "matrix_keyboard.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;  ucdetection     1    wreg     unsigned char 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;  ucdetection     1    0[COMRAM] unsigned char 
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      unsigned char 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   433 ;;      Params:         0       0       0       0       0       0       0
   434 ;;      Locals:         1       0       0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0       0       0
   436 ;;      Totals:         1       0       0       0       0       0       0
   437 ;;Total ram usage:        1 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; Hardware stack levels required when called: 1
   440 ;; This function calls:
   441 ;;		_scan_key
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text1
   448   00093C                     __ptext1:
   449                           	callstack 0
   450   00093C                     _read_switches:
   451                           	callstack 29
   452                           
   453                           ;incstack = 0
   454                           ;read_switches@ucdetection stored from wreg
   455   00093C  6E32               	movwf	read_switches@ucdetection^0,c
   456   00093E                     
   457                           ;matrix_keyboard.c: 10: unsigned char read_switches(unsigned char ucdetection);matrix_ke
      +                          yboard.c: 11: {;matrix_keyboard.c: 12:     static unsigned char uconce=1, uckey;;matrix_
      +                          keyboard.c: 13:     if(ucdetection ==0 )
   458   00093E  5032               	movf	read_switches@ucdetection^0,w,c
   459   000940  A4D8               	btfss	status,2,c
   460   000942  EFA5  F004         	goto	u221
   461   000946  EFA7  F004         	goto	u220
   462   00094A                     u221:
   463   00094A  EFAB  F004         	goto	l1031
   464   00094E                     u220:
   465   00094E                     
   466                           ;matrix_keyboard.c: 14:         return scan_key();
   467   00094E  ECD9  F004         	call	_scan_key	;wreg free
   468   000952  EFD8  F004         	goto	l83
   469   000956                     l1031:
   470   000956  0432               	decf	read_switches@ucdetection^0,w,c
   471   000958  A4D8               	btfss	status,2,c
   472   00095A  EFB1  F004         	goto	u231
   473   00095E  EFB3  F004         	goto	u230
   474   000962                     u231:
   475   000962  EFD7  F004         	goto	l1049
   476   000966                     u230:
   477   000966                     
   478                           ;matrix_keyboard.c: 16:     {;matrix_keyboard.c: 17:         uckey = scan_key();
   479   000966  ECD9  F004         	call	_scan_key	;wreg free
   480   00096A  6E5D               	movwf	read_switches@uckey^0,c
   481   00096C                     
   482                           ;matrix_keyboard.c: 18:         if((uckey != 0xFF) && uconce)
   483   00096C  285D               	incf	read_switches@uckey^0,w,c
   484   00096E  B4D8               	btfsc	status,2,c
   485   000970  EFBC  F004         	goto	u241
   486   000974  EFBE  F004         	goto	u240
   487   000978                     u241:
   488   000978  EFCB  F004         	goto	l1045
   489   00097C                     u240:
   490   00097C  5031               	movf	read_switches@uconce^0,w,c
   491   00097E  B4D8               	btfsc	status,2,c
   492   000980  EFC4  F004         	goto	u251
   493   000984  EFC6  F004         	goto	u250
   494   000988                     u251:
   495   000988  EFCB  F004         	goto	l1045
   496   00098C                     u250:
   497   00098C                     
   498                           ;matrix_keyboard.c: 19:         {;matrix_keyboard.c: 20:             uconce=0;
   499   00098C  0E00               	movlw	0
   500   00098E  6E31               	movwf	read_switches@uconce^0,c
   501                           
   502                           ;matrix_keyboard.c: 21:             return uckey;
   503   000990  505D               	movf	read_switches@uckey^0,w,c
   504   000992  EFD8  F004         	goto	l83
   505   000996                     l1045:
   506   000996  285D               	incf	read_switches@uckey^0,w,c
   507   000998  A4D8               	btfss	status,2,c
   508   00099A  EFD1  F004         	goto	u261
   509   00099E  EFD3  F004         	goto	u260
   510   0009A2                     u261:
   511   0009A2  EFD7  F004         	goto	l85
   512   0009A6                     u260:
   513   0009A6                     
   514                           ;matrix_keyboard.c: 24:             uconce = 1;
   515   0009A6  0E01               	movlw	1
   516   0009A8  6E31               	movwf	read_switches@uconce^0,c
   517   0009AA  EFD7  F004         	goto	l1049
   518   0009AE                     l85:
   519   0009AE                     l1049:
   520                           
   521                           ;matrix_keyboard.c: 26:     return 0xFF;
   522   0009AE  0EFF               	movlw	255
   523   0009B0                     l83:
   524   0009B0  0012               	return		;funcret
   525   0009B2                     __end_of_read_switches:
   526                           	callstack 0
   527                           
   528 ;; *************** function _scan_key *****************
   529 ;; Defined at:
   530 ;;		line 29 in file "matrix_keyboard.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      unsigned char 
   537 ;; Registers used:
   538 ;;		wreg
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   544 ;;      Params:         0       0       0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0
   547 ;;      Totals:         0       0       0       0       0       0       0
   548 ;;Total ram usage:        0 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_read_switches
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text2
   558   0009B2                     __ptext2:
   559                           	callstack 0
   560   0009B2                     _scan_key:
   561                           	callstack 29
   562   0009B2                     
   563                           ;matrix_keyboard.c: 31:     PORTBbits.RB5 = 0, PORTBbits.RB6 = 1, PORTBbits.RB7 = 1;
   564   0009B2  9A81               	bcf	129,5,c	;volatile
   565   0009B4  8C81               	bsf	129,6,c	;volatile
   566   0009B6  8E81               	bsf	129,7,c	;volatile
   567                           
   568                           ;matrix_keyboard.c: 32:     if( PORTBbits.RB1 == 0)
   569   0009B8  B281               	btfsc	129,1,c	;volatile
   570   0009BA  EFE1  F004         	goto	u191
   571   0009BE  EFE3  F004         	goto	u190
   572   0009C2                     u191:
   573   0009C2  EFE6  F004         	goto	l91
   574   0009C6                     u190:
   575   0009C6                     
   576                           ;matrix_keyboard.c: 33:         return 1;
   577   0009C6  0E01               	movlw	1
   578   0009C8  EF02  F005         	goto	l92
   579   0009CC                     l91:
   580                           
   581                           ;matrix_keyboard.c: 41:     PORTBbits.RB5 = 1, PORTBbits.RB6 = 0, PORTBbits.RB7 = 1;
   582   0009CC  8A81               	bsf	129,5,c	;volatile
   583   0009CE  9C81               	bcf	129,6,c	;volatile
   584   0009D0  8E81               	bsf	129,7,c	;volatile
   585                           
   586                           ;matrix_keyboard.c: 42:     if( PORTBbits.RB1 == 0)
   587   0009D2  B281               	btfsc	129,1,c	;volatile
   588   0009D4  EFEE  F004         	goto	u201
   589   0009D8  EFF0  F004         	goto	u200
   590   0009DC                     u201:
   591   0009DC  EFF3  F004         	goto	l93
   592   0009E0                     u200:
   593   0009E0                     
   594                           ;matrix_keyboard.c: 43:         return 2;
   595   0009E0  0E02               	movlw	2
   596   0009E2  EF02  F005         	goto	l92
   597   0009E6                     l93:
   598                           
   599                           ;matrix_keyboard.c: 51:     PORTBbits.RB5 = 1, PORTBbits.RB6 = 1, PORTBbits.RB7 = 0, POR
      +                          TBbits.RB7 = 0;
   600   0009E6  8A81               	bsf	129,5,c	;volatile
   601   0009E8  8C81               	bsf	129,6,c	;volatile
   602   0009EA  9E81               	bcf	129,7,c	;volatile
   603   0009EC  9E81               	bcf	129,7,c	;volatile
   604                           
   605                           ;matrix_keyboard.c: 52:     if( PORTBbits.RB1 == 0)
   606   0009EE  B281               	btfsc	129,1,c	;volatile
   607   0009F0  EFFC  F004         	goto	u211
   608   0009F4  EFFE  F004         	goto	u210
   609   0009F8                     u211:
   610   0009F8  EF01  F005         	goto	l1005
   611   0009FC                     u210:
   612   0009FC                     
   613                           ;matrix_keyboard.c: 53:         return 3;
   614   0009FC  0E03               	movlw	3
   615   0009FE  EF02  F005         	goto	l92
   616   000A02                     l1005:
   617                           
   618                           ;matrix_keyboard.c: 61:         return 0xFF;
   619   000A02  0EFF               	movlw	255
   620   000A04                     l92:
   621   000A04  0012               	return		;funcret
   622   000A06                     __end_of_scan_key:
   623                           	callstack 0
   624                           
   625 ;; *************** function _init_config *****************
   626 ;; Defined at:
   627 ;;		line 9 in file "main.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   641 ;;      Params:         0       0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 2
   648 ;; This function calls:
   649 ;;		_init_animation
   650 ;;		_init_clcd
   651 ;;		_init_matrixkeypad
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text3
   658   000BCC                     __ptext3:
   659                           	callstack 0
   660   000BCC                     _init_config:
   661                           	callstack 28
   662   000BCC                     
   663                           ;main.c: 10:     init_matrixkeypad();
   664   000BCC  ECED  F005         	call	_init_matrixkeypad	;wreg free
   665                           
   666                           ;main.c: 11:     init_clcd();
   667   000BD0  EC46  F004         	call	_init_clcd	;wreg free
   668   000BD4                     
   669                           ;main.c: 12:     init_animation();
   670   000BD4  EC14  F003         	call	_init_animation	;wreg free
   671   000BD8  0012               	return		;funcret
   672   000BDA                     __end_of_init_config:
   673                           	callstack 0
   674                           
   675 ;; *************** function _init_matrixkeypad *****************
   676 ;; Defined at:
   677 ;;		line 3 in file "matrix_keyboard.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   691 ;;      Params:         0       0       0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0
   694 ;;      Totals:         0       0       0       0       0       0       0
   695 ;;Total ram usage:        0 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_init_config
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text4
   705   000BDA                     __ptext4:
   706                           	callstack 0
   707   000BDA                     _init_matrixkeypad:
   708                           	callstack 29
   709   000BDA                     
   710                           ;matrix_keyboard.c: 5:     PORTB =0x00;
   711   000BDA  0E00               	movlw	0
   712   000BDC  6E81               	movwf	129,c	;volatile
   713   000BDE                     
   714                           ;matrix_keyboard.c: 6:     TRISB = TRISB & 0x1E;
   715   000BDE  5093               	movf	147,w,c	;volatile
   716   000BE0  0B1E               	andlw	30
   717   000BE2  6E93               	movwf	147,c	;volatile
   718   000BE4                     
   719                           ;matrix_keyboard.c: 7:     RBPU=0;
   720   000BE4  9EF1               	bcf	4081,7,c	;volatile
   721   000BE6  0012               	return		;funcret
   722   000BE8                     __end_of_init_matrixkeypad:
   723                           	callstack 0
   724                           
   725 ;; *************** function _init_clcd *****************
   726 ;; Defined at:
   727 ;;		line 26 in file "clcd.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   741 ;;      Params:         0       0       0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0
   743 ;;      Temps:          2       0       0       0       0       0       0
   744 ;;      Totals:         2       0       0       0       0       0       0
   745 ;;Total ram usage:        2 bytes
   746 ;; Hardware stack levels used: 1
   747 ;; Hardware stack levels required when called: 1
   748 ;; This function calls:
   749 ;;		_clcd_write
   750 ;; This function is called by:
   751 ;;		_init_config
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text5
   756   00088C                     __ptext5:
   757                           	callstack 0
   758   00088C                     _init_clcd:
   759                           	callstack 28
   760   00088C                     
   761                           ;clcd.c: 29:  TRISD = 0x00;
   762   00088C  0E00               	movlw	0
   763   00088E  6E95               	movwf	149,c	;volatile
   764   000890                     
   765                           ;clcd.c: 31:  TRISC = TRISC & 0xF8;
   766   000890  5094               	movf	148,w,c	;volatile
   767   000892  0BF8               	andlw	248
   768   000894  6E94               	movwf	148,c	;volatile
   769   000896                     
   770                           ;clcd.c: 33:  PORTCbits.RC0 = 0;
   771   000896  9082               	bcf	130,0,c	;volatile
   772   000898                     
   773                           ;clcd.c: 37:     _delay((unsigned long)((40)*(20000000/4000.0)));
   774   000898  0E02               	movlw	2
   775   00089A  6E35               	movwf	(??_init_clcd+1)^0,c
   776   00089C  0E04               	movlw	4
   777   00089E  6E34               	movwf	??_init_clcd^0,c
   778   0008A0  0EBA               	movlw	186
   779   0008A2                     u457:
   780   0008A2  2EE8               	decfsz	wreg,f,c
   781   0008A4  D7FE               	bra	u457
   782   0008A6  2E34               	decfsz	??_init_clcd^0,f,c
   783   0008A8  D7FC               	bra	u457
   784   0008AA  2E35               	decfsz	(??_init_clcd+1)^0,f,c
   785   0008AC  D7FA               	bra	u457
   786   0008AE  D000               	nop2	
   787   0008B0                     
   788                           ;clcd.c: 40:     clcd_write(0x33, 0 );
   789   0008B0  0E00               	movlw	0
   790   0008B2  6E32               	movwf	clcd_write@control_bit^0,c
   791   0008B4  0E33               	movlw	51
   792   0008B6  EC68  F005         	call	_clcd_write
   793   0008BA                     
   794                           ;clcd.c: 41:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   795   0008BA  0E1B               	movlw	27
   796   0008BC  6E34               	movwf	??_init_clcd^0,c
   797   0008BE  0E9E               	movlw	158
   798   0008C0                     u467:
   799   0008C0  2EE8               	decfsz	wreg,f,c
   800   0008C2  D7FE               	bra	u467
   801   0008C4  2E34               	decfsz	??_init_clcd^0,f,c
   802   0008C6  D7FC               	bra	u467
   803   0008C8  D000               	nop2	
   804   0008CA                     
   805                           ;clcd.c: 42:     clcd_write(0x33, 0 );
   806   0008CA  0E00               	movlw	0
   807   0008CC  6E32               	movwf	clcd_write@control_bit^0,c
   808   0008CE  0E33               	movlw	51
   809   0008D0  EC68  F005         	call	_clcd_write
   810   0008D4                     
   811                           ;clcd.c: 43:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   812   0008D4  0EA6               	movlw	166
   813   0008D6                     u477:
   814   0008D6  2EE8               	decfsz	wreg,f,c
   815   0008D8  D7FE               	bra	u477
   816   0008DA  D000               	nop2	
   817   0008DC                     
   818                           ;clcd.c: 44:     clcd_write(0x33, 0 );
   819   0008DC  0E00               	movlw	0
   820   0008DE  6E32               	movwf	clcd_write@control_bit^0,c
   821   0008E0  0E33               	movlw	51
   822   0008E2  EC68  F005         	call	_clcd_write
   823   0008E6                     
   824                           ;clcd.c: 45:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   825   0008E6  D000               	nop2		;2 cycle nop
   826   0008E8  D000               	nop2		;2 cycle nop
   827   0008EA  F000               	nop	
   828   0008EC                     
   829                           ;clcd.c: 47:     clcd_write(0x02, 0);
   830   0008EC  0E00               	movlw	0
   831   0008EE  6E32               	movwf	clcd_write@control_bit^0,c
   832   0008F0  0E02               	movlw	2
   833   0008F2  EC68  F005         	call	_clcd_write
   834   0008F6                     
   835                           ;clcd.c: 48:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   836   0008F6  0EA6               	movlw	166
   837   0008F8                     u487:
   838   0008F8  2EE8               	decfsz	wreg,f,c
   839   0008FA  D7FE               	bra	u487
   840   0008FC  D000               	nop2	
   841   0008FE                     
   842                           ;clcd.c: 49:     clcd_write(0x38, 0);
   843   0008FE  0E00               	movlw	0
   844   000900  6E32               	movwf	clcd_write@control_bit^0,c
   845   000902  0E38               	movlw	56
   846   000904  EC68  F005         	call	_clcd_write
   847   000908                     
   848                           ;clcd.c: 50:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   849   000908  0EA6               	movlw	166
   850   00090A                     u497:
   851   00090A  2EE8               	decfsz	wreg,f,c
   852   00090C  D7FE               	bra	u497
   853   00090E  D000               	nop2	
   854   000910                     
   855                           ;clcd.c: 51:     clcd_write(0x01, 0);
   856   000910  0E00               	movlw	0
   857   000912  6E32               	movwf	clcd_write@control_bit^0,c
   858   000914  0E01               	movlw	1
   859   000916  EC68  F005         	call	_clcd_write
   860   00091A                     
   861                           ;clcd.c: 52:     _delay((unsigned long)((500)*(20000000/4000000.0)));
   862   00091A  0E04               	movlw	4
   863   00091C  6E34               	movwf	??_init_clcd^0,c
   864   00091E  0E3E               	movlw	62
   865   000920                     u507:
   866   000920  2EE8               	decfsz	wreg,f,c
   867   000922  D7FE               	bra	u507
   868   000924  2E34               	decfsz	??_init_clcd^0,f,c
   869   000926  D7FC               	bra	u507
   870   000928                     
   871                           ;clcd.c: 53:     clcd_write(0x0C, 0);
   872   000928  0E00               	movlw	0
   873   00092A  6E32               	movwf	clcd_write@control_bit^0,c
   874   00092C  0E0C               	movlw	12
   875   00092E  EC68  F005         	call	_clcd_write
   876   000932                     
   877                           ;clcd.c: 54:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   878   000932  0EA6               	movlw	166
   879   000934                     u517:
   880   000934  2EE8               	decfsz	wreg,f,c
   881   000936  D7FE               	bra	u517
   882   000938  D000               	nop2	
   883   00093A  0012               	return		;funcret
   884   00093C                     __end_of_init_clcd:
   885                           	callstack 0
   886                           
   887 ;; *************** function _init_animation *****************
   888 ;; Defined at:
   889 ;;		line 3 in file "car animation.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  i               2   40[COMRAM] int 
   894 ;;  i               2   38[COMRAM] int 
   895 ;;  i               2   36[COMRAM] int 
   896 ;;  i               2   34[COMRAM] int 
   897 ;;  n               8   26[COMRAM] unsigned char [8]
   898 ;;  m               8   18[COMRAM] unsigned char [8]
   899 ;;  secondhalfca    8   10[COMRAM] unsigned char [8]
   900 ;;  firsthalfcar    8    2[COMRAM] unsigned char [8]
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   910 ;;      Params:         0       0       0       0       0       0       0
   911 ;;      Locals:        40       0       0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0
   913 ;;      Totals:        40       0       0       0       0       0       0
   914 ;;Total ram usage:       40 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; Hardware stack levels required when called: 1
   917 ;; This function calls:
   918 ;;		_clcd_write
   919 ;; This function is called by:
   920 ;;		_init_config
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text6
   925   000628                     __ptext6:
   926                           	callstack 0
   927   000628                     _init_animation:
   928                           	callstack 28
   929   000628                     
   930                           ;car animation.c: 5:     char firsthalfcar[8] = { 0x00, 0x07, 0x04, 0x0E, 0x1F, 0x04, 0x
      +                          00,0x00};
   931   000628  EE20  F029         	lfsr	2,init_animation@F10462
   932   00062C  EE10  F034         	lfsr	1,init_animation@firsthalfcar
   933   000630  0E07               	movlw	7
   934   000632                     u371:
   935   000632  CFDB FFE3          	movff	plusw2,plusw1
   936   000636  06E8               	decf	wreg,f,c
   937   000638  E2FC               	bc	u371
   938                           
   939                           ;car animation.c: 6:     char secondhalfcar[8] = { 0x00, 0x1C, 0x04, 0x0E, 0x1F, 0x04, 0
      +                          x00,0x00};
   940   00063A  EE20  F021         	lfsr	2,init_animation@F10464
   941   00063E  EE10  F03C         	lfsr	1,init_animation@secondhalfcar
   942   000642  0E07               	movlw	7
   943   000644                     u381:
   944   000644  CFDB FFE3          	movff	plusw2,plusw1
   945   000648  06E8               	decf	wreg,f,c
   946   00064A  E2FC               	bc	u381
   947                           
   948                           ;car animation.c: 7:     char m[8]=
   949   00064C  EE20  F019         	lfsr	2,init_animation@F10466
   950   000650  EE10  F044         	lfsr	1,init_animation@m
   951   000654  0E07               	movlw	7
   952   000656                     u391:
   953   000656  CFDB FFE3          	movff	plusw2,plusw1
   954   00065A  06E8               	decf	wreg,f,c
   955   00065C  E2FC               	bc	u391
   956                           
   957                           ;car animation.c: 18:     char n[8]={
   958   00065E  EE20  F011         	lfsr	2,init_animation@F10468
   959   000662  EE10  F04C         	lfsr	1,init_animation@n
   960   000666  0E07               	movlw	7
   961   000668                     u401:
   962   000668  CFDB FFE3          	movff	plusw2,plusw1
   963   00066C  06E8               	decf	wreg,f,c
   964   00066E  E2FC               	bc	u401
   965   000670                     
   966                           ;car animation.c: 29:     clcd_write(0x40,0);
   967   000670  0E00               	movlw	0
   968   000672  6E32               	movwf	clcd_write@control_bit^0,c
   969   000674  0E40               	movlw	64
   970   000676  EC68  F005         	call	_clcd_write
   971   00067A                     
   972                           ;car animation.c: 30:     for (int i=0; i<8; i++)
   973   00067A  0E00               	movlw	0
   974   00067C  6E55               	movwf	(init_animation@i+1)^0,c
   975   00067E  0E00               	movlw	0
   976   000680  6E54               	movwf	init_animation@i^0,c
   977   000682                     l1169:
   978                           
   979                           ;car animation.c: 31:         clcd_write(firsthalfcar[i],1);
   980   000682  0E01               	movlw	1
   981   000684  6E32               	movwf	clcd_write@control_bit^0,c
   982   000686  0E34               	movlw	low init_animation@firsthalfcar
   983   000688  2454               	addwf	init_animation@i^0,w,c
   984   00068A  6ED9               	movwf	fsr2l,c
   985   00068C  0E00               	movlw	high init_animation@firsthalfcar
   986   00068E  2055               	addwfc	(init_animation@i+1)^0,w,c
   987   000690  6EDA               	movwf	fsr2h,c
   988   000692  50DF               	movf	indf2,w,c
   989   000694  EC68  F005         	call	_clcd_write
   990   000698  4A54               	infsnz	init_animation@i^0,f,c
   991   00069A  2A55               	incf	(init_animation@i+1)^0,f,c
   992   00069C  BE55               	btfsc	(init_animation@i+1)^0,7,c
   993   00069E  EF5A  F003         	goto	u411
   994   0006A2  5055               	movf	(init_animation@i+1)^0,w,c
   995   0006A4  E109               	bnz	u410
   996   0006A6  0E08               	movlw	8
   997   0006A8  5C54               	subwf	init_animation@i^0,w,c
   998   0006AA  A0D8               	btfss	status,0,c
   999   0006AC  EF5A  F003         	goto	u411
  1000   0006B0  EF5C  F003         	goto	u410
  1001   0006B4                     u411:
  1002   0006B4  EF41  F003         	goto	l1169
  1003   0006B8                     u410:
  1004   0006B8                     
  1005                           ;car animation.c: 32:     clcd_write(0x48,0);
  1006   0006B8  0E00               	movlw	0
  1007   0006BA  6E32               	movwf	clcd_write@control_bit^0,c
  1008   0006BC  0E48               	movlw	72
  1009   0006BE  EC68  F005         	call	_clcd_write
  1010   0006C2                     
  1011                           ;car animation.c: 33:     for (int i=0; i<8; i++)
  1012   0006C2  0E00               	movlw	0
  1013   0006C4  6E57               	movwf	(init_animation@i_385+1)^0,c
  1014   0006C6  0E00               	movlw	0
  1015   0006C8  6E56               	movwf	init_animation@i_385^0,c
  1016   0006CA                     l1183:
  1017                           
  1018                           ;car animation.c: 34:         clcd_write(secondhalfcar[i],1);
  1019   0006CA  0E01               	movlw	1
  1020   0006CC  6E32               	movwf	clcd_write@control_bit^0,c
  1021   0006CE  0E3C               	movlw	low init_animation@secondhalfcar
  1022   0006D0  2456               	addwf	init_animation@i_385^0,w,c
  1023   0006D2  6ED9               	movwf	fsr2l,c
  1024   0006D4  0E00               	movlw	high init_animation@secondhalfcar
  1025   0006D6  2057               	addwfc	(init_animation@i_385+1)^0,w,c
  1026   0006D8  6EDA               	movwf	fsr2h,c
  1027   0006DA  50DF               	movf	indf2,w,c
  1028   0006DC  EC68  F005         	call	_clcd_write
  1029   0006E0  4A56               	infsnz	init_animation@i_385^0,f,c
  1030   0006E2  2A57               	incf	(init_animation@i_385+1)^0,f,c
  1031   0006E4  BE57               	btfsc	(init_animation@i_385+1)^0,7,c
  1032   0006E6  EF7E  F003         	goto	u421
  1033   0006EA  5057               	movf	(init_animation@i_385+1)^0,w,c
  1034   0006EC  E109               	bnz	u420
  1035   0006EE  0E08               	movlw	8
  1036   0006F0  5C56               	subwf	init_animation@i_385^0,w,c
  1037   0006F2  A0D8               	btfss	status,0,c
  1038   0006F4  EF7E  F003         	goto	u421
  1039   0006F8  EF80  F003         	goto	u420
  1040   0006FC                     u421:
  1041   0006FC  EF65  F003         	goto	l1183
  1042   000700                     u420:
  1043   000700                     
  1044                           ;car animation.c: 35:         clcd_write(0x50,0);
  1045   000700  0E00               	movlw	0
  1046   000702  6E32               	movwf	clcd_write@control_bit^0,c
  1047   000704  0E50               	movlw	80
  1048   000706  EC68  F005         	call	_clcd_write
  1049   00070A                     
  1050                           ;car animation.c: 36:     for (int i=0; i<8; i++)
  1051   00070A  0E00               	movlw	0
  1052   00070C  6E59               	movwf	(init_animation@i_386+1)^0,c
  1053   00070E  0E00               	movlw	0
  1054   000710  6E58               	movwf	init_animation@i_386^0,c
  1055   000712                     l1197:
  1056                           
  1057                           ;car animation.c: 37:         clcd_write(m[i],1);
  1058   000712  0E01               	movlw	1
  1059   000714  6E32               	movwf	clcd_write@control_bit^0,c
  1060   000716  0E44               	movlw	low init_animation@m
  1061   000718  2458               	addwf	init_animation@i_386^0,w,c
  1062   00071A  6ED9               	movwf	fsr2l,c
  1063   00071C  0E00               	movlw	high init_animation@m
  1064   00071E  2059               	addwfc	(init_animation@i_386+1)^0,w,c
  1065   000720  6EDA               	movwf	fsr2h,c
  1066   000722  50DF               	movf	indf2,w,c
  1067   000724  EC68  F005         	call	_clcd_write
  1068   000728  4A58               	infsnz	init_animation@i_386^0,f,c
  1069   00072A  2A59               	incf	(init_animation@i_386+1)^0,f,c
  1070   00072C  BE59               	btfsc	(init_animation@i_386+1)^0,7,c
  1071   00072E  EFA2  F003         	goto	u431
  1072   000732  5059               	movf	(init_animation@i_386+1)^0,w,c
  1073   000734  E109               	bnz	u430
  1074   000736  0E08               	movlw	8
  1075   000738  5C58               	subwf	init_animation@i_386^0,w,c
  1076   00073A  A0D8               	btfss	status,0,c
  1077   00073C  EFA2  F003         	goto	u431
  1078   000740  EFA4  F003         	goto	u430
  1079   000744                     u431:
  1080   000744  EF89  F003         	goto	l1197
  1081   000748                     u430:
  1082   000748                     
  1083                           ;car animation.c: 38:     clcd_write(0x58,0);
  1084   000748  0E00               	movlw	0
  1085   00074A  6E32               	movwf	clcd_write@control_bit^0,c
  1086   00074C  0E58               	movlw	88
  1087   00074E  EC68  F005         	call	_clcd_write
  1088   000752                     
  1089                           ;car animation.c: 39:     for (int i=0; i<8; i++)
  1090   000752  0E00               	movlw	0
  1091   000754  6E5B               	movwf	(init_animation@i_387+1)^0,c
  1092   000756  0E00               	movlw	0
  1093   000758  6E5A               	movwf	init_animation@i_387^0,c
  1094   00075A                     l1211:
  1095                           
  1096                           ;car animation.c: 40:         clcd_write(n[i],1);
  1097   00075A  0E01               	movlw	1
  1098   00075C  6E32               	movwf	clcd_write@control_bit^0,c
  1099   00075E  0E4C               	movlw	low init_animation@n
  1100   000760  245A               	addwf	init_animation@i_387^0,w,c
  1101   000762  6ED9               	movwf	fsr2l,c
  1102   000764  0E00               	movlw	high init_animation@n
  1103   000766  205B               	addwfc	(init_animation@i_387+1)^0,w,c
  1104   000768  6EDA               	movwf	fsr2h,c
  1105   00076A  50DF               	movf	indf2,w,c
  1106   00076C  EC68  F005         	call	_clcd_write
  1107   000770  4A5A               	infsnz	init_animation@i_387^0,f,c
  1108   000772  2A5B               	incf	(init_animation@i_387+1)^0,f,c
  1109   000774  BE5B               	btfsc	(init_animation@i_387+1)^0,7,c
  1110   000776  EFC6  F003         	goto	u441
  1111   00077A  505B               	movf	(init_animation@i_387+1)^0,w,c
  1112   00077C  E109               	bnz	u440
  1113   00077E  0E08               	movlw	8
  1114   000780  5C5A               	subwf	init_animation@i_387^0,w,c
  1115   000782  A0D8               	btfss	status,0,c
  1116   000784  EFC6  F003         	goto	u441
  1117   000788  EFC8  F003         	goto	u440
  1118   00078C                     u441:
  1119   00078C  EFAD  F003         	goto	l1211
  1120   000790                     u440:
  1121   000790  0012               	return		;funcret
  1122   000792                     __end_of_init_animation:
  1123                           	callstack 0
  1124                           
  1125 ;; *************** function _display_dashboard *****************
  1126 ;; Defined at:
  1127 ;;		line 5 in file "car_black_box.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  uckey           1    wreg     unsigned char 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  uckey           1    7[COMRAM] unsigned char 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1141 ;;      Params:         0       0       0       0       0       0       0
  1142 ;;      Locals:         1       0       0       0       0       0       0
  1143 ;;      Temps:          0       0       0       0       0       0       0
  1144 ;;      Totals:         1       0       0       0       0       0       0
  1145 ;;Total ram usage:        1 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; Hardware stack levels required when called: 3
  1148 ;; This function calls:
  1149 ;;		_car_animation
  1150 ;;		_clcd_print
  1151 ;;		_display_speed
  1152 ;;		_display_time
  1153 ;;		_gear_monitor
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text7
  1160   000B5E                     __ptext7:
  1161                           	callstack 0
  1162   000B5E                     _display_dashboard:
  1163                           	callstack 27
  1164                           
  1165                           ;incstack = 0
  1166                           ;display_dashboard@uckey stored from wreg
  1167   000B5E  6E39               	movwf	display_dashboard@uckey^0,c
  1168   000B60                     
  1169                           ;car_black_box.c: 5: void display_dashboard(unsigned char uckey);car_black_box.c: 6: {;c
      +                          ar_black_box.c: 7:     clcd_print( (unsigned char*) "TIME   E  SP" , (0x80 + (4)));
  1170   000B60  0E01               	movlw	low STR_9
  1171   000B62  6E34               	movwf	clcd_print@data^0,c
  1172   000B64  0E06               	movlw	high STR_9
  1173   000B66  6E35               	movwf	(clcd_print@data+1)^0,c
  1174   000B68  0E84               	movlw	132
  1175   000B6A  6E36               	movwf	clcd_print@addr^0,c
  1176   000B6C  EC2C  F005         	call	_clcd_print	;wreg free
  1177   000B70                     
  1178                           ;car_black_box.c: 8:     car_animation();
  1179   000B70  EC9A  F005         	call	_car_animation	;wreg free
  1180   000B74                     
  1181                           ;car_black_box.c: 9:     display_time();
  1182   000B74  EC03  F005         	call	_display_time	;wreg free
  1183   000B78                     
  1184                           ;car_black_box.c: 10:     gear_monitor(uckey);
  1185   000B78  5039               	movf	display_dashboard@uckey^0,w,c
  1186   000B7A  ECC9  F003         	call	_gear_monitor
  1187   000B7E                     
  1188                           ;car_black_box.c: 11:     display_speed();
  1189   000B7E  ECDB  F005         	call	_display_speed	;wreg free
  1190   000B82  0012               	return		;funcret
  1191   000B84                     __end_of_display_dashboard:
  1192                           	callstack 0
  1193                           
  1194 ;; *************** function _gear_monitor *****************
  1195 ;; Defined at:
  1196 ;;		line 24 in file "car_black_box.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  uckey           1    wreg     unsigned char 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  uckey           1    6[COMRAM] unsigned char 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1210 ;;      Params:         0       0       0       0       0       0       0
  1211 ;;      Locals:         1       0       0       0       0       0       0
  1212 ;;      Temps:          2       0       0       0       0       0       0
  1213 ;;      Totals:         3       0       0       0       0       0       0
  1214 ;;Total ram usage:        3 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; Hardware stack levels required when called: 2
  1217 ;; This function calls:
  1218 ;;		_clcd_putch
  1219 ;; This function is called by:
  1220 ;;		_display_dashboard
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text8
  1225   000792                     __ptext8:
  1226                           	callstack 0
  1227   000792                     _gear_monitor:
  1228                           	callstack 27
  1229                           
  1230                           ;incstack = 0
  1231                           ;gear_monitor@uckey stored from wreg
  1232   000792  6E38               	movwf	gear_monitor@uckey^0,c
  1233   000794                     
  1234                           ;car_black_box.c: 25:     static char signindex=0, crashflag=0;;car_black_box.c: 26:    
      +                           if(uckey == 1)
  1235   000794  0438               	decf	gear_monitor@uckey^0,w,c
  1236   000796  A4D8               	btfss	status,2,c
  1237   000798  EFD0  F003         	goto	u301
  1238   00079C  EFD2  F003         	goto	u300
  1239   0007A0                     u301:
  1240   0007A0  EFD8  F003         	goto	l1097
  1241   0007A4                     u300:
  1242   0007A4                     
  1243                           ;car_black_box.c: 27:     {;car_black_box.c: 28:         crashflag=1;
  1244   0007A4  0E01               	movlw	1
  1245   0007A6  6E5E               	movwf	gear_monitor@crashflag^0,c
  1246                           
  1247                           ;car_black_box.c: 29:         signindex=7;
  1248   0007A8  0E07               	movlw	7
  1249   0007AA  6E5F               	movwf	gear_monitor@signindex^0,c
  1250                           
  1251                           ;car_black_box.c: 30:     }
  1252   0007AC  EF19  F004         	goto	l1117
  1253   0007B0                     l1097:
  1254   0007B0  0E02               	movlw	2
  1255   0007B2  1838               	xorwf	gear_monitor@uckey^0,w,c
  1256   0007B4  A4D8               	btfss	status,2,c
  1257   0007B6  EFDF  F003         	goto	u311
  1258   0007BA  EFE1  F003         	goto	u310
  1259   0007BE                     u311:
  1260   0007BE  EFFB  F003         	goto	l1107
  1261   0007C2                     u310:
  1262   0007C2                     
  1263                           ;car_black_box.c: 32:     {;car_black_box.c: 33:         if(signindex < 6)
  1264   0007C2  0E06               	movlw	6
  1265   0007C4  605F               	cpfslt	gear_monitor@signindex^0,c
  1266   0007C6  EFE7  F003         	goto	u321
  1267   0007CA  EFE9  F003         	goto	u320
  1268   0007CE                     u321:
  1269   0007CE  EFEC  F003         	goto	l1103
  1270   0007D2                     u320:
  1271   0007D2                     
  1272                           ;car_black_box.c: 34:             signindex++;
  1273   0007D2  2A5F               	incf	gear_monitor@signindex^0,f,c
  1274   0007D4  EF19  F004         	goto	l1117
  1275   0007D8                     l1103:
  1276   0007D8  0E07               	movlw	7
  1277   0007DA  185F               	xorwf	gear_monitor@signindex^0,w,c
  1278   0007DC  A4D8               	btfss	status,2,c
  1279   0007DE  EFF3  F003         	goto	u331
  1280   0007E2  EFF5  F003         	goto	u330
  1281   0007E6                     u331:
  1282   0007E6  EF19  F004         	goto	l33
  1283   0007EA                     u330:
  1284   0007EA                     
  1285                           ;car_black_box.c: 36:         {;car_black_box.c: 37:             signindex=1;
  1286   0007EA  0E01               	movlw	1
  1287   0007EC  6E5F               	movwf	gear_monitor@signindex^0,c
  1288                           
  1289                           ;car_black_box.c: 38:             crashflag=0;
  1290   0007EE  0E00               	movlw	0
  1291   0007F0  6E5E               	movwf	gear_monitor@crashflag^0,c
  1292   0007F2  EF19  F004         	goto	l1117
  1293   0007F6                     l1107:
  1294   0007F6  0E03               	movlw	3
  1295   0007F8  1838               	xorwf	gear_monitor@uckey^0,w,c
  1296   0007FA  A4D8               	btfss	status,2,c
  1297   0007FC  EF02  F004         	goto	u341
  1298   000800  EF04  F004         	goto	u340
  1299   000804                     u341:
  1300   000804  EF19  F004         	goto	l1117
  1301   000808                     u340:
  1302   000808                     
  1303                           ;car_black_box.c: 42:     {;car_black_box.c: 43:            if(crashflag==1);
  1304   000808  045E               	decf	gear_monitor@crashflag^0,w,c
  1305   00080A  A4D8               	btfss	status,2,c
  1306   00080C  EF0A  F004         	goto	u351
  1307   000810  EF0C  F004         	goto	u350
  1308   000814                     u351:
  1309   000814  EF0E  F004         	goto	l1113
  1310   000818                     u350:
  1311   000818  EF19  F004         	goto	l1117
  1312   00081C                     l1113:
  1313   00081C  0E01               	movlw	1
  1314   00081E  645F               	cpfsgt	gear_monitor@signindex^0,c
  1315   000820  EF14  F004         	goto	u361
  1316   000824  EF16  F004         	goto	u360
  1317   000828                     u361:
  1318   000828  EF19  F004         	goto	l1117
  1319   00082C                     u360:
  1320   00082C                     
  1321                           ;car_black_box.c: 45:                 signindex--;
  1322   00082C  065F               	decf	gear_monitor@signindex^0,f,c
  1323   00082E  EF19  F004         	goto	l1117
  1324   000832                     l33:
  1325   000832                     l1117:
  1326                           
  1327                           ;car_black_box.c: 47:     clcd_putch(signature[signindex][0], (0xC0 + (11)));
  1328   000832  0ECB               	movlw	203
  1329   000834  6E34               	movwf	clcd_putch@addr^0,c
  1330   000836  505F               	movf	gear_monitor@signindex^0,w,c
  1331   000838  0D02               	mullw	2
  1332   00083A  0E01               	movlw	low _signature
  1333   00083C  24F3               	addwf	243,w,c
  1334   00083E  6ED9               	movwf	fsr2l,c
  1335   000840  0E00               	movlw	high _signature
  1336   000842  20F4               	addwfc	prodh,w,c
  1337   000844  6EDA               	movwf	fsr2h,c
  1338   000846  CFDE FFF6          	movff	postinc2,tblptrl
  1339   00084A  CFDD FFF7          	movff	postdec2,tblptrh
  1340   00084E                     	if	0	;tblptru may be non-zero
  1341   00084E                     	endif
  1342   00084E                     	if	0	;tblptru may be non-zero
  1343   00084E                     	endif
  1344   00084E  0008               	tblrd		*
  1345   000850  50F5               	movf	tablat,w,c
  1346   000852  ECCF  F005         	call	_clcd_putch
  1347   000856                     
  1348                           ;car_black_box.c: 48:     clcd_putch(signature[signindex][1], (0xC0 + (12)));
  1349   000856  0ECC               	movlw	204
  1350   000858  6E34               	movwf	clcd_putch@addr^0,c
  1351   00085A  505F               	movf	gear_monitor@signindex^0,w,c
  1352   00085C  0D02               	mullw	2
  1353   00085E  0E01               	movlw	low _signature
  1354   000860  24F3               	addwf	243,w,c
  1355   000862  6ED9               	movwf	fsr2l,c
  1356   000864  0E00               	movlw	high _signature
  1357   000866  20F4               	addwfc	prodh,w,c
  1358   000868  6EDA               	movwf	fsr2h,c
  1359   00086A  CFDE F036          	movff	postinc2,??_gear_monitor
  1360   00086E  CFDD F037          	movff	postdec2,??_gear_monitor+1
  1361   000872  0E01               	movlw	1
  1362   000874  2636               	addwf	??_gear_monitor^0,f,c
  1363   000876  0E00               	movlw	0
  1364   000878  2237               	addwfc	(??_gear_monitor+1)^0,f,c
  1365   00087A  C036  FFF6         	movff	??_gear_monitor,tblptrl
  1366   00087E  C037  FFF7         	movff	??_gear_monitor+1,tblptrh
  1367   000882                     	if	0	;tblptru may be non-zero
  1368   000882                     	endif
  1369   000882                     	if	0	;tblptru may be non-zero
  1370   000882                     	endif
  1371   000882  0008               	tblrd		*
  1372   000884  50F5               	movf	tablat,w,c
  1373   000886  ECCF  F005         	call	_clcd_putch
  1374   00088A  0012               	return		;funcret
  1375   00088C                     __end_of_gear_monitor:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _display_time *****************
  1379 ;; Defined at:
  1380 ;;		line 13 in file "car_black_box.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1394 ;;      Params:         0       0       0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0
  1397 ;;      Totals:         0       0       0       0       0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; Hardware stack levels required when called: 2
  1401 ;; This function calls:
  1402 ;;		_clcd_putch
  1403 ;; This function is called by:
  1404 ;;		_display_dashboard
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text9
  1409   000A06                     __ptext9:
  1410                           	callstack 0
  1411   000A06                     _display_time:
  1412                           	callstack 27
  1413   000A06                     
  1414                           ;car_black_box.c: 14:     clcd_putch('1', (0xC0 + (2)));
  1415   000A06  0EC2               	movlw	194
  1416   000A08  6E34               	movwf	clcd_putch@addr^0,c
  1417   000A0A  0E31               	movlw	49
  1418   000A0C  ECCF  F005         	call	_clcd_putch
  1419                           
  1420                           ;car_black_box.c: 15:     clcd_putch('5', (0xC0 + (3)));
  1421   000A10  0EC3               	movlw	195
  1422   000A12  6E34               	movwf	clcd_putch@addr^0,c
  1423   000A14  0E35               	movlw	53
  1424   000A16  ECCF  F005         	call	_clcd_putch
  1425                           
  1426                           ;car_black_box.c: 16:     clcd_putch(':', (0xC0 + (4)));
  1427   000A1A  0EC4               	movlw	196
  1428   000A1C  6E34               	movwf	clcd_putch@addr^0,c
  1429   000A1E  0E3A               	movlw	58
  1430   000A20  ECCF  F005         	call	_clcd_putch
  1431                           
  1432                           ;car_black_box.c: 17:     clcd_putch('0', (0xC0 + (5)));
  1433   000A24  0EC5               	movlw	197
  1434   000A26  6E34               	movwf	clcd_putch@addr^0,c
  1435   000A28  0E30               	movlw	48
  1436   000A2A  ECCF  F005         	call	_clcd_putch
  1437                           
  1438                           ;car_black_box.c: 18:     clcd_putch('0', (0xC0 + (6)));
  1439   000A2E  0EC6               	movlw	198
  1440   000A30  6E34               	movwf	clcd_putch@addr^0,c
  1441   000A32  0E30               	movlw	48
  1442   000A34  ECCF  F005         	call	_clcd_putch
  1443                           
  1444                           ;car_black_box.c: 19:     clcd_putch(':', (0xC0 + (7)));
  1445   000A38  0EC7               	movlw	199
  1446   000A3A  6E34               	movwf	clcd_putch@addr^0,c
  1447   000A3C  0E3A               	movlw	58
  1448   000A3E  ECCF  F005         	call	_clcd_putch
  1449                           
  1450                           ;car_black_box.c: 20:     clcd_putch('0', (0xC0 + (8)));
  1451   000A42  0EC8               	movlw	200
  1452   000A44  6E34               	movwf	clcd_putch@addr^0,c
  1453   000A46  0E30               	movlw	48
  1454   000A48  ECCF  F005         	call	_clcd_putch
  1455                           
  1456                           ;car_black_box.c: 21:     clcd_putch('0', (0xC0 + (9)));
  1457   000A4C  0EC9               	movlw	201
  1458   000A4E  6E34               	movwf	clcd_putch@addr^0,c
  1459   000A50  0E30               	movlw	48
  1460   000A52  ECCF  F005         	call	_clcd_putch
  1461   000A56  0012               	return		;funcret
  1462   000A58                     __end_of_display_time:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _display_speed *****************
  1466 ;; Defined at:
  1467 ;;		line 51 in file "car_black_box.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;		None
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1481 ;;      Params:         0       0       0       0       0       0       0
  1482 ;;      Locals:         0       0       0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0
  1484 ;;      Totals:         0       0       0       0       0       0       0
  1485 ;;Total ram usage:        0 bytes
  1486 ;; Hardware stack levels used: 1
  1487 ;; Hardware stack levels required when called: 2
  1488 ;; This function calls:
  1489 ;;		_clcd_putch
  1490 ;; This function is called by:
  1491 ;;		_display_dashboard
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text10
  1496   000BB6                     __ptext10:
  1497                           	callstack 0
  1498   000BB6                     _display_speed:
  1499                           	callstack 27
  1500   000BB6                     
  1501                           ;car_black_box.c: 52:         clcd_putch('9', (0xC0 + (14)));
  1502   000BB6  0ECE               	movlw	206
  1503   000BB8  6E34               	movwf	clcd_putch@addr^0,c
  1504   000BBA  0E39               	movlw	57
  1505   000BBC  ECCF  F005         	call	_clcd_putch
  1506                           
  1507                           ;car_black_box.c: 53:         clcd_putch('9', (0xC0 + (15)));
  1508   000BC0  0ECF               	movlw	207
  1509   000BC2  6E34               	movwf	clcd_putch@addr^0,c
  1510   000BC4  0E39               	movlw	57
  1511   000BC6  ECCF  F005         	call	_clcd_putch
  1512   000BCA  0012               	return		;funcret
  1513   000BCC                     __end_of_display_speed:
  1514                           	callstack 0
  1515                           
  1516 ;; *************** function _clcd_print *****************
  1517 ;; Defined at:
  1518 ;;		line 57 in file "clcd.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  data            2    2[COMRAM] PTR const unsigned char 
  1521 ;;		 -> STR_9(13), 
  1522 ;;  addr            1    4[COMRAM] unsigned char 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;		None
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1534 ;;      Params:         3       0       0       0       0       0       0
  1535 ;;      Locals:         0       0       0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0
  1537 ;;      Totals:         3       0       0       0       0       0       0
  1538 ;;Total ram usage:        3 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 1
  1541 ;; This function calls:
  1542 ;;		_clcd_write
  1543 ;; This function is called by:
  1544 ;;		_display_dashboard
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text11
  1549   000A58                     __ptext11:
  1550                           	callstack 0
  1551   000A58                     _clcd_print:
  1552                           	callstack 28
  1553   000A58                     
  1554                           ;clcd.c: 57: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 58: 
      +                          {;clcd.c: 59:  clcd_write(addr, 0);
  1555   000A58  0E00               	movlw	0
  1556   000A5A  6E32               	movwf	clcd_write@control_bit^0,c
  1557   000A5C  5036               	movf	clcd_print@addr^0,w,c
  1558   000A5E  EC68  F005         	call	_clcd_write
  1559                           
  1560                           ;clcd.c: 60:  while (*data != '\0')
  1561   000A62  EF3F  F005         	goto	l1087
  1562   000A66                     l1083:
  1563                           
  1564                           ;clcd.c: 61:  {;clcd.c: 62:   clcd_write(*data++, 1);
  1565   000A66  0E01               	movlw	1
  1566   000A68  6E32               	movwf	clcd_write@control_bit^0,c
  1567   000A6A  C034  FFF6         	movff	clcd_print@data,tblptrl
  1568   000A6E  C035  FFF7         	movff	clcd_print@data+1,tblptrh
  1569   000A72                     	if	0	;tblptru may be non-zero
  1570   000A72                     	endif
  1571   000A72                     	if	0	;tblptru may be non-zero
  1572   000A72                     	endif
  1573   000A72  0008               	tblrd		*
  1574   000A74  50F5               	movf	tablat,w,c
  1575   000A76  EC68  F005         	call	_clcd_write
  1576   000A7A  4A34               	infsnz	clcd_print@data^0,f,c
  1577   000A7C  2A35               	incf	(clcd_print@data+1)^0,f,c
  1578   000A7E                     l1087:
  1579                           
  1580                           ;clcd.c: 60:  while (*data != '\0')
  1581   000A7E  C034  FFF6         	movff	clcd_print@data,tblptrl
  1582   000A82  C035  FFF7         	movff	clcd_print@data+1,tblptrh
  1583   000A86                     	if	0	;tblptru may be non-zero
  1584   000A86                     	endif
  1585   000A86                     	if	0	;tblptru may be non-zero
  1586   000A86                     	endif
  1587   000A86  0008               	tblrd		*
  1588   000A88  50F5               	movf	tablat,w,c
  1589   000A8A  0900               	iorlw	0
  1590   000A8C  A4D8               	btfss	status,2,c
  1591   000A8E  EF4B  F005         	goto	u291
  1592   000A92  EF4D  F005         	goto	u290
  1593   000A96                     u291:
  1594   000A96  EF33  F005         	goto	l1083
  1595   000A9A                     u290:
  1596   000A9A  0012               	return		;funcret
  1597   000A9C                     __end_of_clcd_print:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _car_animation *****************
  1601 ;; Defined at:
  1602 ;;		line 43 in file "car animation.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1616 ;;      Params:         0       0       0       0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0       0       0
  1619 ;;      Totals:         0       0       0       0       0       0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 2
  1623 ;; This function calls:
  1624 ;;		_clcd_putch
  1625 ;; This function is called by:
  1626 ;;		_display_dashboard
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text12
  1631   000B34                     __ptext12:
  1632                           	callstack 0
  1633   000B34                     _car_animation:
  1634                           	callstack 27
  1635   000B34                     
  1636                           ;car animation.c: 46:         clcd_putch( 0x03, (0x80 + (1)));
  1637   000B34  0E81               	movlw	129
  1638   000B36  6E34               	movwf	clcd_putch@addr^0,c
  1639   000B38  0E03               	movlw	3
  1640   000B3A  ECCF  F005         	call	_clcd_putch
  1641                           
  1642                           ;car animation.c: 47:         clcd_putch( 0x02, (0x80 + (0)));
  1643   000B3E  0E80               	movlw	128
  1644   000B40  6E34               	movwf	clcd_putch@addr^0,c
  1645   000B42  0E02               	movlw	2
  1646   000B44  ECCF  F005         	call	_clcd_putch
  1647                           
  1648                           ;car animation.c: 48:         clcd_putch( 0x01, (0xC0 + (1)));
  1649   000B48  0EC1               	movlw	193
  1650   000B4A  6E34               	movwf	clcd_putch@addr^0,c
  1651   000B4C  0E01               	movlw	1
  1652   000B4E  ECCF  F005         	call	_clcd_putch
  1653                           
  1654                           ;car animation.c: 49:         clcd_putch( 0x00, (0xC0 + (0)));
  1655   000B52  0EC0               	movlw	192
  1656   000B54  6E34               	movwf	clcd_putch@addr^0,c
  1657   000B56  0E00               	movlw	0
  1658   000B58  ECCF  F005         	call	_clcd_putch
  1659   000B5C  0012               	return		;funcret
  1660   000B5E                     __end_of_car_animation:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _clcd_putch *****************
  1664 ;; Defined at:
  1665 ;;		line 66 in file "clcd.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  data            1    wreg     const unsigned char 
  1668 ;;  addr            1    2[COMRAM] unsigned char 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  data            1    3[COMRAM] const unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1680 ;;      Params:         1       0       0       0       0       0       0
  1681 ;;      Locals:         1       0       0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0
  1683 ;;      Totals:         2       0       0       0       0       0       0
  1684 ;;Total ram usage:        2 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; Hardware stack levels required when called: 1
  1687 ;; This function calls:
  1688 ;;		_clcd_write
  1689 ;; This function is called by:
  1690 ;;		_display_time
  1691 ;;		_gear_monitor
  1692 ;;		_display_speed
  1693 ;;		_car_animation
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text13
  1698   000B9E                     __ptext13:
  1699                           	callstack 0
  1700   000B9E                     _clcd_putch:
  1701                           	callstack 27
  1702                           
  1703                           ;incstack = 0
  1704                           ;clcd_putch@data stored from wreg
  1705   000B9E  6E35               	movwf	clcd_putch@data^0,c
  1706   000BA0                     
  1707                           ;clcd.c: 66: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 67: {
      +                          ;clcd.c: 68:  clcd_write(addr, 0);
  1708   000BA0  0E00               	movlw	0
  1709   000BA2  6E32               	movwf	clcd_write@control_bit^0,c
  1710   000BA4  5034               	movf	clcd_putch@addr^0,w,c
  1711   000BA6  EC68  F005         	call	_clcd_write
  1712                           
  1713                           ;clcd.c: 69:  clcd_write(data, 1);
  1714   000BAA  0E01               	movlw	1
  1715   000BAC  6E32               	movwf	clcd_write@control_bit^0,c
  1716   000BAE  5035               	movf	clcd_putch@data^0,w,c
  1717   000BB0  EC68  F005         	call	_clcd_write
  1718   000BB4  0012               	return		;funcret
  1719   000BB6                     __end_of_clcd_putch:
  1720                           	callstack 0
  1721                           
  1722 ;; *************** function _clcd_write *****************
  1723 ;; Defined at:
  1724 ;;		line 3 in file "clcd.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  byte            1    wreg     unsigned char 
  1727 ;;  control_bit     1    0[COMRAM] unsigned char 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  byte            1    1[COMRAM] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1739 ;;      Params:         1       0       0       0       0       0       0
  1740 ;;      Locals:         1       0       0       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0
  1742 ;;      Totals:         2       0       0       0       0       0       0
  1743 ;;Total ram usage:        2 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_init_clcd
  1749 ;;		_clcd_print
  1750 ;;		_clcd_putch
  1751 ;;		_init_animation
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text14
  1756   000AD0                     __ptext14:
  1757                           	callstack 0
  1758   000AD0                     _clcd_write:
  1759                           	callstack 28
  1760                           
  1761                           ;incstack = 0
  1762                           ;clcd_write@byte stored from wreg
  1763   000AD0  6E33               	movwf	clcd_write@byte^0,c
  1764   000AD2                     
  1765                           ;clcd.c: 3: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 4: {;
      +                          clcd.c: 5:  PORTCbits.RC1 = control_bit;
  1766   000AD2  B032               	btfsc	clcd_write@control_bit^0,0,c
  1767   000AD4  D002               	bra	u275
  1768   000AD6  9282               	bcf	130,1,c	;volatile
  1769   000AD8  D001               	bra	u276
  1770   000ADA                     u275:
  1771   000ADA  8282               	bsf	130,1,c	;volatile
  1772   000ADC                     u276:
  1773   000ADC                     
  1774                           ;clcd.c: 6:  PORTD = byte;
  1775   000ADC  C033  FF83         	movff	clcd_write@byte,3971	;volatile
  1776   000AE0                     
  1777                           ;clcd.c: 9:  PORTCbits.RC2 = 1;
  1778   000AE0  8482               	bsf	130,2,c	;volatile
  1779   000AE2                     
  1780                           ;clcd.c: 10:  PORTCbits.RC2 = 0;
  1781   000AE2  9482               	bcf	130,2,c	;volatile
  1782   000AE4                     
  1783                           ;clcd.c: 12:  TRISD7 = 1;
  1784   000AE4  8E95               	bsf	3989,7,c	;volatile
  1785   000AE6                     
  1786                           ;clcd.c: 13:  PORTCbits.RC0 = 1;
  1787   000AE6  8082               	bsf	130,0,c	;volatile
  1788   000AE8                     
  1789                           ;clcd.c: 14:  PORTCbits.RC1 = 0;
  1790   000AE8  9282               	bcf	130,1,c	;volatile
  1791   000AEA                     l1073:
  1792                           
  1793                           ;clcd.c: 17:  {;clcd.c: 18:   PORTCbits.RC2 = 1;
  1794   000AEA  8482               	bsf	130,2,c	;volatile
  1795   000AEC                     
  1796                           ;clcd.c: 19:   PORTCbits.RC2 = 0;
  1797   000AEC  9482               	bcf	130,2,c	;volatile
  1798   000AEE                     
  1799                           ;clcd.c: 20:  } while (PORTDbits.RD7);
  1800   000AEE  BE83               	btfsc	131,7,c	;volatile
  1801   000AF0  EF7C  F005         	goto	u281
  1802   000AF4  EF7E  F005         	goto	u280
  1803   000AF8                     u281:
  1804   000AF8  EF75  F005         	goto	l1073
  1805   000AFC                     u280:
  1806   000AFC                     
  1807                           ;clcd.c: 22:  PORTCbits.RC0 = 0;
  1808   000AFC  9082               	bcf	130,0,c	;volatile
  1809                           
  1810                           ;clcd.c: 23:  TRISD7 = 0x00;
  1811   000AFE  9E95               	bcf	3989,7,c	;volatile
  1812   000B00  0012               	return		;funcret
  1813   000B02                     __end_of_clcd_write:
  1814                           	callstack 0
  1815                           
  1816                           	psect	rparam
  1817   000000                     
  1818                           	psect	idloc
  1819                           
  1820                           ;Config register IDLOC0 @ 0x200000
  1821                           ;	unspecified, using default values
  1822   200000                     	org	2097152
  1823   200000  FF                 	db	255
  1824                           
  1825                           ;Config register IDLOC1 @ 0x200001
  1826                           ;	unspecified, using default values
  1827   200001                     	org	2097153
  1828   200001  FF                 	db	255
  1829                           
  1830                           ;Config register IDLOC2 @ 0x200002
  1831                           ;	unspecified, using default values
  1832   200002                     	org	2097154
  1833   200002  FF                 	db	255
  1834                           
  1835                           ;Config register IDLOC3 @ 0x200003
  1836                           ;	unspecified, using default values
  1837   200003                     	org	2097155
  1838   200003  FF                 	db	255
  1839                           
  1840                           ;Config register IDLOC4 @ 0x200004
  1841                           ;	unspecified, using default values
  1842   200004                     	org	2097156
  1843   200004  FF                 	db	255
  1844                           
  1845                           ;Config register IDLOC5 @ 0x200005
  1846                           ;	unspecified, using default values
  1847   200005                     	org	2097157
  1848   200005  FF                 	db	255
  1849                           
  1850                           ;Config register IDLOC6 @ 0x200006
  1851                           ;	unspecified, using default values
  1852   200006                     	org	2097158
  1853   200006  FF                 	db	255
  1854                           
  1855                           ;Config register IDLOC7 @ 0x200007
  1856                           ;	unspecified, using default values
  1857   200007                     	org	2097159
  1858   200007  FF                 	db	255
  1859                           
  1860                           	psect	config
  1861                           
  1862                           ; Padding undefined space
  1863   300000                     	org	3145728
  1864   300000  FF                 	db	255
  1865                           
  1866                           ;Config register CONFIG1H @ 0x300001
  1867                           ;	Oscillator Selection bits
  1868                           ;	OSC = RCIO, External RC oscillator, port function on RA6
  1869                           ;	Fail-Safe Clock Monitor Enable bit
  1870                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1871                           ;	Internal/External Oscillator Switchover bit
  1872                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1873   300001                     	org	3145729
  1874   300001  07                 	db	7
  1875                           
  1876                           ;Config register CONFIG2L @ 0x300002
  1877                           ;	Power-up Timer Enable bit
  1878                           ;	PWRT = OFF, PWRT disabled
  1879                           ;	Brown-out Reset Enable bits
  1880                           ;	BOREN = BOHW, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1881                           ;	Brown-out Reset Voltage bits
  1882                           ;	BORV = 3, VBOR set to 2.1V
  1883   300002                     	org	3145730
  1884   300002  1F                 	db	31
  1885                           
  1886                           ;Config register CONFIG2H @ 0x300003
  1887                           ;	Watchdog Timer Enable bit
  1888                           ;	WDT = ON, WDT enabled
  1889                           ;	Watchdog Timer Postscale Select bits
  1890                           ;	WDTPS = 32768, 1:32768
  1891   300003                     	org	3145731
  1892   300003  1F                 	db	31
  1893                           
  1894                           ; Padding undefined space
  1895   300004                     	org	3145732
  1896   300004  FF                 	db	255
  1897                           
  1898                           ;Config register CONFIG3H @ 0x300005
  1899                           ;	PORTB A/D Enable bit
  1900                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1901                           ;	Low-Power Timer 1 Oscillator Enable bit
  1902                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1903                           ;	MCLR Pin Enable bit
  1904                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1905   300005                     	org	3145733
  1906   300005  82                 	db	130
  1907                           
  1908                           ;Config register CONFIG4L @ 0x300006
  1909                           ;	Stack Full/Underflow Reset Enable bit
  1910                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1911                           ;	Single-Supply ICSP Enable bit
  1912                           ;	LVP = ON, Single-Supply ICSP enabled
  1913                           ;	Boot Block Size Select bit
  1914                           ;	BBSIZ = 1024, 1K words (2K bytes) boot block
  1915                           ;	Extended Instruction Set Enable bit
  1916                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1917                           ;	Background Debugger Enable bit
  1918                           ;	DEBUG = 0x1, unprogrammed default
  1919   300006                     	org	3145734
  1920   300006  85                 	db	133
  1921                           
  1922                           ; Padding undefined space
  1923   300007                     	org	3145735
  1924   300007  FF                 	db	255
  1925                           
  1926                           ;Config register CONFIG5L @ 0x300008
  1927                           ;	Code Protection bit
  1928                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1929                           ;	Code Protection bit
  1930                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1931                           ;	Code Protection bit
  1932                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1933                           ;	Code Protection bit
  1934                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1935   300008                     	org	3145736
  1936   300008  0F                 	db	15
  1937                           
  1938                           ;Config register CONFIG5H @ 0x300009
  1939                           ;	Boot Block Code Protection bit
  1940                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1941                           ;	Data EEPROM Code Protection bit
  1942                           ;	CPD = OFF, Data EEPROM not code-protected
  1943   300009                     	org	3145737
  1944   300009  C0                 	db	192
  1945                           
  1946                           ;Config register CONFIG6L @ 0x30000A
  1947                           ;	Write Protection bit
  1948                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1949                           ;	Write Protection bit
  1950                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1951                           ;	Write Protection bit
  1952                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1953                           ;	Write Protection bit
  1954                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1955   30000A                     	org	3145738
  1956   30000A  0F                 	db	15
  1957                           
  1958                           ;Config register CONFIG6H @ 0x30000B
  1959                           ;	Configuration Register Write Protection bit
  1960                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1961                           ;	Boot Block Write Protection bit
  1962                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1963                           ;	Data EEPROM Write Protection bit
  1964                           ;	WRTD = OFF, Data EEPROM not write-protected
  1965   30000B                     	org	3145739
  1966   30000B  E0                 	db	224
  1967                           
  1968                           ;Config register CONFIG7L @ 0x30000C
  1969                           ;	Table Read Protection bit
  1970                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1971                           ;	Table Read Protection bit
  1972                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1973                           ;	Table Read Protection bit
  1974                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1975                           ;	Table Read Protection bit
  1976                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1977   30000C                     	org	3145740
  1978   30000C  0F                 	db	15
  1979                           
  1980                           ;Config register CONFIG7H @ 0x30000D
  1981                           ;	Boot Block Table Read Protection bit
  1982                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1983   30000D                     	org	3145741
  1984   30000D  40                 	db	64
  1985                           tosu	equ	0xFFF
  1986                           tosh	equ	0xFFE
  1987                           tosl	equ	0xFFD
  1988                           stkptr	equ	0xFFC
  1989                           pclatu	equ	0xFFB
  1990                           pclath	equ	0xFFA
  1991                           pcl	equ	0xFF9
  1992                           tblptru	equ	0xFF8
  1993                           tblptrh	equ	0xFF7
  1994                           tblptrl	equ	0xFF6
  1995                           tablat	equ	0xFF5
  1996                           prodh	equ	0xFF4
  1997                           prodl	equ	0xFF3
  1998                           indf0	equ	0xFEF
  1999                           postinc0	equ	0xFEE
  2000                           postdec0	equ	0xFED
  2001                           preinc0	equ	0xFEC
  2002                           plusw0	equ	0xFEB
  2003                           fsr0h	equ	0xFEA
  2004                           fsr0l	equ	0xFE9
  2005                           wreg	equ	0xFE8
  2006                           indf1	equ	0xFE7
  2007                           postinc1	equ	0xFE6
  2008                           postdec1	equ	0xFE5
  2009                           preinc1	equ	0xFE4
  2010                           plusw1	equ	0xFE3
  2011                           fsr1h	equ	0xFE2
  2012                           fsr1l	equ	0xFE1
  2013                           bsr	equ	0xFE0
  2014                           indf2	equ	0xFDF
  2015                           postinc2	equ	0xFDE
  2016                           postdec2	equ	0xFDD
  2017                           preinc2	equ	0xFDC
  2018                           plusw2	equ	0xFDB
  2019                           fsr2h	equ	0xFDA
  2020                           fsr2l	equ	0xFD9
  2021                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        49
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     43      95
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_9(CODE[13]), 

    signature	PTR unsigned char [8] size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _init_config->_init_animation
    _init_clcd->_clcd_write
    _init_animation->_clcd_write
    _display_dashboard->_gear_monitor
    _gear_monitor->_clcd_putch
    _display_time->_clcd_putch
    _display_speed->_clcd_putch
    _clcd_print->_clcd_write
    _car_animation->_clcd_putch
    _clcd_putch->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   16184
                                             42 COMRAM     1     1      0
                  _display_dashboard
                        _init_config
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      30
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    3344
                     _init_animation
                          _init_clcd
                  _init_matrixkeypad
 ---------------------------------------------------------------------------------
 (2) _init_matrixkeypad                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            2     2      0    1488
                                              2 COMRAM     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_animation                                      40    40      0    1856
                                              2 COMRAM    40    40      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _display_dashboard                                    1     1      0   12787
                                              7 COMRAM     1     1      0
                      _car_animation
                         _clcd_print
                      _display_speed
                       _display_time
                       _gear_monitor
 ---------------------------------------------------------------------------------
 (2) _gear_monitor                                         3     3      0    2814
                                              4 COMRAM     3     3      0
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    2748
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _display_speed                                        0     0      0    2748
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    1707
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _car_animation                                        0     0      0    2748
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (3) _clcd_putch                                           2     1      1    2748
                                              2 COMRAM     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1    1488
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_dashboard
     _car_animation
       _clcd_putch
         _clcd_write
     _clcd_print
       _clcd_write
     _display_speed
       _clcd_putch
     _display_time
       _clcd_putch
     _gear_monitor
       _clcd_putch
   _init_config
     _init_animation
       _clcd_write
     _init_clcd
       _clcd_write
     _init_matrixkeypad
   _read_switches
     _scan_key

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      21        0.0%
BITBIGSFRl         281      0       0      19        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2B      5F       1      100.0%
BITBIGSFRhhlh       5B      0       0      17        0.0%
BITBIGSFRhl          F      0       0      18        0.0%
BITBIGSFRhhh         E      0       0      16        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5F      20        0.0%
DATA                 0      0      5F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Dec 14 16:38:06 2023

             clcd_print@addr 0036               clcd_print@data 0034                           l20 0A56  
                         l41 0BCA                           l33 0832                           l17 0B82  
                         l38 088A                           l54 0BD8                           l75 0BE6  
                         l91 09CC                           l83 09B0                           l92 0A04  
                         l93 09E6                           l85 09AE            _init_matrixkeypad 0BDA  
                        l112 0AFC                          l113 0B00                          l122 0A9A  
                        l116 093A                          l125 0BB4                          l151 0B5C  
                        l148 0790                          l891 0BDA                          l893 0BDE  
                        l895 0BE4                          l991 09B2                          l993 09C6  
                        l997 09E0                          u200 09E0                          u201 09DC  
                        u210 09FC                          u211 09F8                          u300 07A4  
                        u220 094E                          u301 07A0                          u221 094A  
                        u310 07C2                          u230 0966                          u311 07BE  
                        u231 0962                          u320 07D2                          u240 097C  
                        u321 07CE                          u401 0668                          u241 0978  
                        u330 07EA                          u410 06B8                          u250 098C  
                        u331 07E6                          u411 06B4                          u251 0988  
                        u340 0808                          u420 0700                          u260 09A6  
                        u341 0804                          u421 06FC                          u261 09A2  
                        u350 0818                          u430 0748                          u190 09C6  
                        u351 0814                          u431 0744                          u191 09C2  
                        u280 0AFC                          u360 082C                          u440 0790  
                        u281 0AF8                          u361 0828                          u441 078C  
                        u290 0A9A                          u275 0ADA                          u291 0A96  
                        u371 0632                          u507 0920                          u276 0ADC  
                        u381 0644                          u517 0934                          u391 0656  
                        u457 08A2                          u467 08C0                          u477 08D6  
                        u487 08F8                          u497 090A                ?_display_time 0032  
         ?_init_matrixkeypad 0032               clcd_putch@addr 0034               clcd_putch@data 0035  
                        prod 0FF3                          wreg 0FE8          ??_init_matrixkeypad 0032  
                       l1001 09FC                         l1101 07D2                         l1005 0A02  
                       l1103 07D8                         l1031 0956                         l1023 093E  
                       l1121 0BB6                         l1113 081C                         l1105 07EA  
                       l1201 072C                         l1033 0966                         l1025 094E  
                       l1115 082C                         l1107 07F6                         l1211 075A  
                       l1203 0748                         l1131 08B0                         l1123 088C  
                       l1035 096C                         l1061 0ADC                         l1109 0808  
                       l1117 0832                         l1221 0B74                         l1213 0770  
                       l1205 0752                         l1141 08E6                         l1133 08BA  
                       l1125 0890                         l1037 097C                         l1045 0996  
                       l1071 0AE8                         l1063 0AE0                         l1119 0856  
                       l1223 0B78                         l1215 0774                         l1151 0910  
                       l1143 08EC                         l1135 08CA                         l1127 0896  
                       l1047 09A6                         l1039 098C                         l1231 0B84  
                       l1073 0AEA                         l1065 0AE2                         l1081 0A58  
                       l1225 0B7E                         l1217 0B60                         l1161 0670  
                       l1153 091A                         l1145 08F6                         l1137 08D4  
                       l1129 0898                         l1049 09AE                         l1233 0B88  
                       l1075 0AEC                         l1067 0AE4                         l1059 0AD2  
                       l1083 0A66                         l1091 0A06                         l1219 0B70  
                       l1171 0698                         l1163 067A                         l1155 0928  
                       l1147 08FE                         l1139 08DC                         l1227 0BCC  
                       l1235 0B90                         l1077 0AEE                         l1069 0AE6  
                       l1085 0A7A                         l1093 0794                         l1173 069C  
                       l1157 0932                         l1149 0908                         l1229 0BD4  
                       l1079 0BA0                         l1087 0A7E                         l1095 07A4  
                       l1191 070A                         l1183 06CA                         l1175 06B8  
                       l1159 0628                         l1089 0B34                         l1097 07B0  
                       l1185 06E0                         l1177 06C2                         l1169 0682  
                       l1099 07C2                         l1187 06E4                         l1197 0712  
                       l1189 0700                         l1199 0728                         STR_1 0620  
                       STR_2 061D                         STR_3 0611                         STR_4 0614  
                       STR_5 0617                         STR_6 061A                         STR_7 0623  
                       STR_8 060E                         STR_9 0601                         _RBPU 7F8F  
             ?_display_speed 0032                         _main 0B84                         indf2 0FDF  
                       fsr1l 0FE1                         fsr2l 0FD9                         prodl 0FF3  
                       start 0000                 ___param_bank 0000               clcd_write@byte 0033  
  __end_of_init_matrixkeypad 0BE8  init_animation@secondhalfcar 003C                        ?_main 0032  
             ??_display_time 0036                 ?_init_config 0032                        _PORTB 0F81  
                      _PORTD 0F83                        _TRISB 0F93                        _TRISC 0F94  
                      _TRISD 0F95                        tablat 0FF5                        plusw1 0FE3  
                      plusw2 0FDB                        status 0FD8         __end_of_gear_monitor 088C  
            __initialization 0A9C                 __end_of_main 0B9E                       ??_main 005C  
              __activetblptr 0001              ??_display_speed 0036                       _TRISD7 7CAF  
                     isa$std 0001             __end_of_scan_key 0A06        gear_monitor@crashflag 005E  
               __pdataCOMRAM 0001                 __mediumconst 0000                       tblptrh 0FF7  
                     tblptrl 0FF6                       tblptru 0FF8                   __accesstop 0060  
    __end_of__initialization 0AC2         __end_of_display_time 0A58                ___rparam_used 0001  
             __pcstackCOMRAM 0032        gear_monitor@signindex 005F                   _clcd_print 0A58  
                 _clcd_putch 0B9E                   _clcd_write 0AD0     read_switches@ucdetection 0032  
               _gear_monitor 0792                _read_switches 093C          read_switches@uconce 0031  
                  ?_scan_key 0032                      __Hparam 0000                      __Lparam 0000  
               __psmallconst 0600                      __pcinit 0A9C                      __ramtop 0600  
                    __ptext0 0B84                      __ptext1 093C                      __ptext2 09B2  
                    __ptext3 0BCC                      __ptext4 0BDA                      __ptext5 088C  
                    __ptext6 0628                      __ptext7 0B5E                      __ptext8 0792  
                    __ptext9 0A06            __end_of_init_clcd 093C              init_animation@i 0054  
            init_animation@m 0044              init_animation@n 004C       display_dashboard@uckey 0039  
             ?_read_switches 0032         end_of_initialization 0AC2                _car_animation 0B34  
                 ??_scan_key 0032                  ?_clcd_print 0034                  ?_clcd_putch 0034  
                ?_clcd_write 0032                      postdec1 0FE5                      postdec2 0FDD  
                    postinc0 0FEE                      postinc2 0FDE                    _PORTBbits 0F81  
                  _PORTCbits 0F82                    _PORTDbits 0F83                 _display_time 0A06  
      __end_of_display_speed 0BCC               ?_car_animation 0032                __pidataCOMRAM 0B02  
        start_initialization 0A9C              ??_read_switches 0032               _init_animation 0628  
       init_animation@F10462 0029         init_animation@F10464 0021         init_animation@F10466 0019  
       init_animation@F10468 0011                ??_init_config 005C                  __pbssCOMRAM 005D  
            ??_car_animation 0036       __end_of_init_animation 0792            _display_dashboard 0B5E  
         ?_display_dashboard 0032                  __smallconst 0600           read_switches@uckey 005D  
        ??_display_dashboard 0039            gear_monitor@uckey 0038                    _init_clcd 088C  
        __end_of_init_config 0BDA              ?_init_animation 0032                 ??_clcd_print 0037  
               ??_clcd_putch 0035                 ??_clcd_write 0033    __end_of_display_dashboard 0B84  
                  _signature 0001        clcd_write@control_bit 0032                    main@ucKey 005C  
         __end_of_clcd_print 0A9C           __end_of_clcd_putch 0BB6           __end_of_clcd_write 0B02  
                 ?_init_clcd 0032                    copy_data0 0AB0                     __Hrparam 0000  
                   __Lrparam 0000                 __Lsmallconst 0600          init_animation@i_385 0056  
        init_animation@i_386 0058          init_animation@i_387 005A                  _init_config 0BCC  
 init_animation@firsthalfcar 0034                     __ptext10 0BB6                     __ptext11 0A58  
                   __ptext12 0B34                     __ptext13 0B9E                     __ptext14 0AD0  
                   _scan_key 09B2                     isa$xinst 0000                ?_gear_monitor 0032  
                ??_init_clcd 0034        __end_of_read_switches 09B2               ??_gear_monitor 0036  
           ??_init_animation 0034        __end_of_car_animation 0B5E                _display_speed 0BB6  



Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Dec 28 23:03:44 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66   000000                     
    67                           ; Generated 23/03/2023 GMT
    68                           ; 
    69                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F4580 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101   000000                     
   102                           	psect	idataCOMRAM
   103   00207E                     __pidataCOMRAM:
   104                           	callstack 0
   105                           
   106                           ;initializer for _tryflag
   107   00207E  0003               	dw	3
   108                           
   109                           ;initializer for _sec
   110   002080  000A               	dw	10
   111                           
   112                           ;initializer for _controlflag
   113   002082  0001               	dw	1
   114                           
   115                           ;initializer for scrolllog@prevkey
   116   002084  FF                 	db	255
   117                           
   118                           ;initializer for _logpos
   119   002085  FF                 	db	255
   120                           
   121                           ;initializer for read_switches@uconce
   122   002086  01                 	db	1
   123                           
   124                           	psect	idataBANK0
   125   001F68                     __pidataBANK0:
   126                           	callstack 0
   127                           
   128                           ;initializer for _signature
   129   001F68  E4                 	db	low STR_2
   130   001F69  06                 	db	high STR_2
   131   001F6A  E1                 	db	low STR_3
   132   001F6B  06                 	db	high STR_3
   133   001F6C  D5                 	db	low STR_4
   134   001F6D  06                 	db	high STR_4
   135   001F6E  D8                 	db	low STR_5
   136   001F6F  06                 	db	high STR_5
   137   001F70  DB                 	db	low STR_6
   138   001F71  06                 	db	high STR_6
   139   001F72  DE                 	db	low STR_7
   140   001F73  06                 	db	high STR_7
   141   001F74  E7                 	db	low STR_8
   142   001F75  06                 	db	high STR_8
   143   001F76  D2                 	db	low STR_9
   144   001F77  06                 	db	high STR_9
   145                           
   146                           ;initializer for _scrolling
   147   001F78  83                 	db	low STR_19
   148   001F79  06                 	db	high STR_19
   149   001F7A  AD                 	db	low STR_20
   150   001F7B  06                 	db	high STR_20
   151   001F7C  91                 	db	low STR_21
   152   001F7D  06                 	db	high STR_21
   153   001F7E  75                 	db	low STR_22
   154   001F7F  06                 	db	high STR_22
   155   001F80  9F                 	db	low STR_23
   156   001F81  06                 	db	high STR_23
   157                           
   158                           ;initializer for _notpressed
   159   001F82  2710               	dw	10000
   160   001F84  0000               	dw	0
   161                           
   162                           ;initializer for _pass
   163   001F86  31                 	db	49
   164   001F87  31                 	db	49
   165   001F88  30                 	db	48
   166   001F89  30                 	db	48
   167   001F8A  00                 	db	0
   168   000000                     _TMR0	set	4054
   169   000000                     _SSPBUF	set	4041
   170   000000                     _SSPADD	set	4040
   171   000000                     _SSPCON1	set	4038
   172   000000                     _ADRESH	set	4036
   173   000000                     _ADRESL	set	4035
   174   000000                     _ACKSTAT	set	32302
   175   000000                     _CKE	set	32318
   176   000000                     _T2CKPS0	set	32336
   177   000000                     _TMR0ON	set	32431
   178   000000                     _RBPU	set	32655
   179   000000                     _PORTBbits	set	3969
   180   000000                     _TRISD	set	3989
   181   000000                     _PORTDbits	set	3971
   182   000000                     _ADCON0	set	4034
   183   000000                     _ACKEN	set	32300
   184   000000                     _ACKDT	set	32301
   185   000000                     _RCEN	set	32299
   186   000000                     _RSEN	set	32297
   187   000000                     _PEN	set	32298
   188   000000                     _SEN	set	32296
   189   000000                     _SMP	set	32319
   190   000000                     _TRISC4	set	31908
   191   000000                     _TRISC3	set	31907
   192   000000                     _TMR2ON	set	32338
   193   000000                     _T2CKPS1	set	32337
   194   000000                     _PSA	set	32427
   195   000000                     _T0CS	set	32429
   196   000000                     _T08BIT	set	32430
   197   000000                     _TMR0IE	set	32661
   198   000000                     _PEIE	set	32662
   199   000000                     _GIE	set	32663
   200   000000                     _GO	set	32273
   201   000000                     _ADFM	set	32263
   202   000000                     _ADCS0	set	32256
   203   000000                     _ADCS1	set	32257
   204   000000                     _ADCS2	set	32258
   205   000000                     _ACQT0	set	32259
   206   000000                     _ACQT1	set	32260
   207   000000                     _PCFG0	set	32264
   208   000000                     _PCFG1	set	32265
   209   000000                     _PCFG2	set	32266
   210   000000                     _PCFG3	set	32267
   211   000000                     _VCFG0	set	32268
   212   000000                     _PORTB	set	3969
   213   000000                     _PORTCbits	set	3970
   214   000000                     _ACQT2	set	32261
   215   000000                     _VCFG1	set	32269
   216   000000                     _ADON	set	32272
   217   000000                     _TRISB	set	3987
   218   000000                     _TRISC	set	3988
   219   000000                     _PORTD	set	3971
   220   000000                     _TRISD7	set	31919
   221   000000                     _CMCON	set	4020
   222   000000                     _TRISEbits	set	3990
   223   000000                     _ECCP1CONbits	set	4026
   224   000000                     _TMR2IE	set	31977
   225   000000                     _CCP1CON	set	4029
   226   000000                     _TMR0IF	set	32658
   227   000000                     _PR2	set	4043
   228   000000                     _BCLIF	set	32011
   229   000000                     _SSPIF	set	31987
   230                           
   231                           	psect	smallconst
   232   000600                     __psmallconst:
   233                           	callstack 0
   234   000600  00                 	db	0
   235   000601                     STR_12:
   236   000601  20                 	db	32
   237   000602  20                 	db	32
   238   000603  43                 	db	67	;'C'
   239   000604  6F                 	db	111	;'o'
   240   000605  64                 	db	100	;'d'
   241   000606  65                 	db	101	;'e'
   242   000607  20                 	db	32
   243   000608  50                 	db	80	;'P'
   244   000609  61                 	db	97	;'a'
   245   00060A  73                 	db	115	;'s'
   246   00060B  73                 	db	115	;'s'
   247   00060C  65                 	db	101	;'e'
   248   00060D  64                 	db	100	;'d'
   249   00060E  20                 	db	32
   250   00060F  20                 	db	32
   251   000610  20                 	db	32
   252   000611  00                 	db	0
   253   000612                     STR_13:
   254   000612  20                 	db	32
   255   000613  43                 	db	67	;'C'
   256   000614  61                 	db	97	;'a'
   257   000615  72                 	db	114	;'r'
   258   000616  20                 	db	32
   259   000617  42                 	db	66	;'B'
   260   000618  6C                 	db	108	;'l'
   261   000619  61                 	db	97	;'a'
   262   00061A  63                 	db	99	;'c'
   263   00061B  6B                 	db	107	;'k'
   264   00061C  20                 	db	32
   265   00061D  42                 	db	66	;'B'
   266   00061E  6F                 	db	111	;'o'
   267   00061F  78                 	db	120	;'x'
   268   000620  20                 	db	32
   269   000621  20                 	db	32
   270   000622  00                 	db	0
   271   000623                     STR_14:
   272   000623  20                 	db	32
   273   000624  57                 	db	87	;'W'
   274   000625  72                 	db	114	;'r'
   275   000626  6F                 	db	111	;'o'
   276   000627  6E                 	db	110	;'n'
   277   000628  67                 	db	103	;'g'
   278   000629  20                 	db	32
   279   00062A  50                 	db	80	;'P'
   280   00062B  61                 	db	97	;'a'
   281   00062C  73                 	db	115	;'s'
   282   00062D  73                 	db	115	;'s'
   283   00062E  77                 	db	119	;'w'
   284   00062F  6F                 	db	111	;'o'
   285   000630  72                 	db	114	;'r'
   286   000631  64                 	db	100	;'d'
   287   000632  20                 	db	32
   288   000633  00                 	db	0
   289   000634                     STR_11:
   290   000634  20                 	db	32
   291   000635  45                 	db	69	;'E'
   292   000636  6E                 	db	110	;'n'
   293   000637  74                 	db	116	;'t'
   294   000638  65                 	db	101	;'e'
   295   000639  72                 	db	114	;'r'
   296   00063A  20                 	db	32
   297   00063B  50                 	db	80	;'P'
   298   00063C  61                 	db	97	;'a'
   299   00063D  73                 	db	115	;'s'
   300   00063E  73                 	db	115	;'s'
   301   00063F  77                 	db	119	;'w'
   302   000640  6F                 	db	111	;'o'
   303   000641  72                 	db	114	;'r'
   304   000642  64                 	db	100	;'d'
   305   000643  20                 	db	32
   306   000644  00                 	db	0
   307   000645                     STR_15:
   308   000645  20                 	db	32
   309   000646  61                 	db	97	;'a'
   310   000647  74                 	db	116	;'t'
   311   000648  74                 	db	116	;'t'
   312   000649  65                 	db	101	;'e'
   313   00064A  6D                 	db	109	;'m'
   314   00064B  70                 	db	112	;'p'
   315   00064C  74                 	db	116	;'t'
   316   00064D  20                 	db	32
   317   00064E  52                 	db	82	;'R'
   318   00064F  65                 	db	101	;'e'
   319   000650  6D                 	db	109	;'m'
   320   000651  61                 	db	97	;'a'
   321   000652  69                 	db	105	;'i'
   322   000653  6E                 	db	110	;'n'
   323   000654  73                 	db	115	;'s'
   324   000655  00                 	db	0
   325   000656                     STR_10:
   326   000656  20                 	db	32
   327   000657  20                 	db	32
   328   000658  20                 	db	32
   329   000659  54                 	db	84	;'T'
   330   00065A  69                 	db	105	;'i'
   331   00065B  6D                 	db	109	;'m'
   332   00065C  65                 	db	101	;'e'
   333   00065D  20                 	db	32
   334   00065E  20                 	db	32
   335   00065F  20                 	db	32
   336   000660  20                 	db	32
   337   000661  45                 	db	69	;'E'
   338   000662  20                 	db	32
   339   000663  20                 	db	32
   340   000664  53                 	db	83	;'S'
   341   000665  00                 	db	0
   342   000666                     STR_16:
   343   000666  54                 	db	84	;'T'
   344   000667  72                 	db	114	;'r'
   345   000668  79                 	db	121	;'y'
   346   000669  20                 	db	32
   347   00066A  41                 	db	65	;'A'
   348   00066B  67                 	db	103	;'g'
   349   00066C  61                 	db	97	;'a'
   350   00066D  69                 	db	105	;'i'
   351   00066E  6E                 	db	110	;'n'
   352   00066F  20                 	db	32
   353   000670  6C                 	db	108	;'l'
   354   000671  65                 	db	101	;'e'
   355   000672  66                 	db	102	;'f'
   356   000673  74                 	db	116	;'t'
   357   000674  00                 	db	0
   358   000675                     STR_22:
   359   000675  53                 	db	83	;'S'
   360   000676  65                 	db	101	;'e'
   361   000677  74                 	db	116	;'t'
   362   000678  20                 	db	32
   363   000679  74                 	db	116	;'t'
   364   00067A  69                 	db	105	;'i'
   365   00067B  6D                 	db	109	;'m'
   366   00067C  65                 	db	101	;'e'
   367   00067D  20                 	db	32
   368   00067E  20                 	db	32
   369   00067F  20                 	db	32
   370   000680  20                 	db	32
   371   000681  20                 	db	32
   372   000682  00                 	db	0
   373   000683                     STR_19:
   374   000683  56                 	db	86	;'V'
   375   000684  69                 	db	105	;'i'
   376   000685  65                 	db	101	;'e'
   377   000686  77                 	db	119	;'w'
   378   000687  20                 	db	32
   379   000688  6C                 	db	108	;'l'
   380   000689  6F                 	db	111	;'o'
   381   00068A  67                 	db	103	;'g'
   382   00068B  20                 	db	32
   383   00068C  20                 	db	32
   384   00068D  20                 	db	32
   385   00068E  20                 	db	32
   386   00068F  20                 	db	32
   387   000690  00                 	db	0
   388   000691                     STR_21:
   389   000691  43                 	db	67	;'C'
   390   000692  6C                 	db	108	;'l'
   391   000693  65                 	db	101	;'e'
   392   000694  61                 	db	97	;'a'
   393   000695  72                 	db	114	;'r'
   394   000696  20                 	db	32
   395   000697  6C                 	db	108	;'l'
   396   000698  6F                 	db	111	;'o'
   397   000699  67                 	db	103	;'g'
   398   00069A  20                 	db	32
   399   00069B  20                 	db	32
   400   00069C  20                 	db	32
   401   00069D  20                 	db	32
   402   00069E  00                 	db	0
   403   00069F                     STR_23:
   404   00069F  43                 	db	67	;'C'
   405   0006A0  68                 	db	104	;'h'
   406   0006A1  61                 	db	97	;'a'
   407   0006A2  6E                 	db	110	;'n'
   408   0006A3  67                 	db	103	;'g'
   409   0006A4  65                 	db	101	;'e'
   410   0006A5  20                 	db	32
   411   0006A6  50                 	db	80	;'P'
   412   0006A7  61                 	db	97	;'a'
   413   0006A8  73                 	db	115	;'s'
   414   0006A9  73                 	db	115	;'s'
   415   0006AA  20                 	db	32
   416   0006AB  20                 	db	32
   417   0006AC  00                 	db	0
   418   0006AD                     STR_20:
   419   0006AD  44                 	db	68	;'D'
   420   0006AE  6F                 	db	111	;'o'
   421   0006AF  77                 	db	119	;'w'
   422   0006B0  6E                 	db	110	;'n'
   423   0006B1  6C                 	db	108	;'l'
   424   0006B2  6F                 	db	111	;'o'
   425   0006B3  61                 	db	97	;'a'
   426   0006B4  64                 	db	100	;'d'
   427   0006B5  20                 	db	32
   428   0006B6  6C                 	db	108	;'l'
   429   0006B7  6F                 	db	111	;'o'
   430   0006B8  67                 	db	103	;'g'
   431   0006B9  20                 	db	32
   432   0006BA  00                 	db	0
   433   0006BB                     STR_17:
   434   0006BB  57                 	db	87	;'W'
   435   0006BC  61                 	db	97	;'a'
   436   0006BD  69                 	db	105	;'i'
   437   0006BE  74                 	db	116	;'t'
   438   0006BF  20                 	db	32
   439   0006C0  66                 	db	102	;'f'
   440   0006C1  6F                 	db	111	;'o'
   441   0006C2  72                 	db	114	;'r'
   442   0006C3  00                 	db	0
   443   0006C4                     STR_1:
   444   0006C4  56                 	db	86	;'V'
   445   0006C5  69                 	db	105	;'i'
   446   0006C6  65                 	db	101	;'e'
   447   0006C7  77                 	db	119	;'w'
   448   0006C8  20                 	db	32
   449   0006C9  6C                 	db	108	;'l'
   450   0006CA  6F                 	db	111	;'o'
   451   0006CB  67                 	db	103	;'g'
   452   0006CC  00                 	db	0
   453   0006CD                     STR_18:
   454   0006CD  20                 	db	32
   455   0006CE  73                 	db	115	;'s'
   456   0006CF  20                 	db	32
   457   0006D0  20                 	db	32
   458   0006D1  00                 	db	0
   459   0006D2                     STR_9:
   460   0006D2  43                 	db	67	;'C'
   461   0006D3  20                 	db	32
   462   0006D4  00                 	db	0
   463   0006D5                     STR_4:
   464   0006D5  47                 	db	71	;'G'
   465   0006D6  31                 	db	49	;'1'
   466   0006D7  00                 	db	0
   467   0006D8                     STR_5:
   468   0006D8  47                 	db	71	;'G'
   469   0006D9  32                 	db	50	;'2'
   470   0006DA  00                 	db	0
   471   0006DB                     STR_6:
   472   0006DB  47                 	db	71	;'G'
   473   0006DC  33                 	db	51	;'3'
   474   0006DD  00                 	db	0
   475   0006DE                     STR_7:
   476   0006DE  47                 	db	71	;'G'
   477   0006DF  34                 	db	52	;'4'
   478   0006E0  00                 	db	0
   479   0006E1                     STR_3:
   480   0006E1  47                 	db	71	;'G'
   481   0006E2  4E                 	db	78	;'N'
   482   0006E3  00                 	db	0
   483   0006E4                     STR_2:
   484   0006E4  4F                 	db	79	;'O'
   485   0006E5  4E                 	db	78	;'N'
   486   0006E6  00                 	db	0
   487   0006E7                     STR_8:
   488   0006E7  47                 	db	71	;'G'
   489   0006E8  52                 	db	82	;'R'
   490   0006E9  00                 	db	0
   491   0006EA  00                 	db	0	; dummy byte at the end
   492   000000                     
   493                           ; #config settings
   494                           
   495                           	psect	cinit
   496   001C28                     __pcinit:
   497                           	callstack 0
   498   001C28                     start_initialization:
   499                           	callstack 0
   500   001C28                     __initialization:
   501                           	callstack 0
   502                           
   503                           ; Initialize objects allocated to BANK0 (35 bytes)
   504                           ; load TBLPTR registers with __pidataBANK0
   505   001C28  0E68               	movlw	low __pidataBANK0
   506   001C2A  6EF6               	movwf	tblptrl,c
   507   001C2C  0E1F               	movlw	high __pidataBANK0
   508   001C2E  6EF7               	movwf	tblptrh,c
   509   001C30  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   510   001C32  6EF8               	movwf	tblptru,c
   511   001C34  EE00  F08D         	lfsr	0,__pdataBANK0
   512   001C38  EE10 F023          	lfsr	1,35
   513   001C3C                     copy_data0:
   514   001C3C  0009               	tblrd		*+
   515   001C3E  CFF5 FFEE          	movff	tablat,postinc0
   516   001C42  50E5               	movf	postdec1,w,c
   517   001C44  50E1               	movf	fsr1l,w,c
   518   001C46  E1FA               	bnz	copy_data0
   519                           
   520                           ; Initialize objects allocated to COMRAM (9 bytes)
   521                           ; load TBLPTR registers with __pidataCOMRAM
   522   001C48  0E7E               	movlw	low __pidataCOMRAM
   523   001C4A  6EF6               	movwf	tblptrl,c
   524   001C4C  0E20               	movlw	high __pidataCOMRAM
   525   001C4E  6EF7               	movwf	tblptrh,c
   526   001C50  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   527   001C52  6EF8               	movwf	tblptru,c
   528   001C54  EE00  F054         	lfsr	0,__pdataCOMRAM
   529   001C58  EE10 F009          	lfsr	1,9
   530   001C5C                     copy_data1:
   531   001C5C  0009               	tblrd		*+
   532   001C5E  CFF5 FFEE          	movff	tablat,postinc0
   533   001C62  50E5               	movf	postdec1,w,c
   534   001C64  50E1               	movf	fsr1l,w,c
   535   001C66  E1FA               	bnz	copy_data1
   536                           
   537                           ; Clear objects allocated to BANK0 (45 bytes)
   538   001C68  EE00  F060         	lfsr	0,__pbssBANK0
   539   001C6C  0E2D               	movlw	45
   540   001C6E                     clear_0:
   541   001C6E  6AEE               	clrf	postinc0,c
   542   001C70  06E8               	decf	wreg,f,c
   543   001C72  E1FD               	bnz	clear_0
   544                           
   545                           ; Clear objects allocated to COMRAM (18 bytes)
   546   001C74  EE00  F042         	lfsr	0,__pbssCOMRAM
   547   001C78  0E12               	movlw	18
   548   001C7A                     clear_1:
   549   001C7A  6AEE               	clrf	postinc0,c
   550   001C7C  06E8               	decf	wreg,f,c
   551   001C7E  E1FD               	bnz	clear_1
   552   001C80                     end_of_initialization:
   553                           	callstack 0
   554   001C80                     __end_of__initialization:
   555                           	callstack 0
   556   001C80  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   557   001C82  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   558   001C84  0E00               	movlw	low (__Lmediumconst shr (0+16))
   559   001C86  6EF8               	movwf	tblptru,c
   560   001C88  0100               	movlb	0
   561   001C8A  EF09  F009         	goto	_main	;jump to C main() function
   562                           
   563                           	psect	bssCOMRAM
   564   000042                     __pbssCOMRAM:
   565                           	callstack 0
   566   000042                     _clock_reg:
   567                           	callstack 0
   568   000042                     	ds	3
   569   000045                     _out:
   570                           	callstack 0
   571   000045                     	ds	2
   572   000047                     _enterflag:
   573                           	callstack 0
   574   000047                     	ds	2
   575   000049                     _blinkflag:
   576                           	callstack 0
   577   000049                     	ds	2
   578   00004B                     _blink:
   579                           	callstack 0
   580   00004B                     	ds	2
   581   00004D                     isr@count:
   582                           	callstack 0
   583   00004D                     	ds	2
   584   00004F                     _logg:
   585                           	callstack 0
   586   00004F                     	ds	1
   587   000050                     _i:
   588                           	callstack 0
   589   000050                     	ds	1
   590   000051                     read_switches@uckey:
   591                           	callstack 0
   592   000051                     	ds	1
   593   000052                     gear_monitor@crashflag:
   594                           	callstack 0
   595   000052                     	ds	1
   596   000053                     _signindex:
   597                           	callstack 0
   598   000053                     	ds	1
   599                           
   600                           	psect	dataCOMRAM
   601   000054                     __pdataCOMRAM:
   602                           	callstack 0
   603   000054                     _tryflag:
   604                           	callstack 0
   605   000054                     	ds	2
   606   000056                     _sec:
   607                           	callstack 0
   608   000056                     	ds	2
   609   000058                     _controlflag:
   610                           	callstack 0
   611   000058                     	ds	2
   612   00005A                     scrolllog@prevkey:
   613                           	callstack 0
   614   00005A                     	ds	1
   615   00005B                     _logpos:
   616                           	callstack 0
   617   00005B                     	ds	1
   618   00005C                     read_switches@uconce:
   619                           	callstack 0
   620   00005C                     	ds	1
   621                           
   622                           	psect	bssBANK0
   623   000060                     __pbssBANK0:
   624                           	callstack 0
   625   000060                     _log:
   626                           	callstack 0
   627   000060                     	ds	17
   628   000071                     _wait:
   629                           	callstack 0
   630   000071                     	ds	4
   631   000075                     _eventcount:
   632                           	callstack 0
   633   000075                     	ds	2
   634   000077                     _press:
   635                           	callstack 0
   636   000077                     	ds	2
   637   000079                     _compareflag:
   638                           	callstack 0
   639   000079                     	ds	2
   640   00007B                     _min:
   641                           	callstack 0
   642   00007B                     	ds	2
   643   00007D                     _logout:
   644                           	callstack 0
   645   00007D                     	ds	2
   646   00007F                     _time:
   647                           	callstack 0
   648   00007F                     	ds	9
   649   000088                     _uckey:
   650                           	callstack 0
   651   000088                     	ds	5
   652                           
   653                           	psect	dataBANK0
   654   00008D                     __pdataBANK0:
   655                           	callstack 0
   656   00008D                     _signature:
   657                           	callstack 0
   658   00008D                     	ds	16
   659   00009D                     _scrolling:
   660                           	callstack 0
   661   00009D                     	ds	10
   662   0000A7                     _notpressed:
   663                           	callstack 0
   664   0000A7                     	ds	4
   665   0000AB                     _pass:
   666                           	callstack 0
   667   0000AB                     	ds	5
   668                           
   669                           	psect	cstackCOMRAM
   670   000001                     __pcstackCOMRAM:
   671                           	callstack 0
   672   000001                     ?_read_adc:
   673                           	callstack 0
   674   000001                     ?_mystrcmp:
   675                           	callstack 0
   676   000001                     ?___awdiv:
   677                           	callstack 0
   678   000001                     ?___lwdiv:
   679                           	callstack 0
   680   000001                     clcd_write@control_bit:
   681                           	callstack 0
   682   000001                     read_switches@ucdetection:
   683                           	callstack 0
   684   000001                     i2c_write@data:
   685                           	callstack 0
   686   000001                     mystrcmp@s1:
   687                           	callstack 0
   688   000001                     ___awdiv@dividend:
   689                           	callstack 0
   690   000001                     ___lwdiv@dividend:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x0
   694   000001                     	ds	1
   695   000002                     clcd_write@byte:
   696                           	callstack 0
   697   000002                     write_ds1307@data:
   698                           	callstack 0
   699   000002                     read_ds1307@address:
   700                           	callstack 0
   701   000002                     write_external_eeprom@data:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x1
   705   000002                     	ds	1
   706   000003                     ??_init_clcd:
   707   000003                     ??_read_adc:
   708   000003                     write_ds1307@address:
   709                           	callstack 0
   710   000003                     read_ds1307@data:
   711                           	callstack 0
   712   000003                     clcd_print@data:
   713                           	callstack 0
   714   000003                     mystrcmp@s2:
   715                           	callstack 0
   716   000003                     write_external_eeprom@i:
   717                           	callstack 0
   718   000003                     ___awdiv@divisor:
   719                           	callstack 0
   720   000003                     ___lwdiv@divisor:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x2
   724   000003                     	ds	1
   725   000004                     init_ds1307@dummy:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x3
   729   000004                     	ds	1
   730   000005                     read_adc@channel:
   731                           	callstack 0
   732   000005                     clcd_print@addr:
   733                           	callstack 0
   734   000005                     write_external_eeprom@address:
   735                           	callstack 0
   736   000005                     ___awdiv@counter:
   737                           	callstack 0
   738   000005                     ___lwdiv@quotient:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x4
   742   000005                     	ds	1
   743   000006                     ?___xxtofl:
   744                           	callstack 0
   745   000006                     log_event@address:
   746                           	callstack 0
   747   000006                     ___awdiv@sign:
   748                           	callstack 0
   749   000006                     ___xxtofl@val:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x5
   753   000006                     	ds	1
   754   000007                     ___lwdiv@counter:
   755                           	callstack 0
   756   000007                     mystrcmp@i:
   757                           	callstack 0
   758   000007                     log_event@i:
   759                           	callstack 0
   760   000007                     ___awdiv@quotient:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x6
   764   000007                     	ds	1
   765   000008                     ?___lwmod:
   766                           	callstack 0
   767   000008                     ___lwmod@dividend:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x7
   771   000008                     	ds	1
   772   000009                     ?___awmod:
   773                           	callstack 0
   774   000009                     ___awmod@dividend:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x8
   778   000009                     	ds	1
   779   00000A                     ??___xxtofl:
   780   00000A                     ___lwmod@divisor:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x9
   784   00000A                     	ds	1
   785   00000B                     ___awmod@divisor:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0xA
   789   00000B                     	ds	1
   790   00000C                     ___lwmod@counter:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0xB
   794   00000C                     	ds	1
   795   00000D                     ___awmod@counter:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0xC
   799   00000D                     	ds	1
   800   00000E                     ___awmod@sign:
   801                           	callstack 0
   802   00000E                     ___xxtofl@sign:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0xD
   806   00000E                     	ds	1
   807   00000F                     clcd_putch@addr:
   808                           	callstack 0
   809   00000F                     ___xxtofl@exp:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0xE
   813   00000F                     	ds	1
   814   000010                     clcd_putch@data:
   815                           	callstack 0
   816   000010                     ___xxtofl@arg:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0xF
   820   000010                     	ds	1
   821   000011                     ??_gear_monitor:
   822   000011                     ??_print:
   823   000011                     display_speed@usadc:
   824                           	callstack 0
   825   000011                     logscreen@wait:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x10
   829   000011                     	ds	2
   830   000013                     gear_monitor@uckey:
   831                           	callstack 0
   832   000013                     logscreen@key:
   833                           	callstack 0
   834   000013                     print@key:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x12
   838   000013                     	ds	1
   839   000014                     ??_scrolllog:
   840   000014                     ?___fldiv:
   841                           	callstack 0
   842   000014                     display_dashboard@usads:
   843                           	callstack 0
   844   000014                     ___fldiv@b:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x13
   848   000014                     	ds	2
   849   000016                     display_dashboard@uckey:
   850                           	callstack 0
   851   000016                     scrolllog@key:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x15
   855   000016                     	ds	2
   856   000018                     ___fldiv@a:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x17
   860   000018                     	ds	4
   861   00001C                     ??___fldiv:
   862                           
   863                           ; 1 bytes @ 0x1B
   864   00001C                     	ds	4
   865   000020                     ___fldiv@rem:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x1F
   869   000020                     	ds	4
   870   000024                     ___fldiv@sign:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0x23
   874   000024                     	ds	1
   875   000025                     ___fldiv@new_exp:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x24
   879   000025                     	ds	2
   880   000027                     ___fldiv@grs:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0x26
   884   000027                     	ds	4
   885   00002B                     ___fldiv@bexp:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x2A
   889   00002B                     	ds	1
   890   00002C                     ___fldiv@aexp:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x2B
   894   00002C                     	ds	1
   895   00002D                     ?___fltol:
   896                           	callstack 0
   897   00002D                     ___fltol@f1:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0x2C
   901   00002D                     	ds	4
   902   000031                     ??___fltol:
   903                           
   904                           ; 1 bytes @ 0x30
   905   000031                     	ds	4
   906   000035                     ___fltol@sign1:
   907                           	callstack 0
   908                           
   909                           ; 1 bytes @ 0x34
   910   000035                     	ds	1
   911   000036                     ___fltol@exp1:
   912                           	callstack 0
   913                           
   914                           ; 1 bytes @ 0x35
   915   000036                     	ds	1
   916   000037                     get_speed@adc:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x36
   920   000037                     	ds	2
   921   000039                     getforstoreevent@i:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x38
   925   000039                     	ds	2
   926   00003B                     getforstoreevent@i_630:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x3A
   930   00003B                     	ds	2
   931   00003D                     ??_main:
   932                           
   933                           ; 1 bytes @ 0x3C
   934   00003D                     	ds	2
   935   00003F                     main@usAdc:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x3E
   939   00003F                     	ds	2
   940   000041                     main@ucKey:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x40
   944   000041                     	ds	1
   945                           
   946 ;;
   947 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   948 ;;
   949 ;; *************** function _main *****************
   950 ;; Defined at:
   951 ;;		line 19 in file "main.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  usAdc           2   62[COMRAM] unsigned short 
   956 ;;  ucKey           1   64[COMRAM] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   966 ;;      Params:         0       0       0       0       0       0       0
   967 ;;      Locals:         3       0       0       0       0       0       0
   968 ;;      Temps:          2       0       0       0       0       0       0
   969 ;;      Totals:         5       0       0       0       0       0       0
   970 ;;Total ram usage:        5 bytes
   971 ;; Hardware stack levels required when called: 8
   972 ;; This function calls:
   973 ;;		___fldiv
   974 ;;		___fltol
   975 ;;		___xxtofl
   976 ;;		_clcd_print
   977 ;;		_display_dashboard
   978 ;;		_getforstoreevent
   979 ;;		_init_config
   980 ;;		_logscreen
   981 ;;		_read_adc
   982 ;;		_read_switches
   983 ;;		_scrolllog
   984 ;; This function is called by:
   985 ;;		Startup code after reset
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text0
   990   001212                     __ptext0:
   991                           	callstack 0
   992   001212                     _main:
   993                           	callstack 23
   994   001212                     
   995                           ;main.c: 20:     init_config();
   996   001212  ECE4  F00F         	call	_init_config	;wreg free
   997   001216                     
   998                           ;main.c: 21:     unsigned char ucKey;;main.c: 22:     unsigned short usAdc;;main.c: 23: 
      +                              getforstoreevent();
   999   001216  ECA9  F00C         	call	_getforstoreevent	;wreg free
  1000   00121A                     l3123:
  1001                           
  1002                           ;main.c: 25:         usAdc = (unsigned short)(read_adc(4)/10.33);
  1003   00121A  0EAE               	movlw	174
  1004   00121C  6E18               	movwf	___fldiv@a^0,c
  1005   00121E  0E47               	movlw	71
  1006   001220  6E19               	movwf	(___fldiv@a+1)^0,c
  1007   001222  0E25               	movlw	37
  1008   001224  6E1A               	movwf	(___fldiv@a+2)^0,c
  1009   001226  0E41               	movlw	65
  1010   001228  6E1B               	movwf	(___fldiv@a+3)^0,c
  1011   00122A  0E04               	movlw	4
  1012   00122C  EC6B  F00F         	call	_read_adc
  1013   001230  C001  F006         	movff	?_read_adc,___xxtofl@val
  1014   001234  C002  F007         	movff	?_read_adc+1,___xxtofl@val+1
  1015   001238  6A08               	clrf	(___xxtofl@val+2)^0,c
  1016   00123A  6A09               	clrf	(___xxtofl@val+3)^0,c
  1017   00123C  0E00               	movlw	0
  1018   00123E  ECE9  F006         	call	___xxtofl
  1019   001242  C006  F014         	movff	?___xxtofl,___fldiv@b
  1020   001246  C007  F015         	movff	?___xxtofl+1,___fldiv@b+1
  1021   00124A  C008  F016         	movff	?___xxtofl+2,___fldiv@b+2
  1022   00124E  C009  F017         	movff	?___xxtofl+3,___fldiv@b+3
  1023   001252  EC76  F003         	call	___fldiv	;wreg free
  1024   001256  C014  F02D         	movff	?___fldiv,___fltol@f1
  1025   00125A  C015  F02E         	movff	?___fldiv+1,___fltol@f1+1
  1026   00125E  C016  F02F         	movff	?___fldiv+2,___fltol@f1+2
  1027   001262  C017  F030         	movff	?___fldiv+3,___fltol@f1+3
  1028   001266  EC94  F009         	call	___fltol	;wreg free
  1029   00126A  C02D  F03F         	movff	?___fltol,main@usAdc
  1030   00126E  C02E  F040         	movff	?___fltol+1,main@usAdc+1
  1031   001272                     
  1032                           ;main.c: 26:         if(controlflag == 0 || controlflag == 1)
  1033   001272  5058               	movf	_controlflag^0,w,c
  1034   001274  1059               	iorwf	(_controlflag+1)^0,w,c
  1035   001276  B4D8               	btfsc	status,2,c
  1036   001278  EF40  F009         	goto	u2381
  1037   00127C  EF42  F009         	goto	u2380
  1038   001280                     u2381:
  1039   001280  EF4B  F009         	goto	l3129
  1040   001284                     u2380:
  1041   001284  0458               	decf	_controlflag^0,w,c
  1042   001286  1059               	iorwf	(_controlflag+1)^0,w,c
  1043   001288  A4D8               	btfss	status,2,c
  1044   00128A  EF49  F009         	goto	u2391
  1045   00128E  EF4B  F009         	goto	u2390
  1046   001292                     u2391:
  1047   001292  EF51  F009         	goto	l3131
  1048   001296                     u2390:
  1049   001296                     l3129:
  1050                           
  1051                           ;main.c: 27:             ucKey = read_switches(1);
  1052   001296  0E01               	movlw	1
  1053   001298  EC33  F00D         	call	_read_switches
  1054   00129C  6E41               	movwf	main@ucKey^0,c
  1055   00129E  EF74  F009         	goto	l3143
  1056   0012A2                     l3131:
  1057                           
  1058                           ;main.c: 29:             ucKey = read_switches(0);
  1059   0012A2  0E00               	movlw	0
  1060   0012A4  EC33  F00D         	call	_read_switches
  1061   0012A8  6E41               	movwf	main@ucKey^0,c
  1062   0012AA  EF74  F009         	goto	l3143
  1063   0012AE                     l3133:
  1064                           
  1065                           ;main.c: 34:                 logscreen(ucKey);
  1066   0012AE  5041               	movf	main@ucKey^0,w,c
  1067   0012B0  EC43  F005         	call	_logscreen
  1068                           
  1069                           ;main.c: 35:                 break;
  1070   0012B4  EF0D  F009         	goto	l3123
  1071   0012B8                     l3135:
  1072                           
  1073                           ;main.c: 37:                 display_dashboard(ucKey, usAdc);
  1074   0012B8  C03F  F014         	movff	main@usAdc,display_dashboard@usads
  1075   0012BC  C040  F015         	movff	main@usAdc+1,display_dashboard@usads+1
  1076   0012C0  5041               	movf	main@ucKey^0,w,c
  1077   0012C2  ECAA  F00E         	call	_display_dashboard
  1078                           
  1079                           ;main.c: 38:                 break;
  1080   0012C6  EF0D  F009         	goto	l3123
  1081   0012CA                     l3137:
  1082                           
  1083                           ;main.c: 40:                 scrolllog(ucKey);
  1084   0012CA  5041               	movf	main@ucKey^0,w,c
  1085   0012CC  ECC3  F007         	call	_scrolllog
  1086                           
  1087                           ;main.c: 41:                 break;
  1088   0012D0  EF0D  F009         	goto	l3123
  1089   0012D4                     l3139:
  1090                           
  1091                           ;main.c: 43:                 clcd_print("View log",(0xC0 + (0)));
  1092   0012D4  0EC4               	movlw	low STR_1
  1093   0012D6  6E03               	movwf	clcd_print@data^0,c
  1094   0012D8  0E06               	movlw	high STR_1
  1095   0012DA  6E04               	movwf	(clcd_print@data+1)^0,c
  1096   0012DC  0EC0               	movlw	192
  1097   0012DE  6E05               	movwf	clcd_print@addr^0,c
  1098   0012E0  ECDE  F00D         	call	_clcd_print	;wreg free
  1099                           
  1100                           ;main.c: 44:                 break;
  1101   0012E4  EF0D  F009         	goto	l3123
  1102   0012E8                     l3143:
  1103   0012E8  C058  F03D         	movff	_controlflag,??_main
  1104   0012EC  C059  F03E         	movff	_controlflag+1,??_main+1
  1105                           
  1106                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1107                           ; Switch size 1, requested type "simple"
  1108                           ; Number of cases is 1, Range of values is 0 to 0
  1109                           ; switch strategies available:
  1110                           ; Name         Instructions Cycles
  1111                           ; simple_byte            4     3 (average)
  1112                           ;	Chosen strategy is simple_byte
  1113   0012F0  503E               	movf	(??_main+1)^0,w,c
  1114   0012F2  0A00               	xorlw	0	; case 0
  1115   0012F4  B4D8               	btfsc	status,2,c
  1116   0012F6  EF7F  F009         	goto	l3193
  1117   0012FA  EF0D  F009         	goto	l3123
  1118   0012FE                     l3193:
  1119                           
  1120                           ; Switch size 1, requested type "simple"
  1121                           ; Number of cases is 4, Range of values is 0 to 4
  1122                           ; switch strategies available:
  1123                           ; Name         Instructions Cycles
  1124                           ; simple_byte           13     7 (average)
  1125                           ;	Chosen strategy is simple_byte
  1126   0012FE  503D               	movf	??_main^0,w,c
  1127   001300  0A00               	xorlw	0	; case 0
  1128   001302  B4D8               	btfsc	status,2,c
  1129   001304  EF57  F009         	goto	l3133
  1130   001308  0A01               	xorlw	1	; case 1
  1131   00130A  B4D8               	btfsc	status,2,c
  1132   00130C  EF5C  F009         	goto	l3135
  1133   001310  0A02               	xorlw	2	; case 3
  1134   001312  B4D8               	btfsc	status,2,c
  1135   001314  EF65  F009         	goto	l3137
  1136   001318  0A07               	xorlw	7	; case 4
  1137   00131A  B4D8               	btfsc	status,2,c
  1138   00131C  EF6A  F009         	goto	l3139
  1139   001320  EF0D  F009         	goto	l3123
  1140   001324  EF07  F000         	goto	start
  1141   001328                     __end_of_main:
  1142                           	callstack 0
  1143                           
  1144 ;; *************** function _scrolllog *****************
  1145 ;; Defined at:
  1146 ;;		line 70 in file "scrolldisplay.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  key             1    wreg     unsigned char 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  key             1   21[COMRAM] unsigned char 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1160 ;;      Params:         0       0       0       0       0       0       0
  1161 ;;      Locals:         1       0       0       0       0       0       0
  1162 ;;      Temps:          2       0       0       0       0       0       0
  1163 ;;      Totals:         3       0       0       0       0       0       0
  1164 ;;Total ram usage:        3 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; Hardware stack levels required when called: 4
  1167 ;; This function calls:
  1168 ;;		_clcd_print
  1169 ;;		_clcd_putch
  1170 ;;		_clcd_write
  1171 ;;		_print
  1172 ;; This function is called by:
  1173 ;;		_main
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text1
  1178   000F86                     __ptext1:
  1179                           	callstack 0
  1180   000F86                     _scrolllog:
  1181                           	callstack 26
  1182                           
  1183                           ;incstack = 0
  1184                           ;scrolllog@key stored from wreg
  1185   000F86  6E16               	movwf	scrolllog@key^0,c
  1186   000F88                     
  1187                           ;scrolldisplay.c: 71:     static unsigned char prevkey=0xFF;;scrolldisplay.c: 72:     if
      +                          (press==0)
  1188   000F88  0100               	movlb	0	; () banked
  1189   000F8A  5177               	movf	_press& (0+255),w,b
  1190   000F8C  1178               	iorwf	(_press+1)& (0+255),w,b
  1191   000F8E  A4D8               	btfss	status,2,c
  1192   000F90  EFCC  F007         	goto	u2281
  1193   000F94  EFCE  F007         	goto	u2280
  1194   000F98                     u2281:
  1195   000F98  EFF7  F007         	goto	l3075
  1196   000F9C                     u2280:
  1197   000F9C                     
  1198                           ; BSR set to: 0
  1199                           ;scrolldisplay.c: 73:         {;scrolldisplay.c: 74:         clcd_putch('*', (0x80 + (1)
      +                          ));
  1200   000F9C  0E81               	movlw	129
  1201   000F9E  6E0F               	movwf	clcd_putch@addr^0,c
  1202   000FA0  0E2A               	movlw	42
  1203   000FA2  ECFE  F00F         	call	_clcd_putch
  1204   000FA6                     
  1205                           ;scrolldisplay.c: 75:         clcd_print((unsigned char*) scrolling[logg], (0x80 + (3)))
      +                          ;
  1206   000FA6  504F               	movf	_logg^0,w,c
  1207   000FA8  0D02               	mullw	2
  1208   000FAA  0E9D               	movlw	low _scrolling
  1209   000FAC  24F3               	addwf	243,w,c
  1210   000FAE  6ED9               	movwf	fsr2l,c
  1211   000FB0  0E00               	movlw	high _scrolling
  1212   000FB2  20F4               	addwfc	prodh,w,c
  1213   000FB4  6EDA               	movwf	fsr2h,c
  1214   000FB6  CFDE F003          	movff	postinc2,clcd_print@data
  1215   000FBA  CFDD F004          	movff	postdec2,clcd_print@data+1
  1216   000FBE  0E83               	movlw	131
  1217   000FC0  6E05               	movwf	clcd_print@addr^0,c
  1218   000FC2  ECDE  F00D         	call	_clcd_print	;wreg free
  1219   000FC6                     
  1220                           ;scrolldisplay.c: 76:         clcd_print((unsigned char*) scrolling[logg + 1], (0xC0 + (
      +                          3)));
  1221   000FC6  504F               	movf	_logg^0,w,c
  1222   000FC8  6E14               	movwf	??_scrolllog^0,c
  1223   000FCA  6A15               	clrf	(??_scrolllog+1)^0,c
  1224   000FCC  90D8               	bcf	status,0,c
  1225   000FCE  3614               	rlcf	??_scrolllog^0,f,c
  1226   000FD0  3615               	rlcf	(??_scrolllog+1)^0,f,c
  1227   000FD2  0E9F               	movlw	low (_scrolling+2)
  1228   000FD4  2414               	addwf	??_scrolllog^0,w,c
  1229   000FD6  6ED9               	movwf	fsr2l,c
  1230   000FD8  0E00               	movlw	high (_scrolling+2)
  1231   000FDA  2015               	addwfc	(??_scrolllog+1)^0,w,c
  1232   000FDC  6EDA               	movwf	fsr2h,c
  1233   000FDE  CFDE F003          	movff	postinc2,clcd_print@data
  1234   000FE2  CFDD F004          	movff	postdec2,clcd_print@data+1
  1235   000FE6  0EC3               	movlw	195
  1236   000FE8  6E05               	movwf	clcd_print@addr^0,c
  1237   000FEA  ECDE  F00D         	call	_clcd_print	;wreg free
  1238   000FEE                     l3075:
  1239                           
  1240                           ;scrolldisplay.c: 78:     if(key==12 || key==11)
  1241   000FEE  0E0C               	movlw	12
  1242   000FF0  1816               	xorwf	scrolllog@key^0,w,c
  1243   000FF2  B4D8               	btfsc	status,2,c
  1244   000FF4  EFFE  F007         	goto	u2291
  1245   000FF8  EF00  F008         	goto	u2290
  1246   000FFC                     u2291:
  1247   000FFC  EF09  F008         	goto	l3079
  1248   001000                     u2290:
  1249   001000  0E0B               	movlw	11
  1250   001002  1816               	xorwf	scrolllog@key^0,w,c
  1251   001004  A4D8               	btfss	status,2,c
  1252   001006  EF07  F008         	goto	u2301
  1253   00100A  EF09  F008         	goto	u2300
  1254   00100E                     u2301:
  1255   00100E  EF5E  F008         	goto	l3109
  1256   001012                     u2300:
  1257   001012                     l3079:
  1258                           
  1259                           ;scrolldisplay.c: 79:     {;scrolldisplay.c: 80:         out++;
  1260   001012  4A45               	infsnz	_out^0,f,c
  1261   001014  2A46               	incf	(_out+1)^0,f,c
  1262   001016                     
  1263                           ;scrolldisplay.c: 81:         prevkey=key;
  1264   001016  C016  F05A         	movff	scrolllog@key,scrolllog@prevkey
  1265   00101A                     
  1266                           ;scrolldisplay.c: 82:         if(out > 4000 && key==12)
  1267   00101A  0EA1               	movlw	161
  1268   00101C  5C45               	subwf	_out^0,w,c
  1269   00101E  0E0F               	movlw	15
  1270   001020  5846               	subwfb	(_out+1)^0,w,c
  1271   001022  A0D8               	btfss	status,0,c
  1272   001024  EF16  F008         	goto	u2311
  1273   001028  EF18  F008         	goto	u2310
  1274   00102C                     u2311:
  1275   00102C  EF37  F008         	goto	l3099
  1276   001030                     u2310:
  1277   001030  0E0C               	movlw	12
  1278   001032  1816               	xorwf	scrolllog@key^0,w,c
  1279   001034  A4D8               	btfss	status,2,c
  1280   001036  EF1F  F008         	goto	u2321
  1281   00103A  EF21  F008         	goto	u2320
  1282   00103E                     u2321:
  1283   00103E  EF37  F008         	goto	l3099
  1284   001042                     u2320:
  1285   001042                     
  1286                           ;scrolldisplay.c: 83:         {;scrolldisplay.c: 84:             out=0;
  1287   001042  0E00               	movlw	0
  1288   001044  6E46               	movwf	(_out+1)^0,c
  1289   001046  0E00               	movlw	0
  1290   001048  6E45               	movwf	_out^0,c
  1291   00104A                     
  1292                           ;scrolldisplay.c: 85:             clcd_write(0x01, 0);
  1293   00104A  0E00               	movlw	0
  1294   00104C  6E01               	movwf	clcd_write@control_bit^0,c
  1295   00104E  0E01               	movlw	1
  1296   001050  EC86  F00F         	call	_clcd_write
  1297   001054                     
  1298                           ;scrolldisplay.c: 86:             controlflag=1;
  1299   001054  0E00               	movlw	0
  1300   001056  6E59               	movwf	(_controlflag+1)^0,c
  1301   001058  0E01               	movlw	1
  1302   00105A  6E58               	movwf	_controlflag^0,c
  1303   00105C                     
  1304                           ;scrolldisplay.c: 87:             press=0;
  1305   00105C  0E00               	movlw	0
  1306   00105E  0100               	movlb	0	; () banked
  1307   001060  6F78               	movwf	(_press+1)& (0+255),b
  1308   001062  0E00               	movlw	0
  1309   001064  6F77               	movwf	_press& (0+255),b
  1310   001066  EF7A  F008         	goto	l426
  1311   00106A                     l3095:
  1312                           
  1313                           ;scrolldisplay.c: 88:             return;
  1314   00106A  EF7A  F008         	goto	l426
  1315   00106E                     l3099:
  1316   00106E  0EA1               	movlw	161
  1317   001070  5C45               	subwf	_out^0,w,c
  1318   001072  0E0F               	movlw	15
  1319   001074  5846               	subwfb	(_out+1)^0,w,c
  1320   001076  A0D8               	btfss	status,0,c
  1321   001078  EF40  F008         	goto	u2331
  1322   00107C  EF42  F008         	goto	u2330
  1323   001080                     u2331:
  1324   001080  EF7A  F008         	goto	l426
  1325   001084                     u2330:
  1326   001084  0E0B               	movlw	11
  1327   001086  1816               	xorwf	scrolllog@key^0,w,c
  1328   001088  A4D8               	btfss	status,2,c
  1329   00108A  EF49  F008         	goto	u2341
  1330   00108E  EF4B  F008         	goto	u2340
  1331   001092                     u2341:
  1332   001092  EF7A  F008         	goto	l426
  1333   001096                     u2340:
  1334   001096                     
  1335                           ;scrolldisplay.c: 91:         {;scrolldisplay.c: 92:             if(logg==0)
  1336   001096  504F               	movf	_logg^0,w,c
  1337   001098  A4D8               	btfss	status,2,c
  1338   00109A  EF51  F008         	goto	u2351
  1339   00109E  EF53  F008         	goto	u2350
  1340   0010A2                     u2351:
  1341   0010A2  EF35  F008         	goto	l3095
  1342   0010A6                     u2350:
  1343   0010A6                     
  1344                           ;scrolldisplay.c: 93:             {;scrolldisplay.c: 94:                 clcd_write(0x01
      +                          , 0);
  1345   0010A6  0E00               	movlw	0
  1346   0010A8  6E01               	movwf	clcd_write@control_bit^0,c
  1347   0010AA  0E01               	movlw	1
  1348   0010AC  EC86  F00F         	call	_clcd_write
  1349   0010B0                     
  1350                           ;scrolldisplay.c: 95:                 controlflag=4;
  1351   0010B0  0E00               	movlw	0
  1352   0010B2  6E59               	movwf	(_controlflag+1)^0,c
  1353   0010B4  0E04               	movlw	4
  1354   0010B6  6E58               	movwf	_controlflag^0,c
  1355   0010B8  EF7A  F008         	goto	l426
  1356   0010BC                     l3109:
  1357   0010BC  5045               	movf	_out^0,w,c
  1358   0010BE  1046               	iorwf	(_out+1)^0,w,c
  1359   0010C0  B4D8               	btfsc	status,2,c
  1360   0010C2  EF65  F008         	goto	u2361
  1361   0010C6  EF67  F008         	goto	u2360
  1362   0010CA                     u2361:
  1363   0010CA  EF7A  F008         	goto	l426
  1364   0010CE                     u2360:
  1365   0010CE  0EA1               	movlw	161
  1366   0010D0  5C45               	subwf	_out^0,w,c
  1367   0010D2  0E0F               	movlw	15
  1368   0010D4  5846               	subwfb	(_out+1)^0,w,c
  1369   0010D6  B0D8               	btfsc	status,0,c
  1370   0010D8  EF70  F008         	goto	u2371
  1371   0010DC  EF72  F008         	goto	u2370
  1372   0010E0                     u2371:
  1373   0010E0  EF7A  F008         	goto	l426
  1374   0010E4                     u2370:
  1375   0010E4                     
  1376                           ;scrolldisplay.c: 100:         {;scrolldisplay.c: 101:             out=0;
  1377   0010E4  0E00               	movlw	0
  1378   0010E6  6E46               	movwf	(_out+1)^0,c
  1379   0010E8  0E00               	movlw	0
  1380   0010EA  6E45               	movwf	_out^0,c
  1381   0010EC                     
  1382                           ;scrolldisplay.c: 102:             print(prevkey);
  1383   0010EC  505A               	movf	scrolllog@prevkey^0,w,c
  1384   0010EE  EC7B  F008         	call	_print
  1385   0010F2                     
  1386                           ;scrolldisplay.c: 103:             prevkey=0xFF;
  1387   0010F2  685A               	setf	scrolllog@prevkey^0,c
  1388   0010F4                     l426:
  1389   0010F4  0012               	return		;funcret
  1390   0010F6                     __end_of_scrolllog:
  1391                           	callstack 0
  1392                           
  1393 ;; *************** function _print *****************
  1394 ;; Defined at:
  1395 ;;		line 49 in file "scrolldisplay.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  key             1    wreg     unsigned char 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  key             1   18[COMRAM] unsigned char 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1409 ;;      Params:         0       0       0       0       0       0       0
  1410 ;;      Locals:         1       0       0       0       0       0       0
  1411 ;;      Temps:          2       0       0       0       0       0       0
  1412 ;;      Totals:         3       0       0       0       0       0       0
  1413 ;;Total ram usage:        3 bytes
  1414 ;; Hardware stack levels used: 1
  1415 ;; Hardware stack levels required when called: 3
  1416 ;; This function calls:
  1417 ;;		_clcd_print
  1418 ;;		_clcd_putch
  1419 ;;		_clcd_write
  1420 ;; This function is called by:
  1421 ;;		_scrolllog
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text2
  1426   0010F6                     __ptext2:
  1427                           	callstack 0
  1428   0010F6                     _print:
  1429                           	callstack 26
  1430                           
  1431                           ;incstack = 0
  1432                           ;print@key stored from wreg
  1433   0010F6  6E13               	movwf	print@key^0,c
  1434   0010F8                     
  1435                           ;scrolldisplay.c: 49: void print(unsigned char key);scrolldisplay.c: 50: {;scrolldisplay
      +                          .c: 51:     if((key==12)&&(logg < 4))
  1436   0010F8  0E0C               	movlw	12
  1437   0010FA  1813               	xorwf	print@key^0,w,c
  1438   0010FC  A4D8               	btfss	status,2,c
  1439   0010FE  EF83  F008         	goto	u2061
  1440   001102  EF85  F008         	goto	u2060
  1441   001106                     u2061:
  1442   001106  EFC3  F008         	goto	l2877
  1443   00110A                     u2060:
  1444   00110A  0E04               	movlw	4
  1445   00110C  604F               	cpfslt	_logg^0,c
  1446   00110E  EF8B  F008         	goto	u2071
  1447   001112  EF8D  F008         	goto	u2070
  1448   001116                     u2071:
  1449   001116  EFC3  F008         	goto	l2877
  1450   00111A                     u2070:
  1451   00111A                     
  1452                           ;scrolldisplay.c: 52:     {;scrolldisplay.c: 53:         clcd_write(0x01, 0);
  1453   00111A  0E00               	movlw	0
  1454   00111C  6E01               	movwf	clcd_write@control_bit^0,c
  1455   00111E  0E01               	movlw	1
  1456   001120  EC86  F00F         	call	_clcd_write
  1457   001124                     
  1458                           ;scrolldisplay.c: 54:         logg++;
  1459   001124  2A4F               	incf	_logg^0,f,c
  1460   001126                     
  1461                           ;scrolldisplay.c: 55:         press=1;
  1462   001126  0E00               	movlw	0
  1463   001128  0100               	movlb	0	; () banked
  1464   00112A  6F78               	movwf	(_press+1)& (0+255),b
  1465   00112C  0E01               	movlw	1
  1466   00112E  6F77               	movwf	_press& (0+255),b
  1467   001130                     
  1468                           ; BSR set to: 0
  1469                           ;scrolldisplay.c: 56:         clcd_putch('*', (0xC0 + (1)));
  1470   001130  0EC1               	movlw	193
  1471   001132  6E0F               	movwf	clcd_putch@addr^0,c
  1472   001134  0E2A               	movlw	42
  1473   001136  ECFE  F00F         	call	_clcd_putch
  1474   00113A                     
  1475                           ;scrolldisplay.c: 57:         clcd_print((unsigned char*) scrolling[logg-1], (0x80 + (3)
      +                          ));
  1476   00113A  504F               	movf	_logg^0,w,c
  1477   00113C  6E11               	movwf	??_print^0,c
  1478   00113E  6A12               	clrf	(??_print+1)^0,c
  1479   001140  90D8               	bcf	status,0,c
  1480   001142  3611               	rlcf	??_print^0,f,c
  1481   001144  3612               	rlcf	(??_print+1)^0,f,c
  1482   001146  0E9B               	movlw	low (_scrolling+65534)
  1483   001148  2411               	addwf	??_print^0,w,c
  1484   00114A  6ED9               	movwf	fsr2l,c
  1485   00114C  0E00               	movlw	high (_scrolling+65534)
  1486   00114E  2012               	addwfc	(??_print+1)^0,w,c
  1487   001150  6EDA               	movwf	fsr2h,c
  1488   001152  CFDE F003          	movff	postinc2,clcd_print@data
  1489   001156  CFDD F004          	movff	postdec2,clcd_print@data+1
  1490   00115A  0E83               	movlw	131
  1491   00115C  6E05               	movwf	clcd_print@addr^0,c
  1492   00115E  ECDE  F00D         	call	_clcd_print	;wreg free
  1493   001162                     
  1494                           ;scrolldisplay.c: 58:         clcd_print((unsigned char*) scrolling[logg], (0xC0 + (3)))
      +                          ;
  1495   001162  504F               	movf	_logg^0,w,c
  1496   001164  0D02               	mullw	2
  1497   001166  0E9D               	movlw	low _scrolling
  1498   001168  24F3               	addwf	243,w,c
  1499   00116A  6ED9               	movwf	fsr2l,c
  1500   00116C  0E00               	movlw	high _scrolling
  1501   00116E  20F4               	addwfc	prodh,w,c
  1502   001170  6EDA               	movwf	fsr2h,c
  1503   001172  CFDE F003          	movff	postinc2,clcd_print@data
  1504   001176  CFDD F004          	movff	postdec2,clcd_print@data+1
  1505   00117A  0EC3               	movlw	195
  1506   00117C  6E05               	movwf	clcd_print@addr^0,c
  1507   00117E  ECDE  F00D         	call	_clcd_print	;wreg free
  1508                           
  1509                           ;scrolldisplay.c: 59:     }
  1510   001182  EF08  F009         	goto	l416
  1511   001186                     l2877:
  1512   001186  0E0B               	movlw	11
  1513   001188  1813               	xorwf	print@key^0,w,c
  1514   00118A  A4D8               	btfss	status,2,c
  1515   00118C  EFCA  F008         	goto	u2081
  1516   001190  EFCC  F008         	goto	u2080
  1517   001194                     u2081:
  1518   001194  EF08  F009         	goto	l416
  1519   001198                     u2080:
  1520   001198  504F               	movf	_logg^0,w,c
  1521   00119A  B4D8               	btfsc	status,2,c
  1522   00119C  EFD2  F008         	goto	u2091
  1523   0011A0  EFD4  F008         	goto	u2090
  1524   0011A4                     u2091:
  1525   0011A4  EF08  F009         	goto	l416
  1526   0011A8                     u2090:
  1527   0011A8                     
  1528                           ;scrolldisplay.c: 61:     {;scrolldisplay.c: 62:         clcd_write(0x01, 0);
  1529   0011A8  0E00               	movlw	0
  1530   0011AA  6E01               	movwf	clcd_write@control_bit^0,c
  1531   0011AC  0E01               	movlw	1
  1532   0011AE  EC86  F00F         	call	_clcd_write
  1533   0011B2                     
  1534                           ;scrolldisplay.c: 63:         logg--;
  1535   0011B2  064F               	decf	_logg^0,f,c
  1536   0011B4                     
  1537                           ;scrolldisplay.c: 64:         press = 1;
  1538   0011B4  0E00               	movlw	0
  1539   0011B6  0100               	movlb	0	; () banked
  1540   0011B8  6F78               	movwf	(_press+1)& (0+255),b
  1541   0011BA  0E01               	movlw	1
  1542   0011BC  6F77               	movwf	_press& (0+255),b
  1543   0011BE                     
  1544                           ; BSR set to: 0
  1545                           ;scrolldisplay.c: 65:         clcd_putch('*', (0x80 + (1)));
  1546   0011BE  0E81               	movlw	129
  1547   0011C0  6E0F               	movwf	clcd_putch@addr^0,c
  1548   0011C2  0E2A               	movlw	42
  1549   0011C4  ECFE  F00F         	call	_clcd_putch
  1550   0011C8                     
  1551                           ;scrolldisplay.c: 66:         clcd_print((unsigned char*) scrolling[logg], (0x80 + (3)))
      +                          ;
  1552   0011C8  504F               	movf	_logg^0,w,c
  1553   0011CA  0D02               	mullw	2
  1554   0011CC  0E9D               	movlw	low _scrolling
  1555   0011CE  24F3               	addwf	243,w,c
  1556   0011D0  6ED9               	movwf	fsr2l,c
  1557   0011D2  0E00               	movlw	high _scrolling
  1558   0011D4  20F4               	addwfc	prodh,w,c
  1559   0011D6  6EDA               	movwf	fsr2h,c
  1560   0011D8  CFDE F003          	movff	postinc2,clcd_print@data
  1561   0011DC  CFDD F004          	movff	postdec2,clcd_print@data+1
  1562   0011E0  0E83               	movlw	131
  1563   0011E2  6E05               	movwf	clcd_print@addr^0,c
  1564   0011E4  ECDE  F00D         	call	_clcd_print	;wreg free
  1565   0011E8                     
  1566                           ;scrolldisplay.c: 67:         clcd_print((unsigned char*) scrolling[logg+1], (0xC0 + (3)
      +                          ));
  1567   0011E8  504F               	movf	_logg^0,w,c
  1568   0011EA  6E11               	movwf	??_print^0,c
  1569   0011EC  6A12               	clrf	(??_print+1)^0,c
  1570   0011EE  90D8               	bcf	status,0,c
  1571   0011F0  3611               	rlcf	??_print^0,f,c
  1572   0011F2  3612               	rlcf	(??_print+1)^0,f,c
  1573   0011F4  0E9F               	movlw	low (_scrolling+2)
  1574   0011F6  2411               	addwf	??_print^0,w,c
  1575   0011F8  6ED9               	movwf	fsr2l,c
  1576   0011FA  0E00               	movlw	high (_scrolling+2)
  1577   0011FC  2012               	addwfc	(??_print+1)^0,w,c
  1578   0011FE  6EDA               	movwf	fsr2h,c
  1579   001200  CFDE F003          	movff	postinc2,clcd_print@data
  1580   001204  CFDD F004          	movff	postdec2,clcd_print@data+1
  1581   001208  0EC3               	movlw	195
  1582   00120A  6E05               	movwf	clcd_print@addr^0,c
  1583   00120C  ECDE  F00D         	call	_clcd_print	;wreg free
  1584   001210                     l416:
  1585   001210  0012               	return		;funcret
  1586   001212                     __end_of_print:
  1587                           	callstack 0
  1588                           
  1589 ;; *************** function _read_switches *****************
  1590 ;; Defined at:
  1591 ;;		line 10 in file "matrixkeyboard.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  ucdetection     1    wreg     unsigned char 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  ucdetection     1    0[COMRAM] unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      unsigned char 
  1598 ;; Registers used:
  1599 ;;		wreg, status,2, status,0, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1605 ;;      Params:         0       0       0       0       0       0       0
  1606 ;;      Locals:         1       0       0       0       0       0       0
  1607 ;;      Temps:          0       0       0       0       0       0       0
  1608 ;;      Totals:         1       0       0       0       0       0       0
  1609 ;;Total ram usage:        1 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; Hardware stack levels required when called: 2
  1612 ;; This function calls:
  1613 ;;		_scan_key
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text3
  1620   001A66                     __ptext3:
  1621                           	callstack 0
  1622   001A66                     _read_switches:
  1623                           	callstack 28
  1624                           
  1625                           ;incstack = 0
  1626                           ;read_switches@ucdetection stored from wreg
  1627   001A66  6E01               	movwf	read_switches@ucdetection^0,c
  1628   001A68                     
  1629                           ;matrixkeyboard.c: 10: unsigned char read_switches(unsigned char ucdetection);matrixkeyb
      +                          oard.c: 11: {;matrixkeyboard.c: 12:     static unsigned char uconce=1, uckey;;matrixkeyb
      +                          oard.c: 13:     if(ucdetection ==0 )
  1630   001A68  5001               	movf	read_switches@ucdetection^0,w,c
  1631   001A6A  A4D8               	btfss	status,2,c
  1632   001A6C  EF3A  F00D         	goto	u921
  1633   001A70  EF3C  F00D         	goto	u920
  1634   001A74                     u921:
  1635   001A74  EF40  F00D         	goto	l1971
  1636   001A78                     u920:
  1637   001A78                     
  1638                           ;matrixkeyboard.c: 14:         return scan_key();
  1639   001A78  EC61  F00C         	call	_scan_key	;wreg free
  1640   001A7C  EF6D  F00D         	goto	l216
  1641   001A80                     l1971:
  1642   001A80  0401               	decf	read_switches@ucdetection^0,w,c
  1643   001A82  A4D8               	btfss	status,2,c
  1644   001A84  EF46  F00D         	goto	u931
  1645   001A88  EF48  F00D         	goto	u930
  1646   001A8C                     u931:
  1647   001A8C  EF6C  F00D         	goto	l1989
  1648   001A90                     u930:
  1649   001A90                     
  1650                           ;matrixkeyboard.c: 16:     {;matrixkeyboard.c: 17:         uckey = scan_key();
  1651   001A90  EC61  F00C         	call	_scan_key	;wreg free
  1652   001A94  6E51               	movwf	read_switches@uckey^0,c
  1653   001A96                     
  1654                           ;matrixkeyboard.c: 18:         if((uckey != 0xFF) && uconce)
  1655   001A96  2851               	incf	read_switches@uckey^0,w,c
  1656   001A98  B4D8               	btfsc	status,2,c
  1657   001A9A  EF51  F00D         	goto	u941
  1658   001A9E  EF53  F00D         	goto	u940
  1659   001AA2                     u941:
  1660   001AA2  EF60  F00D         	goto	l1985
  1661   001AA6                     u940:
  1662   001AA6  505C               	movf	read_switches@uconce^0,w,c
  1663   001AA8  B4D8               	btfsc	status,2,c
  1664   001AAA  EF59  F00D         	goto	u951
  1665   001AAE  EF5B  F00D         	goto	u950
  1666   001AB2                     u951:
  1667   001AB2  EF60  F00D         	goto	l1985
  1668   001AB6                     u950:
  1669   001AB6                     
  1670                           ;matrixkeyboard.c: 19:         {;matrixkeyboard.c: 20:             uconce=0;
  1671   001AB6  0E00               	movlw	0
  1672   001AB8  6E5C               	movwf	read_switches@uconce^0,c
  1673                           
  1674                           ;matrixkeyboard.c: 21:             return uckey;
  1675   001ABA  5051               	movf	read_switches@uckey^0,w,c
  1676   001ABC  EF6D  F00D         	goto	l216
  1677   001AC0                     l1985:
  1678   001AC0  2851               	incf	read_switches@uckey^0,w,c
  1679   001AC2  A4D8               	btfss	status,2,c
  1680   001AC4  EF66  F00D         	goto	u961
  1681   001AC8  EF68  F00D         	goto	u960
  1682   001ACC                     u961:
  1683   001ACC  EF6C  F00D         	goto	l218
  1684   001AD0                     u960:
  1685   001AD0                     
  1686                           ;matrixkeyboard.c: 24:             uconce = 1;
  1687   001AD0  0E01               	movlw	1
  1688   001AD2  6E5C               	movwf	read_switches@uconce^0,c
  1689   001AD4  EF6C  F00D         	goto	l1989
  1690   001AD8                     l218:
  1691   001AD8                     l1989:
  1692                           
  1693                           ;matrixkeyboard.c: 26:     return 0xFF;
  1694   001AD8  0EFF               	movlw	255
  1695   001ADA                     l216:
  1696   001ADA  0012               	return		;funcret
  1697   001ADC                     __end_of_read_switches:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _scan_key *****************
  1701 ;; Defined at:
  1702 ;;		line 29 in file "matrixkeyboard.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      unsigned char 
  1709 ;; Registers used:
  1710 ;;		wreg
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1716 ;;      Params:         0       0       0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0
  1719 ;;      Totals:         0       0       0       0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; Hardware stack levels required when called: 1
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_read_switches
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text4
  1731   0018C2                     __ptext4:
  1732                           	callstack 0
  1733   0018C2                     _scan_key:
  1734                           	callstack 28
  1735   0018C2                     
  1736                           ;matrixkeyboard.c: 31:     PORTBbits.RB5 = 0, PORTBbits.RB6 = 1, PORTBbits.RB7 = 1;
  1737   0018C2  9A81               	bcf	129,5,c	;volatile
  1738   0018C4  8C81               	bsf	129,6,c	;volatile
  1739   0018C6  8E81               	bsf	129,7,c	;volatile
  1740                           
  1741                           ;matrixkeyboard.c: 32:     if( PORTBbits.RB1 == 0)
  1742   0018C8  B281               	btfsc	129,1,c	;volatile
  1743   0018CA  EF69  F00C         	goto	u751
  1744   0018CE  EF6B  F00C         	goto	u750
  1745   0018D2                     u751:
  1746   0018D2  EF6E  F00C         	goto	l224
  1747   0018D6                     u750:
  1748   0018D6                     
  1749                           ;matrixkeyboard.c: 33:         return 1;
  1750   0018D6  0E01               	movlw	1
  1751   0018D8  EFA8  F00C         	goto	l225
  1752   0018DC                     l224:
  1753   0018DC  B881               	btfsc	129,4,c	;volatile
  1754   0018DE  EF73  F00C         	goto	u761
  1755   0018E2  EF75  F00C         	goto	u760
  1756   0018E6                     u761:
  1757   0018E6  EF78  F00C         	goto	l226
  1758   0018EA                     u760:
  1759   0018EA                     
  1760                           ;matrixkeyboard.c: 39:         return 10;
  1761   0018EA  0E0A               	movlw	10
  1762   0018EC  EFA8  F00C         	goto	l225
  1763   0018F0                     l226:
  1764                           
  1765                           ;matrixkeyboard.c: 41:     PORTBbits.RB5 = 1, PORTBbits.RB6 = 0, PORTBbits.RB7 = 1;
  1766   0018F0  8A81               	bsf	129,5,c	;volatile
  1767   0018F2  9C81               	bcf	129,6,c	;volatile
  1768   0018F4  8E81               	bsf	129,7,c	;volatile
  1769                           
  1770                           ;matrixkeyboard.c: 42:     if( PORTBbits.RB1 == 0)
  1771   0018F6  B281               	btfsc	129,1,c	;volatile
  1772   0018F8  EF80  F00C         	goto	u771
  1773   0018FC  EF82  F00C         	goto	u770
  1774   001900                     u771:
  1775   001900  EF85  F00C         	goto	l228
  1776   001904                     u770:
  1777   001904                     
  1778                           ;matrixkeyboard.c: 43:         return 2;
  1779   001904  0E02               	movlw	2
  1780   001906  EFA8  F00C         	goto	l225
  1781   00190A                     l228:
  1782   00190A  B881               	btfsc	129,4,c	;volatile
  1783   00190C  EF8A  F00C         	goto	u781
  1784   001910  EF8C  F00C         	goto	u780
  1785   001914                     u781:
  1786   001914  EF8F  F00C         	goto	l229
  1787   001918                     u780:
  1788   001918                     
  1789                           ;matrixkeyboard.c: 49:         return 11;
  1790   001918  0E0B               	movlw	11
  1791   00191A  EFA8  F00C         	goto	l225
  1792   00191E                     l229:
  1793                           
  1794                           ;matrixkeyboard.c: 51:     PORTBbits.RB5 = 1, PORTBbits.RB6 = 1, PORTBbits.RB7 = 0, PORT
      +                          Bbits.RB7 = 0;
  1795   00191E  8A81               	bsf	129,5,c	;volatile
  1796   001920  8C81               	bsf	129,6,c	;volatile
  1797   001922  9E81               	bcf	129,7,c	;volatile
  1798   001924  9E81               	bcf	129,7,c	;volatile
  1799                           
  1800                           ;matrixkeyboard.c: 52:     if( PORTBbits.RB1 == 0)
  1801   001926  B281               	btfsc	129,1,c	;volatile
  1802   001928  EF98  F00C         	goto	u791
  1803   00192C  EF9A  F00C         	goto	u790
  1804   001930                     u791:
  1805   001930  EF9D  F00C         	goto	l231
  1806   001934                     u790:
  1807   001934                     
  1808                           ;matrixkeyboard.c: 53:         return 3;
  1809   001934  0E03               	movlw	3
  1810   001936  EFA8  F00C         	goto	l225
  1811   00193A                     l231:
  1812   00193A  B881               	btfsc	129,4,c	;volatile
  1813   00193C  EFA2  F00C         	goto	u801
  1814   001940  EFA4  F00C         	goto	u800
  1815   001944                     u801:
  1816   001944  EFA7  F00C         	goto	l1829
  1817   001948                     u800:
  1818   001948                     
  1819                           ;matrixkeyboard.c: 59:         return 12;
  1820   001948  0E0C               	movlw	12
  1821   00194A  EFA8  F00C         	goto	l225
  1822   00194E                     l1829:
  1823                           
  1824                           ;matrixkeyboard.c: 61:         return 0xFF;
  1825   00194E  0EFF               	movlw	255
  1826   001950                     l225:
  1827   001950  0012               	return		;funcret
  1828   001952                     __end_of_scan_key:
  1829                           	callstack 0
  1830                           
  1831 ;; *************** function _logscreen *****************
  1832 ;; Defined at:
  1833 ;;		line 11 in file "password.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  key             1    wreg     unsigned char 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  key             1   18[COMRAM] unsigned char 
  1838 ;;  wait            2   16[COMRAM] unsigned int 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1848 ;;      Params:         0       0       0       0       0       0       0
  1849 ;;      Locals:         3       0       0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0
  1851 ;;      Totals:         3       0       0       0       0       0       0
  1852 ;;Total ram usage:        3 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; Hardware stack levels required when called: 4
  1855 ;; This function calls:
  1856 ;;		_clcd_print
  1857 ;;		_clcd_putch
  1858 ;;		_clcd_write
  1859 ;;		_mystrcmp
  1860 ;;		_timeleft
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text5
  1867   000A86                     __ptext5:
  1868                           	callstack 0
  1869   000A86                     _logscreen:
  1870                           	callstack 26
  1871                           
  1872                           ;incstack = 0
  1873                           ;logscreen@key stored from wreg
  1874   000A86  6E13               	movwf	logscreen@key^0,c
  1875   000A88                     
  1876                           ;password.c: 11: void logscreen(unsigned char key);password.c: 12: {;password.c: 13:    
      +                               uckey[4]='\0';
  1877   000A88  0E00               	movlw	0
  1878   000A8A  0100               	movlb	0	; () banked
  1879   000A8C  6F8C               	movwf	(_uckey+4)& (0+255),b
  1880   000A8E                     
  1881                           ; BSR set to: 0
  1882                           ;password.c: 14:         if(enterflag==0)
  1883   000A8E  5047               	movf	_enterflag^0,w,c
  1884   000A90  1048               	iorwf	(_enterflag+1)^0,w,c
  1885   000A92  A4D8               	btfss	status,2,c
  1886   000A94  EF4E  F005         	goto	u2121
  1887   000A98  EF50  F005         	goto	u2120
  1888   000A9C                     u2121:
  1889   000A9C  EF58  F005         	goto	l2941
  1890   000AA0                     u2120:
  1891   000AA0                     
  1892                           ; BSR set to: 0
  1893                           ;password.c: 15:             clcd_print( (unsigned char*) " Enter Password ", (0x80 + (0
      +                          )));
  1894   000AA0  0E34               	movlw	low STR_11
  1895   000AA2  6E03               	movwf	clcd_print@data^0,c
  1896   000AA4  0E06               	movlw	high STR_11
  1897   000AA6  6E04               	movwf	(clcd_print@data+1)^0,c
  1898   000AA8  0E80               	movlw	128
  1899   000AAA  6E05               	movwf	clcd_print@addr^0,c
  1900   000AAC  ECDE  F00D         	call	_clcd_print	;wreg free
  1901   000AB0                     l2941:
  1902                           
  1903                           ;password.c: 16:         if(tryflag>0)
  1904   000AB0  5054               	movf	_tryflag^0,w,c
  1905   000AB2  1055               	iorwf	(_tryflag+1)^0,w,c
  1906   000AB4  B4D8               	btfsc	status,2,c
  1907   000AB6  EF5F  F005         	goto	u2131
  1908   000ABA  EF61  F005         	goto	u2130
  1909   000ABE                     u2131:
  1910   000ABE  EFDB  F006         	goto	l3033
  1911   000AC2                     u2130:
  1912   000AC2                     
  1913                           ;password.c: 17:         {;password.c: 18:              if(i<4)
  1914   000AC2  0E04               	movlw	4
  1915   000AC4  6050               	cpfslt	_i^0,c
  1916   000AC6  EF67  F005         	goto	u2141
  1917   000ACA  EF69  F005         	goto	u2140
  1918   000ACE                     u2141:
  1919   000ACE  EF05  F006         	goto	l2981
  1920   000AD2                     u2140:
  1921   000AD2                     
  1922                           ;password.c: 19:              {;password.c: 20:                  if(!(notpressed--))
  1923   000AD2  0100               	movlb	0	; () banked
  1924   000AD4  07A7               	decf	_notpressed& (0+255),f,b
  1925   000AD6  0E00               	movlw	0
  1926   000AD8  5BA8               	subwfb	(_notpressed+1)& (0+255),f,b
  1927   000ADA  5BA9               	subwfb	(_notpressed+2)& (0+255),f,b
  1928   000ADC  5BAA               	subwfb	(_notpressed+3)& (0+255),f,b
  1929   000ADE  29A7               	incf	_notpressed& (0+255),w,b
  1930   000AE0  E10A               	bnz	u2151
  1931   000AE2  29A8               	incf	(_notpressed+1)& (0+255),w,b
  1932   000AE4  E108               	bnz	u2151
  1933   000AE6  29A9               	incf	(_notpressed+2)& (0+255),w,b
  1934   000AE8  E106               	bnz	u2151
  1935   000AEA  29AA               	incf	(_notpressed+3)& (0+255),w,b
  1936   000AEC  A4D8               	btfss	status,2,c
  1937   000AEE  EF7B  F005         	goto	u2151
  1938   000AF2  EF7D  F005         	goto	u2150
  1939   000AF6                     u2151:
  1940   000AF6  EF91  F005         	goto	l2951
  1941   000AFA                     u2150:
  1942   000AFA                     
  1943                           ; BSR set to: 0
  1944                           ;password.c: 21:                  {;password.c: 22:                      notpressed=1000
      +                          0;
  1945   000AFA  0E10               	movlw	16
  1946   000AFC  6FA7               	movwf	_notpressed& (0+255),b
  1947   000AFE  0E27               	movlw	39
  1948   000B00  6FA8               	movwf	(_notpressed+1)& (0+255),b
  1949   000B02  0E00               	movlw	0
  1950   000B04  6FA9               	movwf	(_notpressed+2)& (0+255),b
  1951   000B06  0E00               	movlw	0
  1952   000B08  6FAA               	movwf	(_notpressed+3)& (0+255),b
  1953                           
  1954                           ;password.c: 23:                      i=0, tryflag=0;
  1955   000B0A  0E00               	movlw	0
  1956   000B0C  6E50               	movwf	_i^0,c
  1957   000B0E  0E00               	movlw	0
  1958   000B10  6E55               	movwf	(_tryflag+1)^0,c
  1959   000B12  0E00               	movlw	0
  1960   000B14  6E54               	movwf	_tryflag^0,c
  1961                           
  1962                           ;password.c: 24:                      controlflag=1;
  1963   000B16  0E00               	movlw	0
  1964   000B18  6E59               	movwf	(_controlflag+1)^0,c
  1965   000B1A  0E01               	movlw	1
  1966   000B1C  6E58               	movwf	_controlflag^0,c
  1967   000B1E  EFE8  F006         	goto	l293
  1968   000B22                     l2951:
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;password.c: 27:                 compareflag=0;
  1972   000B22  0E00               	movlw	0
  1973   000B24  6F7A               	movwf	(_compareflag+1)& (0+255),b
  1974   000B26  0E00               	movlw	0
  1975   000B28  6F79               	movwf	_compareflag& (0+255),b
  1976   000B2A                     
  1977                           ; BSR set to: 0
  1978                           ;password.c: 28:                 if ((key != 0xFF) && key != 10)
  1979   000B2A  2813               	incf	logscreen@key^0,w,c
  1980   000B2C  B4D8               	btfsc	status,2,c
  1981   000B2E  EF9B  F005         	goto	u2161
  1982   000B32  EF9D  F005         	goto	u2160
  1983   000B36                     u2161:
  1984   000B36  EFC0  F005         	goto	l2965
  1985   000B3A                     u2160:
  1986   000B3A                     
  1987                           ; BSR set to: 0
  1988   000B3A  0E0A               	movlw	10
  1989   000B3C  1813               	xorwf	logscreen@key^0,w,c
  1990   000B3E  B4D8               	btfsc	status,2,c
  1991   000B40  EFA4  F005         	goto	u2171
  1992   000B44  EFA6  F005         	goto	u2170
  1993   000B48                     u2171:
  1994   000B48  EFC0  F005         	goto	l2965
  1995   000B4C                     u2170:
  1996   000B4C                     
  1997                           ; BSR set to: 0
  1998                           ;password.c: 29:                 {;password.c: 30:                     notpressed=10000;
  1999   000B4C  0E10               	movlw	16
  2000   000B4E  6FA7               	movwf	_notpressed& (0+255),b
  2001   000B50  0E27               	movlw	39
  2002   000B52  6FA8               	movwf	(_notpressed+1)& (0+255),b
  2003   000B54  0E00               	movlw	0
  2004   000B56  6FA9               	movwf	(_notpressed+2)& (0+255),b
  2005   000B58  0E00               	movlw	0
  2006   000B5A  6FAA               	movwf	(_notpressed+3)& (0+255),b
  2007   000B5C                     
  2008                           ; BSR set to: 0
  2009                           ;password.c: 31:                     uckey[i]=key-11+48;
  2010   000B5C  0E88               	movlw	low _uckey
  2011   000B5E  2450               	addwf	_i^0,w,c
  2012   000B60  6ED9               	movwf	fsr2l,c
  2013   000B62  6ADA               	clrf	fsr2h,c
  2014   000B64  0E00               	movlw	high _uckey
  2015   000B66  22DA               	addwfc	fsr2h,f,c
  2016   000B68  5013               	movf	logscreen@key^0,w,c
  2017   000B6A  0F25               	addlw	37
  2018   000B6C  6EDF               	movwf	indf2,c
  2019   000B6E                     
  2020                           ; BSR set to: 0
  2021                           ;password.c: 32:                     clcd_putch('*', (0xC0 + (i+5)));
  2022   000B6E  5050               	movf	_i^0,w,c
  2023   000B70  0FC5               	addlw	197
  2024   000B72  6E0F               	movwf	clcd_putch@addr^0,c
  2025   000B74  0E2A               	movlw	42
  2026   000B76  ECFE  F00F         	call	_clcd_putch
  2027   000B7A                     
  2028                           ;password.c: 33:                     i++;
  2029   000B7A  2A50               	incf	_i^0,f,c
  2030                           
  2031                           ;password.c: 34:                 }
  2032   000B7C  EF0C  F006         	goto	l2983
  2033   000B80                     l2965:
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;password.c: 36:                 {;password.c: 37:                     if(blinkflag == 0
      +                          )
  2037   000B80  5049               	movf	_blinkflag^0,w,c
  2038   000B82  104A               	iorwf	(_blinkflag+1)^0,w,c
  2039   000B84  A4D8               	btfss	status,2,c
  2040   000B86  EFC7  F005         	goto	u2181
  2041   000B8A  EFC9  F005         	goto	u2180
  2042   000B8E                     u2181:
  2043   000B8E  EF0C  F006         	goto	l2983
  2044   000B92                     u2180:
  2045   000B92                     
  2046                           ; BSR set to: 0
  2047                           ;password.c: 38:                     {;password.c: 39:                         blink++;
  2048   000B92  4A4B               	infsnz	_blink^0,f,c
  2049   000B94  2A4C               	incf	(_blink+1)^0,f,c
  2050   000B96                     
  2051                           ; BSR set to: 0
  2052                           ;password.c: 40:                         if(blink == 1600)
  2053   000B96  0E40               	movlw	64
  2054   000B98  184B               	xorwf	_blink^0,w,c
  2055   000B9A  E107               	bnz	u2191
  2056   000B9C  0E06               	movlw	6
  2057   000B9E  184C               	xorwf	(_blink+1)^0,w,c
  2058   000BA0  A4D8               	btfss	status,2,c
  2059   000BA2  EFD5  F005         	goto	u2191
  2060   000BA6  EFD7  F005         	goto	u2190
  2061   000BAA                     u2191:
  2062   000BAA  EFDD  F005         	goto	l2973
  2063   000BAE                     u2190:
  2064   000BAE                     
  2065                           ; BSR set to: 0
  2066                           ;password.c: 41:                             blink=0;
  2067   000BAE  0E00               	movlw	0
  2068   000BB0  6E4C               	movwf	(_blink+1)^0,c
  2069   000BB2  0E00               	movlw	0
  2070   000BB4  6E4B               	movwf	_blink^0,c
  2071   000BB6  EF0C  F006         	goto	l2983
  2072   000BBA                     l2973:
  2073                           
  2074                           ; BSR set to: 0
  2075   000BBA  0E20               	movlw	32
  2076   000BBC  5C4B               	subwf	_blink^0,w,c
  2077   000BBE  0E03               	movlw	3
  2078   000BC0  584C               	subwfb	(_blink+1)^0,w,c
  2079   000BC2  B0D8               	btfsc	status,0,c
  2080   000BC4  EFE6  F005         	goto	u2201
  2081   000BC8  EFE8  F005         	goto	u2200
  2082   000BCC                     u2201:
  2083   000BCC  EFF0  F005         	goto	l2977
  2084   000BD0                     u2200:
  2085   000BD0                     
  2086                           ; BSR set to: 0
  2087                           ;password.c: 43:                         {;password.c: 44:                             c
      +                          lcd_putch('_', (0xC0 + (i+5)));
  2088   000BD0  5050               	movf	_i^0,w,c
  2089   000BD2  0FC5               	addlw	197
  2090   000BD4  6E0F               	movwf	clcd_putch@addr^0,c
  2091   000BD6  0E5F               	movlw	95
  2092   000BD8  ECFE  F00F         	call	_clcd_putch
  2093                           
  2094                           ;password.c: 45:                         }
  2095   000BDC  EF0C  F006         	goto	l2983
  2096   000BE0                     l2977:
  2097                           
  2098                           ; BSR set to: 0
  2099   000BE0  0E20               	movlw	32
  2100   000BE2  5C4B               	subwf	_blink^0,w,c
  2101   000BE4  0E03               	movlw	3
  2102   000BE6  584C               	subwfb	(_blink+1)^0,w,c
  2103   000BE8  A0D8               	btfss	status,0,c
  2104   000BEA  EFF9  F005         	goto	u2211
  2105   000BEE  EFFB  F005         	goto	u2210
  2106   000BF2                     u2211:
  2107   000BF2  EF03  F006         	goto	l296
  2108   000BF6                     u2210:
  2109   000BF6                     
  2110                           ; BSR set to: 0
  2111                           ;password.c: 47:                         {;password.c: 48:                             c
      +                          lcd_putch(' ', (0xC0 + (i+5)));
  2112   000BF6  5050               	movf	_i^0,w,c
  2113   000BF8  0FC5               	addlw	197
  2114   000BFA  6E0F               	movwf	clcd_putch@addr^0,c
  2115   000BFC  0E20               	movlw	32
  2116   000BFE  ECFE  F00F         	call	_clcd_putch
  2117   000C02  EF0C  F006         	goto	l2983
  2118   000C06                     l296:
  2119                           
  2120                           ; BSR set to: 0
  2121   000C06  EF0C  F006         	goto	l2983
  2122   000C0A                     l2981:
  2123                           
  2124                           ;password.c: 54:               {;password.c: 55:                 compareflag=1;
  2125   000C0A  0E00               	movlw	0
  2126   000C0C  0100               	movlb	0	; () banked
  2127   000C0E  6F7A               	movwf	(_compareflag+1)& (0+255),b
  2128   000C10  0E01               	movlw	1
  2129   000C12  6F79               	movwf	_compareflag& (0+255),b
  2130                           
  2131                           ;password.c: 56:                 i=0;
  2132   000C14  0E00               	movlw	0
  2133   000C16  6E50               	movwf	_i^0,c
  2134   000C18                     l2983:
  2135                           
  2136                           ;password.c: 58:               if(compareflag == 1)
  2137   000C18  0100               	movlb	0	; () banked
  2138   000C1A  0579               	decf	_compareflag& (0+255),w,b
  2139   000C1C  117A               	iorwf	(_compareflag+1)& (0+255),w,b
  2140   000C1E  A4D8               	btfss	status,2,c
  2141   000C20  EF14  F006         	goto	u2221
  2142   000C24  EF16  F006         	goto	u2220
  2143   000C28                     u2221:
  2144   000C28  EFE8  F006         	goto	l293
  2145   000C2C                     u2220:
  2146   000C2C                     
  2147                           ; BSR set to: 0
  2148                           ;password.c: 59:               {;password.c: 60:                 if(!mystrcmp(uckey, pas
      +                          s))
  2149   000C2C  0E88               	movlw	low _uckey
  2150   000C2E  6E01               	movwf	mystrcmp@s1^0,c
  2151   000C30  0E00               	movlw	high _uckey
  2152   000C32  6E02               	movwf	(mystrcmp@s1+1)^0,c
  2153   000C34  0EAB               	movlw	low _pass
  2154   000C36  6E03               	movwf	mystrcmp@s2^0,c
  2155   000C38  0E00               	movlw	high _pass
  2156   000C3A  6E04               	movwf	(mystrcmp@s2+1)^0,c
  2157   000C3C  ECA8  F00D         	call	_mystrcmp	;wreg free
  2158   000C40  5001               	movf	?_mystrcmp^0,w,c
  2159   000C42  1002               	iorwf	(?_mystrcmp+1)^0,w,c
  2160   000C44  A4D8               	btfss	status,2,c
  2161   000C46  EF27  F006         	goto	u2231
  2162   000C4A  EF29  F006         	goto	u2230
  2163   000C4E                     u2231:
  2164   000C4E  EF8E  F006         	goto	l3015
  2165   000C52                     u2230:
  2166   000C52                     
  2167                           ;password.c: 61:                 {;password.c: 62:                     enterflag=1;
  2168   000C52  0E00               	movlw	0
  2169   000C54  6E48               	movwf	(_enterflag+1)^0,c
  2170   000C56  0E01               	movlw	1
  2171   000C58  6E47               	movwf	_enterflag^0,c
  2172                           
  2173                           ;password.c: 63:                     blinkflag=1;
  2174   000C5A  0E00               	movlw	0
  2175   000C5C  6E4A               	movwf	(_blinkflag+1)^0,c
  2176   000C5E  0E01               	movlw	1
  2177   000C60  6E49               	movwf	_blinkflag^0,c
  2178                           
  2179                           ;password.c: 64:                     for(unsigned int wait=50000; wait--;);
  2180   000C62  0EC3               	movlw	195
  2181   000C64  6E12               	movwf	(logscreen@wait+1)^0,c
  2182   000C66  0E50               	movlw	80
  2183   000C68  6E11               	movwf	logscreen@wait^0,c
  2184   000C6A                     l2989:
  2185   000C6A  0611               	decf	logscreen@wait^0,f,c
  2186   000C6C  A0D8               	btfss	status,0,c
  2187   000C6E  0612               	decf	(logscreen@wait+1)^0,f,c
  2188   000C70  2811               	incf	logscreen@wait^0,w,c
  2189   000C72  E106               	bnz	u2241
  2190   000C74  2812               	incf	(logscreen@wait+1)^0,w,c
  2191   000C76  A4D8               	btfss	status,2,c
  2192   000C78  EF40  F006         	goto	u2241
  2193   000C7C  EF42  F006         	goto	u2240
  2194   000C80                     u2241:
  2195   000C80  EF35  F006         	goto	l2989
  2196   000C84                     u2240:
  2197   000C84                     
  2198                           ;password.c: 65:                     clcd_print( (unsigned char*) "  Code Passed   ", (0
      +                          x80 + (0)));
  2199   000C84  0E01               	movlw	low STR_12
  2200   000C86  6E03               	movwf	clcd_print@data^0,c
  2201   000C88  0E06               	movlw	high STR_12
  2202   000C8A  6E04               	movwf	(clcd_print@data+1)^0,c
  2203   000C8C  0E80               	movlw	128
  2204   000C8E  6E05               	movwf	clcd_print@addr^0,c
  2205   000C90  ECDE  F00D         	call	_clcd_print	;wreg free
  2206                           
  2207                           ;password.c: 66:                     clcd_print( (unsigned char*) " Car Black Box  ", (0
      +                          xC0 + (0)));
  2208   000C94  0E12               	movlw	low STR_13
  2209   000C96  6E03               	movwf	clcd_print@data^0,c
  2210   000C98  0E06               	movlw	high STR_13
  2211   000C9A  6E04               	movwf	(clcd_print@data+1)^0,c
  2212   000C9C  0EC0               	movlw	192
  2213   000C9E  6E05               	movwf	clcd_print@addr^0,c
  2214   000CA0  ECDE  F00D         	call	_clcd_print	;wreg free
  2215   000CA4                     
  2216                           ;password.c: 67:                     for(wait=500000; wait--;);
  2217   000CA4  0E20               	movlw	32
  2218   000CA6  0100               	movlb	0	; () banked
  2219   000CA8  6F71               	movwf	_wait& (0+255),b
  2220   000CAA  0EA1               	movlw	161
  2221   000CAC  6F72               	movwf	(_wait+1)& (0+255),b
  2222   000CAE  0E07               	movlw	7
  2223   000CB0  6F73               	movwf	(_wait+2)& (0+255),b
  2224   000CB2  0E00               	movlw	0
  2225   000CB4  6F74               	movwf	(_wait+3)& (0+255),b
  2226   000CB6                     l2995:
  2227                           
  2228                           ; BSR set to: 0
  2229   000CB6  0771               	decf	_wait& (0+255),f,b
  2230   000CB8  0E00               	movlw	0
  2231   000CBA  5B72               	subwfb	(_wait+1)& (0+255),f,b
  2232   000CBC  5B73               	subwfb	(_wait+2)& (0+255),f,b
  2233   000CBE  5B74               	subwfb	(_wait+3)& (0+255),f,b
  2234   000CC0  2971               	incf	_wait& (0+255),w,b
  2235   000CC2  E10A               	bnz	u2251
  2236   000CC4  2972               	incf	(_wait+1)& (0+255),w,b
  2237   000CC6  E108               	bnz	u2251
  2238   000CC8  2973               	incf	(_wait+2)& (0+255),w,b
  2239   000CCA  E106               	bnz	u2251
  2240   000CCC  2974               	incf	(_wait+3)& (0+255),w,b
  2241   000CCE  A4D8               	btfss	status,2,c
  2242   000CD0  EF6C  F006         	goto	u2251
  2243   000CD4  EF6E  F006         	goto	u2250
  2244   000CD8                     u2251:
  2245   000CD8  EF5B  F006         	goto	l2995
  2246   000CDC                     u2250:
  2247   000CDC                     
  2248                           ; BSR set to: 0
  2249                           ;password.c: 68:                     clcd_write(0x01, 0);
  2250   000CDC  0E00               	movlw	0
  2251   000CDE  6E01               	movwf	clcd_write@control_bit^0,c
  2252   000CE0  0E01               	movlw	1
  2253   000CE2  EC86  F00F         	call	_clcd_write
  2254   000CE6                     
  2255                           ;password.c: 69:                     controlflag=3;
  2256   000CE6  0E00               	movlw	0
  2257   000CE8  6E59               	movwf	(_controlflag+1)^0,c
  2258   000CEA  0E03               	movlw	3
  2259   000CEC  6E58               	movwf	_controlflag^0,c
  2260   000CEE                     l3001:
  2261                           
  2262                           ;password.c: 70:                     blink=0, tryflag=3, enterflag=0, compareflag=0,blin
      +                          kflag=0;
  2263   000CEE  0E00               	movlw	0
  2264   000CF0  6E4C               	movwf	(_blink+1)^0,c
  2265   000CF2  0E00               	movlw	0
  2266   000CF4  6E4B               	movwf	_blink^0,c
  2267   000CF6  0E00               	movlw	0
  2268   000CF8  6E55               	movwf	(_tryflag+1)^0,c
  2269   000CFA  0E03               	movlw	3
  2270   000CFC  6E54               	movwf	_tryflag^0,c
  2271   000CFE  0E00               	movlw	0
  2272   000D00  6E48               	movwf	(_enterflag+1)^0,c
  2273   000D02  0E00               	movlw	0
  2274   000D04  6E47               	movwf	_enterflag^0,c
  2275   000D06  0E00               	movlw	0
  2276   000D08  0100               	movlb	0	; () banked
  2277   000D0A  6F7A               	movwf	(_compareflag+1)& (0+255),b
  2278   000D0C  0E00               	movlw	0
  2279   000D0E  6F79               	movwf	_compareflag& (0+255),b
  2280   000D10                     
  2281                           ; BSR set to: 0
  2282   000D10  0E00               	movlw	0
  2283   000D12  6E4A               	movwf	(_blinkflag+1)^0,c
  2284   000D14  0E00               	movlw	0
  2285   000D16  6E49               	movwf	_blinkflag^0,c
  2286   000D18  EFE8  F006         	goto	l293
  2287   000D1C                     l3015:
  2288                           
  2289                           ;password.c: 74:                 {;password.c: 75:                     notpressed=10000;
  2290   000D1C  0E10               	movlw	16
  2291   000D1E  0100               	movlb	0	; () banked
  2292   000D20  6FA7               	movwf	_notpressed& (0+255),b
  2293   000D22  0E27               	movlw	39
  2294   000D24  6FA8               	movwf	(_notpressed+1)& (0+255),b
  2295   000D26  0E00               	movlw	0
  2296   000D28  6FA9               	movwf	(_notpressed+2)& (0+255),b
  2297   000D2A  0E00               	movlw	0
  2298   000D2C  6FAA               	movwf	(_notpressed+3)& (0+255),b
  2299                           
  2300                           ;password.c: 76:                     enterflag=1;
  2301   000D2E  0E00               	movlw	0
  2302   000D30  6E48               	movwf	(_enterflag+1)^0,c
  2303   000D32  0E01               	movlw	1
  2304   000D34  6E47               	movwf	_enterflag^0,c
  2305   000D36                     
  2306                           ; BSR set to: 0
  2307                           ;password.c: 77:                      clcd_print( (unsigned char*) " Wrong Password ", (
      +                          0x80 + (0)));
  2308   000D36  0E23               	movlw	low STR_14
  2309   000D38  6E03               	movwf	clcd_print@data^0,c
  2310   000D3A  0E06               	movlw	high STR_14
  2311   000D3C  6E04               	movwf	(clcd_print@data+1)^0,c
  2312   000D3E  0E80               	movlw	128
  2313   000D40  6E05               	movwf	clcd_print@addr^0,c
  2314   000D42  ECDE  F00D         	call	_clcd_print	;wreg free
  2315   000D46                     
  2316                           ;password.c: 78:                      clcd_print( (unsigned char*) " attempt Remains", (
      +                          0xC0 + (1)));
  2317   000D46  0E45               	movlw	low STR_15
  2318   000D48  6E03               	movwf	clcd_print@data^0,c
  2319   000D4A  0E06               	movlw	high STR_15
  2320   000D4C  6E04               	movwf	(clcd_print@data+1)^0,c
  2321   000D4E  0EC1               	movlw	193
  2322   000D50  6E05               	movwf	clcd_print@addr^0,c
  2323   000D52  ECDE  F00D         	call	_clcd_print	;wreg free
  2324   000D56                     
  2325                           ;password.c: 79:                      tryflag--;
  2326   000D56  0654               	decf	_tryflag^0,f,c
  2327   000D58  A0D8               	btfss	status,0,c
  2328   000D5A  0655               	decf	(_tryflag+1)^0,f,c
  2329   000D5C                     
  2330                           ;password.c: 80:                      clcd_putch((unsigned char)tryflag+48, (0xC0 + (0))
      +                          );
  2331   000D5C  0EC0               	movlw	192
  2332   000D5E  6E0F               	movwf	clcd_putch@addr^0,c
  2333   000D60  5054               	movf	_tryflag^0,w,c
  2334   000D62  0F30               	addlw	48
  2335   000D64  ECFE  F00F         	call	_clcd_putch
  2336   000D68                     
  2337                           ;password.c: 81:                      for(wait=1000000; wait--;);
  2338   000D68  0E40               	movlw	64
  2339   000D6A  0100               	movlb	0	; () banked
  2340   000D6C  6F71               	movwf	_wait& (0+255),b
  2341   000D6E  0E42               	movlw	66
  2342   000D70  6F72               	movwf	(_wait+1)& (0+255),b
  2343   000D72  0E0F               	movlw	15
  2344   000D74  6F73               	movwf	(_wait+2)& (0+255),b
  2345   000D76  0E00               	movlw	0
  2346   000D78  6F74               	movwf	(_wait+3)& (0+255),b
  2347   000D7A                     l3027:
  2348                           
  2349                           ; BSR set to: 0
  2350   000D7A  0771               	decf	_wait& (0+255),f,b
  2351   000D7C  0E00               	movlw	0
  2352   000D7E  5B72               	subwfb	(_wait+1)& (0+255),f,b
  2353   000D80  5B73               	subwfb	(_wait+2)& (0+255),f,b
  2354   000D82  5B74               	subwfb	(_wait+3)& (0+255),f,b
  2355   000D84  2971               	incf	_wait& (0+255),w,b
  2356   000D86  E10A               	bnz	u2261
  2357   000D88  2972               	incf	(_wait+1)& (0+255),w,b
  2358   000D8A  E108               	bnz	u2261
  2359   000D8C  2973               	incf	(_wait+2)& (0+255),w,b
  2360   000D8E  E106               	bnz	u2261
  2361   000D90  2974               	incf	(_wait+3)& (0+255),w,b
  2362   000D92  A4D8               	btfss	status,2,c
  2363   000D94  EFCE  F006         	goto	u2261
  2364   000D98  EFD0  F006         	goto	u2260
  2365   000D9C                     u2261:
  2366   000D9C  EFBD  F006         	goto	l3027
  2367   000DA0                     u2260:
  2368   000DA0                     
  2369                           ; BSR set to: 0
  2370                           ;password.c: 82:                      clcd_write(0x01, 0);
  2371   000DA0  0E00               	movlw	0
  2372   000DA2  6E01               	movwf	clcd_write@control_bit^0,c
  2373   000DA4  0E01               	movlw	1
  2374   000DA6  EC86  F00F         	call	_clcd_write
  2375   000DAA                     
  2376                           ;password.c: 83:                      enterflag=0;
  2377   000DAA  0E00               	movlw	0
  2378   000DAC  6E48               	movwf	(_enterflag+1)^0,c
  2379   000DAE  0E00               	movlw	0
  2380   000DB0  6E47               	movwf	_enterflag^0,c
  2381   000DB2  EFE8  F006         	goto	l293
  2382   000DB6                     l3033:
  2383                           
  2384                           ;password.c: 88:        {;password.c: 89:               enterflag=1;
  2385   000DB6  0E00               	movlw	0
  2386   000DB8  6E48               	movwf	(_enterflag+1)^0,c
  2387   000DBA  0E01               	movlw	1
  2388   000DBC  6E47               	movwf	_enterflag^0,c
  2389   000DBE                     
  2390                           ;password.c: 90:               clcd_write(0x01, 0);
  2391   000DBE  0E00               	movlw	0
  2392   000DC0  6E01               	movwf	clcd_write@control_bit^0,c
  2393   000DC2  0E01               	movlw	1
  2394   000DC4  EC86  F00F         	call	_clcd_write
  2395   000DC8                     
  2396                           ;password.c: 91:               timeleft();
  2397   000DC8  EC92  F00A         	call	_timeleft	;wreg free
  2398   000DCC  EF77  F006         	goto	l3001
  2399   000DD0                     l293:
  2400   000DD0  0012               	return		;funcret
  2401   000DD2                     __end_of_logscreen:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _timeleft *****************
  2405 ;; Defined at:
  2406 ;;		line 95 in file "password.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2420 ;;      Params:         0       0       0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0
  2423 ;;      Totals:         0       0       0       0       0       0       0
  2424 ;;Total ram usage:        0 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 3
  2427 ;; This function calls:
  2428 ;;		___awdiv
  2429 ;;		___awmod
  2430 ;;		_clcd_print
  2431 ;;		_clcd_putch
  2432 ;;		_clcd_write
  2433 ;; This function is called by:
  2434 ;;		_logscreen
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text6
  2439   001524                     __ptext6:
  2440                           	callstack 0
  2441   001524                     _timeleft:
  2442                           	callstack 26
  2443   001524                     
  2444                           ;password.c: 97:     clcd_write(0x01, 0);
  2445   001524  0E00               	movlw	0
  2446   001526  6E01               	movwf	clcd_write@control_bit^0,c
  2447   001528  0E01               	movlw	1
  2448   00152A  EC86  F00F         	call	_clcd_write
  2449   00152E                     
  2450                           ;password.c: 98:     min=0;
  2451   00152E  0E00               	movlw	0
  2452   001530  0100               	movlb	0	; () banked
  2453   001532  6F7C               	movwf	(_min+1)& (0+255),b
  2454   001534  0E00               	movlw	0
  2455   001536  6F7B               	movwf	_min& (0+255),b
  2456   001538                     
  2457                           ; BSR set to: 0
  2458                           ;password.c: 99:     TMR0ON=1;
  2459   001538  8ED5               	bsf	4053,7,c	;volatile
  2460                           
  2461                           ;password.c: 100:     while(sec!=0)
  2462   00153A  EFE1  F00A         	goto	l2831
  2463   00153E                     l2825:
  2464                           
  2465                           ;password.c: 101:     {;password.c: 102:         clcd_print( (unsigned char*) "Try Again
      +                           left" , (0x80 + (0)));
  2466   00153E  0E66               	movlw	low STR_16
  2467   001540  6E03               	movwf	clcd_print@data^0,c
  2468   001542  0E06               	movlw	high STR_16
  2469   001544  6E04               	movwf	(clcd_print@data+1)^0,c
  2470   001546  0E80               	movlw	128
  2471   001548  6E05               	movwf	clcd_print@addr^0,c
  2472   00154A  ECDE  F00D         	call	_clcd_print	;wreg free
  2473                           
  2474                           ;password.c: 103:         clcd_print( (unsigned char*) "Wait for", (0xC0 + (0)));
  2475   00154E  0EBB               	movlw	low STR_17
  2476   001550  6E03               	movwf	clcd_print@data^0,c
  2477   001552  0E06               	movlw	high STR_17
  2478   001554  6E04               	movwf	(clcd_print@data+1)^0,c
  2479   001556  0EC0               	movlw	192
  2480   001558  6E05               	movwf	clcd_print@addr^0,c
  2481   00155A  ECDE  F00D         	call	_clcd_print	;wreg free
  2482                           
  2483                           ;password.c: 104:         clcd_print( (unsigned char*) " s  ", (0xC0 + (11)));
  2484   00155E  0ECD               	movlw	low STR_18
  2485   001560  6E03               	movwf	clcd_print@data^0,c
  2486   001562  0E06               	movlw	high STR_18
  2487   001564  6E04               	movwf	(clcd_print@data+1)^0,c
  2488   001566  0ECB               	movlw	203
  2489   001568  6E05               	movwf	clcd_print@addr^0,c
  2490   00156A  ECDE  F00D         	call	_clcd_print	;wreg free
  2491   00156E                     
  2492                           ;password.c: 106:         clcd_putch(sec%10+48, (0xC0 + (10)));
  2493   00156E  0ECA               	movlw	202
  2494   001570  6E0F               	movwf	clcd_putch@addr^0,c
  2495   001572  C056  F009         	movff	_sec,___awmod@dividend
  2496   001576  C057  F00A         	movff	_sec+1,___awmod@dividend+1
  2497   00157A  0E00               	movlw	0
  2498   00157C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2499   00157E  0E0A               	movlw	10
  2500   001580  6E0B               	movwf	___awmod@divisor^0,c
  2501   001582  ECB6  F00B         	call	___awmod	;wreg free
  2502   001586  5009               	movf	?___awmod^0,w,c
  2503   001588  0F30               	addlw	48
  2504   00158A  ECFE  F00F         	call	_clcd_putch
  2505   00158E                     
  2506                           ;password.c: 107:         clcd_putch(((sec/10)%10)+48, (0xC0 + (9)));
  2507   00158E  0EC9               	movlw	201
  2508   001590  6E0F               	movwf	clcd_putch@addr^0,c
  2509   001592  0E00               	movlw	0
  2510   001594  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2511   001596  0E0A               	movlw	10
  2512   001598  6E03               	movwf	___awdiv@divisor^0,c
  2513   00159A  C056  F001         	movff	_sec,___awdiv@dividend
  2514   00159E  C057  F002         	movff	_sec+1,___awdiv@dividend+1
  2515   0015A2  ECF5  F00A         	call	___awdiv	;wreg free
  2516   0015A6  C001  F009         	movff	?___awdiv,___awmod@dividend
  2517   0015AA  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2518   0015AE  0E00               	movlw	0
  2519   0015B0  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2520   0015B2  0E0A               	movlw	10
  2521   0015B4  6E0B               	movwf	___awmod@divisor^0,c
  2522   0015B6  ECB6  F00B         	call	___awmod	;wreg free
  2523   0015BA  5009               	movf	?___awmod^0,w,c
  2524   0015BC  0F30               	addlw	48
  2525   0015BE  ECFE  F00F         	call	_clcd_putch
  2526   0015C2                     l2831:
  2527                           
  2528                           ;password.c: 100:     while(sec!=0)
  2529   0015C2  5056               	movf	_sec^0,w,c
  2530   0015C4  1057               	iorwf	(_sec+1)^0,w,c
  2531   0015C6  A4D8               	btfss	status,2,c
  2532   0015C8  EFE8  F00A         	goto	u2031
  2533   0015CC  EFEA  F00A         	goto	u2030
  2534   0015D0                     u2031:
  2535   0015D0  EF9F  F00A         	goto	l2825
  2536   0015D4                     u2030:
  2537   0015D4                     
  2538                           ;password.c: 109:     TMR0ON=0;
  2539   0015D4  9ED5               	bcf	4053,7,c	;volatile
  2540   0015D6                     
  2541                           ;password.c: 110:     sec=10;
  2542   0015D6  0E00               	movlw	0
  2543   0015D8  6E57               	movwf	(_sec+1)^0,c
  2544   0015DA  0E0A               	movlw	10
  2545   0015DC  6E56               	movwf	_sec^0,c
  2546   0015DE                     
  2547                           ;password.c: 111:     clcd_write(0x01, 0);
  2548   0015DE  0E00               	movlw	0
  2549   0015E0  6E01               	movwf	clcd_write@control_bit^0,c
  2550   0015E2  0E01               	movlw	1
  2551   0015E4  EC86  F00F         	call	_clcd_write
  2552   0015E8  0012               	return		;funcret
  2553   0015EA                     __end_of_timeleft:
  2554                           	callstack 0
  2555                           
  2556 ;; *************** function ___awdiv *****************
  2557 ;; Defined at:
  2558 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  dividend        2    0[COMRAM] int 
  2561 ;;  divisor         2    2[COMRAM] int 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  quotient        2    6[COMRAM] int 
  2564 ;;  sign            1    5[COMRAM] unsigned char 
  2565 ;;  counter         1    4[COMRAM] unsigned char 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  2    0[COMRAM] int 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2575 ;;      Params:         4       0       0       0       0       0       0
  2576 ;;      Locals:         4       0       0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0
  2578 ;;      Totals:         8       0       0       0       0       0       0
  2579 ;;Total ram usage:        8 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_timeleft
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text7
  2590   0015EA                     __ptext7:
  2591                           	callstack 0
  2592   0015EA                     ___awdiv:
  2593                           	callstack 27
  2594   0015EA  0E00               	movlw	0
  2595   0015EC  6E06               	movwf	___awdiv@sign^0,c
  2596   0015EE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2597   0015F0  EFFE  F00A         	goto	u1590
  2598   0015F4  EFFC  F00A         	goto	u1591
  2599   0015F8                     u1591:
  2600   0015F8  EF04  F00B         	goto	l2517
  2601   0015FC                     u1590:
  2602   0015FC  6C03               	negf	___awdiv@divisor^0,c
  2603   0015FE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2604   001600  B0D8               	btfsc	status,0,c
  2605   001602  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2606   001604  0E01               	movlw	1
  2607   001606  6E06               	movwf	___awdiv@sign^0,c
  2608   001608                     l2517:
  2609   001608  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2610   00160A  EF0B  F00B         	goto	u1600
  2611   00160E  EF09  F00B         	goto	u1601
  2612   001612                     u1601:
  2613   001612  EF11  F00B         	goto	l2523
  2614   001616                     u1600:
  2615   001616  6C01               	negf	___awdiv@dividend^0,c
  2616   001618  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2617   00161A  B0D8               	btfsc	status,0,c
  2618   00161C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2619   00161E  0E01               	movlw	1
  2620   001620  1A06               	xorwf	___awdiv@sign^0,f,c
  2621   001622                     l2523:
  2622   001622  0E00               	movlw	0
  2623   001624  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2624   001626  0E00               	movlw	0
  2625   001628  6E07               	movwf	___awdiv@quotient^0,c
  2626   00162A  5003               	movf	___awdiv@divisor^0,w,c
  2627   00162C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2628   00162E  B4D8               	btfsc	status,2,c
  2629   001630  EF1C  F00B         	goto	u1611
  2630   001634  EF1E  F00B         	goto	u1610
  2631   001638                     u1611:
  2632   001638  EF46  F00B         	goto	l2545
  2633   00163C                     u1610:
  2634   00163C  0E01               	movlw	1
  2635   00163E  6E05               	movwf	___awdiv@counter^0,c
  2636   001640  EF26  F00B         	goto	l2531
  2637   001644                     l2529:
  2638   001644  90D8               	bcf	status,0,c
  2639   001646  3603               	rlcf	___awdiv@divisor^0,f,c
  2640   001648  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2641   00164A  2A05               	incf	___awdiv@counter^0,f,c
  2642   00164C                     l2531:
  2643   00164C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2644   00164E  EF2B  F00B         	goto	u1621
  2645   001652  EF2D  F00B         	goto	u1620
  2646   001656                     u1621:
  2647   001656  EF22  F00B         	goto	l2529
  2648   00165A                     u1620:
  2649   00165A                     l2533:
  2650   00165A  90D8               	bcf	status,0,c
  2651   00165C  3607               	rlcf	___awdiv@quotient^0,f,c
  2652   00165E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2653   001660  5003               	movf	___awdiv@divisor^0,w,c
  2654   001662  5C01               	subwf	___awdiv@dividend^0,w,c
  2655   001664  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2656   001666  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2657   001668  A0D8               	btfss	status,0,c
  2658   00166A  EF39  F00B         	goto	u1631
  2659   00166E  EF3B  F00B         	goto	u1630
  2660   001672                     u1631:
  2661   001672  EF40  F00B         	goto	l2541
  2662   001676                     u1630:
  2663   001676  5003               	movf	___awdiv@divisor^0,w,c
  2664   001678  5E01               	subwf	___awdiv@dividend^0,f,c
  2665   00167A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2666   00167C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2667   00167E  8007               	bsf	___awdiv@quotient^0,0,c
  2668   001680                     l2541:
  2669   001680  90D8               	bcf	status,0,c
  2670   001682  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2671   001684  3203               	rrcf	___awdiv@divisor^0,f,c
  2672   001686  2E05               	decfsz	___awdiv@counter^0,f,c
  2673   001688  EF2D  F00B         	goto	l2533
  2674   00168C                     l2545:
  2675   00168C  5006               	movf	___awdiv@sign^0,w,c
  2676   00168E  B4D8               	btfsc	status,2,c
  2677   001690  EF4C  F00B         	goto	u1641
  2678   001694  EF4E  F00B         	goto	u1640
  2679   001698                     u1641:
  2680   001698  EF52  F00B         	goto	l2549
  2681   00169C                     u1640:
  2682   00169C  6C07               	negf	___awdiv@quotient^0,c
  2683   00169E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2684   0016A0  B0D8               	btfsc	status,0,c
  2685   0016A2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2686   0016A4                     l2549:
  2687   0016A4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2688   0016A8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2689   0016AC  0012               	return		;funcret
  2690   0016AE                     __end_of___awdiv:
  2691                           	callstack 0
  2692                           
  2693 ;; *************** function _mystrcmp *****************
  2694 ;; Defined at:
  2695 ;;		line 113 in file "password.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  s1              2    0[COMRAM] PTR unsigned char 
  2698 ;;		 -> uckey(5), 
  2699 ;;  s2              2    2[COMRAM] PTR unsigned char 
  2700 ;;		 -> pass(5), 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  i               2    6[COMRAM] int 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  2    0[COMRAM] int 
  2705 ;; Registers used:
  2706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2712 ;;      Params:         4       0       0       0       0       0       0
  2713 ;;      Locals:         2       0       0       0       0       0       0
  2714 ;;      Temps:          2       0       0       0       0       0       0
  2715 ;;      Totals:         8       0       0       0       0       0       0
  2716 ;;Total ram usage:        8 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 1
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_logscreen
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text8
  2727   001B50                     __ptext8:
  2728                           	callstack 0
  2729   001B50                     _mystrcmp:
  2730                           	callstack 28
  2731   001B50                     
  2732                           ;password.c: 113: int mystrcmp(char*s1, char *s2);password.c: 114: {;password.c: 115:   
      +                            int i=0;
  2733   001B50  0E00               	movlw	0
  2734   001B52  6E08               	movwf	(mystrcmp@i+1)^0,c
  2735   001B54  0E00               	movlw	0
  2736   001B56  6E07               	movwf	mystrcmp@i^0,c
  2737                           
  2738                           ;password.c: 116:     while(s1[i]!= '\0')
  2739   001B58  EFCB  F00D         	goto	l2813
  2740   001B5C                     l2805:
  2741                           
  2742                           ;password.c: 117:     {;password.c: 118:         if(s1[i]!=s2[i])
  2743   001B5C  5007               	movf	mystrcmp@i^0,w,c
  2744   001B5E  2403               	addwf	mystrcmp@s2^0,w,c
  2745   001B60  6ED9               	movwf	fsr2l,c
  2746   001B62  5008               	movf	(mystrcmp@i+1)^0,w,c
  2747   001B64  2004               	addwfc	(mystrcmp@s2+1)^0,w,c
  2748   001B66  6EDA               	movwf	fsr2h,c
  2749   001B68  5007               	movf	mystrcmp@i^0,w,c
  2750   001B6A  2401               	addwf	mystrcmp@s1^0,w,c
  2751   001B6C  6EE1               	movwf	fsr1l,c
  2752   001B6E  5008               	movf	(mystrcmp@i+1)^0,w,c
  2753   001B70  2002               	addwfc	(mystrcmp@s1+1)^0,w,c
  2754   001B72  6EE2               	movwf	fsr1h,c
  2755   001B74  50DE               	movf	postinc2,w,c
  2756   001B76  18E6               	xorwf	postinc1,w,c
  2757   001B78  B4D8               	btfsc	status,2,c
  2758   001B7A  EFC1  F00D         	goto	u2011
  2759   001B7E  EFC3  F00D         	goto	u2010
  2760   001B82                     u2011:
  2761   001B82  EFC9  F00D         	goto	l2811
  2762   001B86                     u2010:
  2763   001B86                     
  2764                           ;password.c: 119:         {;password.c: 120:             return 1;
  2765   001B86  0E00               	movlw	0
  2766   001B88  6E02               	movwf	(?_mystrcmp+1)^0,c
  2767   001B8A  0E01               	movlw	1
  2768   001B8C  6E01               	movwf	?_mystrcmp^0,c
  2769   001B8E  EFDD  F00D         	goto	l327
  2770   001B92                     l2811:
  2771                           
  2772                           ;password.c: 122:         i++;
  2773   001B92  4A07               	infsnz	mystrcmp@i^0,f,c
  2774   001B94  2A08               	incf	(mystrcmp@i+1)^0,f,c
  2775   001B96                     l2813:
  2776                           
  2777                           ;password.c: 116:     while(s1[i]!= '\0')
  2778   001B96  5007               	movf	mystrcmp@i^0,w,c
  2779   001B98  2401               	addwf	mystrcmp@s1^0,w,c
  2780   001B9A  6ED9               	movwf	fsr2l,c
  2781   001B9C  5008               	movf	(mystrcmp@i+1)^0,w,c
  2782   001B9E  2002               	addwfc	(mystrcmp@s1+1)^0,w,c
  2783   001BA0  6EDA               	movwf	fsr2h,c
  2784   001BA2  50DF               	movf	indf2,w,c
  2785   001BA4  A4D8               	btfss	status,2,c
  2786   001BA6  EFD7  F00D         	goto	u2021
  2787   001BAA  EFD9  F00D         	goto	u2020
  2788   001BAE                     u2021:
  2789   001BAE  EFAE  F00D         	goto	l2805
  2790   001BB2                     u2020:
  2791   001BB2                     
  2792                           ;password.c: 124:     return 0;
  2793   001BB2  0E00               	movlw	0
  2794   001BB4  6E02               	movwf	(?_mystrcmp+1)^0,c
  2795   001BB6  0E00               	movlw	0
  2796   001BB8  6E01               	movwf	?_mystrcmp^0,c
  2797   001BBA                     l327:
  2798   001BBA  0012               	return		;funcret
  2799   001BBC                     __end_of_mystrcmp:
  2800                           	callstack 0
  2801                           
  2802 ;; *************** function _init_config *****************
  2803 ;; Defined at:
  2804 ;;		line 9 in file "main.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2818 ;;      Params:         0       0       0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0
  2821 ;;      Totals:         0       0       0       0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; Hardware stack levels required when called: 6
  2825 ;; This function calls:
  2826 ;;		_init_adc
  2827 ;;		_init_clcd
  2828 ;;		_init_ds1307
  2829 ;;		_init_i2c
  2830 ;;		_init_matrixkeypad
  2831 ;;		_init_timer0
  2832 ;; This function is called by:
  2833 ;;		_main
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text9
  2838   001FC8                     __ptext9:
  2839                           	callstack 0
  2840   001FC8                     _init_config:
  2841                           	callstack 24
  2842   001FC8                     
  2843                           ;main.c: 10:     init_matrixkeypad();
  2844   001FC8  EC27  F010         	call	_init_matrixkeypad	;wreg free
  2845                           
  2846                           ;main.c: 11:     init_clcd();
  2847   001FCC  EC57  F00B         	call	_init_clcd	;wreg free
  2848   001FD0                     
  2849                           ;main.c: 12:     init_adc();
  2850   001FD0  ECD5  F00F         	call	_init_adc	;wreg free
  2851   001FD4                     
  2852                           ;main.c: 13:     init_timer0();
  2853   001FD4  ECF1  F00F         	call	_init_timer0	;wreg free
  2854   001FD8                     
  2855                           ;main.c: 14:     init_i2c();
  2856   001FD8  EC0A  F010         	call	_init_i2c	;wreg free
  2857   001FDC                     
  2858                           ;main.c: 15:  init_ds1307();
  2859   001FDC  EC27  F00F         	call	_init_ds1307	;wreg free
  2860   001FE0  0012               	return		;funcret
  2861   001FE2                     __end_of_init_config:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function _init_timer0 *****************
  2865 ;; Defined at:
  2866 ;;		line 3 in file "timer0.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2880 ;;      Params:         0       0       0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0
  2883 ;;      Totals:         0       0       0       0       0       0       0
  2884 ;;Total ram usage:        0 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 1
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_init_config
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text10
  2895   001FE2                     __ptext10:
  2896                           	callstack 0
  2897   001FE2                     _init_timer0:
  2898                           	callstack 28
  2899   001FE2                     
  2900                           ;timer0.c: 5:     GIE=1;
  2901   001FE2  8EF2               	bsf	4082,7,c	;volatile
  2902                           
  2903                           ;timer0.c: 6:     PEIE=1;
  2904   001FE4  8CF2               	bsf	4082,6,c	;volatile
  2905                           
  2906                           ;timer0.c: 7:     TMR0IE=1;
  2907   001FE6  8AF2               	bsf	4082,5,c	;volatile
  2908                           
  2909                           ;timer0.c: 8:     TMR0ON=0;
  2910   001FE8  9ED5               	bcf	4053,7,c	;volatile
  2911                           
  2912                           ;timer0.c: 9:     TMR0IF=0;
  2913   001FEA  94F2               	bcf	4082,2,c	;volatile
  2914                           
  2915                           ;timer0.c: 11:     T08BIT=1;
  2916   001FEC  8CD5               	bsf	4053,6,c	;volatile
  2917                           
  2918                           ;timer0.c: 12:     T0CS = 0;
  2919   001FEE  9AD5               	bcf	4053,5,c	;volatile
  2920                           
  2921                           ;timer0.c: 13:     PSA = 1;
  2922   001FF0  86D5               	bsf	4053,3,c	;volatile
  2923   001FF2                     
  2924                           ;timer0.c: 14:     TMR0 = 6;
  2925   001FF2  0E00               	movlw	0
  2926   001FF4  6ED7               	movwf	215,c	;volatile
  2927   001FF6  0E06               	movlw	6
  2928   001FF8  6ED6               	movwf	214,c	;volatile
  2929   001FFA  0012               	return		;funcret
  2930   001FFC                     __end_of_init_timer0:
  2931                           	callstack 0
  2932                           
  2933 ;; *************** function _init_matrixkeypad *****************
  2934 ;; Defined at:
  2935 ;;		line 3 in file "matrixkeyboard.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2949 ;;      Params:         0       0       0       0       0       0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0
  2951 ;;      Temps:          0       0       0       0       0       0       0
  2952 ;;      Totals:         0       0       0       0       0       0       0
  2953 ;;Total ram usage:        0 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_init_config
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text11
  2964   00204E                     __ptext11:
  2965                           	callstack 0
  2966   00204E                     _init_matrixkeypad:
  2967                           	callstack 28
  2968   00204E                     
  2969                           ;matrixkeyboard.c: 5:     PORTB =0x00;
  2970   00204E  0E00               	movlw	0
  2971   002050  6E81               	movwf	129,c	;volatile
  2972   002052                     
  2973                           ;matrixkeyboard.c: 6:     TRISB = TRISB & 0x1E;
  2974   002052  5093               	movf	147,w,c	;volatile
  2975   002054  0B1E               	andlw	30
  2976   002056  6E93               	movwf	147,c	;volatile
  2977   002058                     
  2978                           ;matrixkeyboard.c: 7:     RBPU=0;
  2979   002058  9EF1               	bcf	4081,7,c	;volatile
  2980   00205A  0012               	return		;funcret
  2981   00205C                     __end_of_init_matrixkeypad:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function _init_i2c *****************
  2985 ;; Defined at:
  2986 ;;		line 4 in file "i2c.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3000 ;;      Params:         0       0       0       0       0       0       0
  3001 ;;      Locals:         0       0       0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0
  3003 ;;      Totals:         0       0       0       0       0       0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 1
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_init_config
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text12
  3015   002014                     __ptext12:
  3016                           	callstack 0
  3017   002014                     _init_i2c:
  3018                           	callstack 28
  3019   002014                     
  3020                           ;i2c.c: 7:  TRISC3 = 1;
  3021   002014  8694               	bsf	3988,3,c	;volatile
  3022                           
  3023                           ;i2c.c: 8:  TRISC4 = 1;
  3024   002016  8894               	bsf	3988,4,c	;volatile
  3025   002018                     
  3026                           ;i2c.c: 10:  SSPCON1 = 0x28;
  3027   002018  0E28               	movlw	40
  3028   00201A  6EC6               	movwf	198,c	;volatile
  3029                           
  3030                           ;i2c.c: 12:  SSPADD = 0x31;
  3031   00201C  0E31               	movlw	49
  3032   00201E  6EC8               	movwf	200,c	;volatile
  3033   002020                     
  3034                           ;i2c.c: 14:  CKE = 0;
  3035   002020  9CC7               	bcf	4039,6,c	;volatile
  3036   002022                     
  3037                           ;i2c.c: 16:  SMP = 1;
  3038   002022  8EC7               	bsf	4039,7,c	;volatile
  3039   002024                     
  3040                           ;i2c.c: 18:  SSPIF = 0;
  3041   002024  969E               	bcf	3998,3,c	;volatile
  3042   002026                     
  3043                           ;i2c.c: 20:  BCLIF = 0;
  3044   002026  96A1               	bcf	4001,3,c	;volatile
  3045   002028  0012               	return		;funcret
  3046   00202A                     __end_of_init_i2c:
  3047                           	callstack 0
  3048                           
  3049 ;; *************** function _init_ds1307 *****************
  3050 ;; Defined at:
  3051 ;;		line 13 in file "ds1307.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  dummy           1    3[COMRAM] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3065 ;;      Params:         0       0       0       0       0       0       0
  3066 ;;      Locals:         1       0       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0
  3068 ;;      Totals:         1       0       0       0       0       0       0
  3069 ;;Total ram usage:        1 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; Hardware stack levels required when called: 5
  3072 ;; This function calls:
  3073 ;;		_read_ds1307
  3074 ;;		_write_ds1307
  3075 ;; This function is called by:
  3076 ;;		_init_config
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text13
  3081   001E4E                     __ptext13:
  3082                           	callstack 0
  3083   001E4E                     _init_ds1307:
  3084                           	callstack 24
  3085   001E4E                     
  3086                           ;ds1307.c: 15:  unsigned char dummy;;ds1307.c: 18:  dummy = read_ds1307(0x00);
  3087   001E4E  0E00               	movlw	0
  3088   001E50  EC9F  F00F         	call	_read_ds1307
  3089   001E54  6E04               	movwf	init_ds1307@dummy^0,c
  3090   001E56                     
  3091                           ;ds1307.c: 19:  write_ds1307(0x00, dummy | 0x80);
  3092   001E56  5004               	movf	init_ds1307@dummy^0,w,c
  3093   001E58  0980               	iorlw	128
  3094   001E5A  6E02               	movwf	write_ds1307@data^0,c
  3095   001E5C  0E00               	movlw	0
  3096   001E5E  ECC6  F00F         	call	_write_ds1307
  3097   001E62                     
  3098                           ;ds1307.c: 22:  dummy = read_ds1307(0x02);
  3099   001E62  0E02               	movlw	2
  3100   001E64  EC9F  F00F         	call	_read_ds1307
  3101   001E68  6E04               	movwf	init_ds1307@dummy^0,c
  3102                           
  3103                           ;ds1307.c: 23:  write_ds1307(0x02, dummy | 0x40);
  3104   001E6A  5004               	movf	init_ds1307@dummy^0,w,c
  3105   001E6C  0940               	iorlw	64
  3106   001E6E  6E02               	movwf	write_ds1307@data^0,c
  3107   001E70  0E02               	movlw	2
  3108   001E72  ECC6  F00F         	call	_write_ds1307
  3109   001E76                     
  3110                           ;ds1307.c: 38:  write_ds1307(0x07, 0x93);
  3111   001E76  0E93               	movlw	147
  3112   001E78  6E02               	movwf	write_ds1307@data^0,c
  3113   001E7A  0E07               	movlw	7
  3114   001E7C  ECC6  F00F         	call	_write_ds1307
  3115   001E80                     
  3116                           ;ds1307.c: 41:  dummy = read_ds1307(0x00);
  3117   001E80  0E00               	movlw	0
  3118   001E82  EC9F  F00F         	call	_read_ds1307
  3119   001E86  6E04               	movwf	init_ds1307@dummy^0,c
  3120                           
  3121                           ;ds1307.c: 42:  write_ds1307(0x00, dummy & 0x7F);
  3122   001E88  5004               	movf	init_ds1307@dummy^0,w,c
  3123   001E8A  0B7F               	andlw	127
  3124   001E8C  6E02               	movwf	write_ds1307@data^0,c
  3125   001E8E  0E00               	movlw	0
  3126   001E90  ECC6  F00F         	call	_write_ds1307
  3127   001E94  0012               	return		;funcret
  3128   001E96                     __end_of_init_ds1307:
  3129                           	callstack 0
  3130                           
  3131 ;; *************** function _write_ds1307 *****************
  3132 ;; Defined at:
  3133 ;;		line 46 in file "ds1307.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  address         1    wreg     unsigned char 
  3136 ;;  data            1    1[COMRAM] unsigned char 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  address         1    2[COMRAM] unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3148 ;;      Params:         1       0       0       0       0       0       0
  3149 ;;      Locals:         1       0       0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0
  3151 ;;      Totals:         2       0       0       0       0       0       0
  3152 ;;Total ram usage:        2 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; Hardware stack levels required when called: 3
  3155 ;; This function calls:
  3156 ;;		_i2c_start
  3157 ;;		_i2c_stop
  3158 ;;		_i2c_write
  3159 ;; This function is called by:
  3160 ;;		_init_ds1307
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text14
  3165   001F8C                     __ptext14:
  3166                           	callstack 0
  3167   001F8C                     _write_ds1307:
  3168                           	callstack 25
  3169                           
  3170                           ;incstack = 0
  3171                           ;write_ds1307@address stored from wreg
  3172   001F8C  6E03               	movwf	write_ds1307@address^0,c
  3173   001F8E                     
  3174                           ;ds1307.c: 46: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 47
      +                          : {;ds1307.c: 48:  i2c_start();
  3175   001F8E  EC48  F010         	call	_i2c_start	;wreg free
  3176   001F92                     
  3177                           ;ds1307.c: 49:  i2c_write(0xD0);
  3178   001F92  0ED0               	movlw	208
  3179   001F94  EC2E  F010         	call	_i2c_write
  3180   001F98                     
  3181                           ;ds1307.c: 50:  i2c_write(address);
  3182   001F98  5003               	movf	write_ds1307@address^0,w,c
  3183   001F9A  EC2E  F010         	call	_i2c_write
  3184   001F9E                     
  3185                           ;ds1307.c: 51:  i2c_write(data);
  3186   001F9E  5002               	movf	write_ds1307@data^0,w,c
  3187   001FA0  EC2E  F010         	call	_i2c_write
  3188   001FA4                     
  3189                           ;ds1307.c: 52:  i2c_stop();
  3190   001FA4  EC44  F010         	call	_i2c_stop	;wreg free
  3191   001FA8  0012               	return		;funcret
  3192   001FAA                     __end_of_write_ds1307:
  3193                           	callstack 0
  3194                           
  3195 ;; *************** function _init_clcd *****************
  3196 ;; Defined at:
  3197 ;;		line 26 in file "clcd.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3211 ;;      Params:         0       0       0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0
  3213 ;;      Temps:          2       0       0       0       0       0       0
  3214 ;;      Totals:         2       0       0       0       0       0       0
  3215 ;;Total ram usage:        2 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; Hardware stack levels required when called: 2
  3218 ;; This function calls:
  3219 ;;		_clcd_write
  3220 ;; This function is called by:
  3221 ;;		_init_config
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text15
  3226   0016AE                     __ptext15:
  3227                           	callstack 0
  3228   0016AE                     _init_clcd:
  3229                           	callstack 27
  3230   0016AE                     
  3231                           ;clcd.c: 29:  TRISD = 0x00;
  3232   0016AE  0E00               	movlw	0
  3233   0016B0  6E95               	movwf	149,c	;volatile
  3234   0016B2                     
  3235                           ;clcd.c: 31:  TRISC = TRISC & 0xF8;
  3236   0016B2  5094               	movf	148,w,c	;volatile
  3237   0016B4  0BF8               	andlw	248
  3238   0016B6  6E94               	movwf	148,c	;volatile
  3239   0016B8                     
  3240                           ;clcd.c: 32:    ECCP1CONbits.ECCP1M = 0;
  3241   0016B8  0EF0               	movlw	-16
  3242   0016BA  16BA               	andwf	186,f,c	;volatile
  3243   0016BC                     
  3244                           ;clcd.c: 33:     CCP1CON = 0;
  3245   0016BC  0E00               	movlw	0
  3246   0016BE  6EBD               	movwf	189,c	;volatile
  3247   0016C0                     
  3248                           ;clcd.c: 34:     TRISEbits.PSPMODE = 0;
  3249   0016C0  9896               	bcf	150,4,c	;volatile
  3250   0016C2                     
  3251                           ;clcd.c: 35:     CMCON = 0x07;
  3252   0016C2  0E07               	movlw	7
  3253   0016C4  6EB4               	movwf	180,c	;volatile
  3254   0016C6                     
  3255                           ;clcd.c: 36:  PORTCbits.RC0 = 0;
  3256   0016C6  9082               	bcf	130,0,c	;volatile
  3257   0016C8                     
  3258                           ;clcd.c: 40:     _delay((unsigned long)((40)*(20000000/4000.0)));
  3259   0016C8  0E02               	movlw	2
  3260   0016CA  6E04               	movwf	(??_init_clcd+1)^0,c
  3261   0016CC  0E04               	movlw	4
  3262   0016CE  6E03               	movwf	??_init_clcd^0,c
  3263   0016D0  0EBA               	movlw	186
  3264   0016D2                     u2427:
  3265   0016D2  2EE8               	decfsz	wreg,f,c
  3266   0016D4  D7FE               	bra	u2427
  3267   0016D6  2E03               	decfsz	??_init_clcd^0,f,c
  3268   0016D8  D7FC               	bra	u2427
  3269   0016DA  2E04               	decfsz	(??_init_clcd+1)^0,f,c
  3270   0016DC  D7FA               	bra	u2427
  3271   0016DE  D000               	nop2	
  3272   0016E0                     
  3273                           ;clcd.c: 43:     clcd_write(0x33, 0 );
  3274   0016E0  0E00               	movlw	0
  3275   0016E2  6E01               	movwf	clcd_write@control_bit^0,c
  3276   0016E4  0E33               	movlw	51
  3277   0016E6  EC86  F00F         	call	_clcd_write
  3278   0016EA                     
  3279                           ;clcd.c: 44:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  3280   0016EA  0E1B               	movlw	27
  3281   0016EC  6E03               	movwf	??_init_clcd^0,c
  3282   0016EE  0E9E               	movlw	158
  3283   0016F0                     u2437:
  3284   0016F0  2EE8               	decfsz	wreg,f,c
  3285   0016F2  D7FE               	bra	u2437
  3286   0016F4  2E03               	decfsz	??_init_clcd^0,f,c
  3287   0016F6  D7FC               	bra	u2437
  3288   0016F8  D000               	nop2	
  3289   0016FA                     
  3290                           ;clcd.c: 45:     clcd_write(0x33, 0 );
  3291   0016FA  0E00               	movlw	0
  3292   0016FC  6E01               	movwf	clcd_write@control_bit^0,c
  3293   0016FE  0E33               	movlw	51
  3294   001700  EC86  F00F         	call	_clcd_write
  3295   001704                     
  3296                           ;clcd.c: 46:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3297   001704  0EA6               	movlw	166
  3298   001706                     u2447:
  3299   001706  2EE8               	decfsz	wreg,f,c
  3300   001708  D7FE               	bra	u2447
  3301   00170A  D000               	nop2	
  3302   00170C                     
  3303                           ;clcd.c: 47:     clcd_write(0x33, 0 );
  3304   00170C  0E00               	movlw	0
  3305   00170E  6E01               	movwf	clcd_write@control_bit^0,c
  3306   001710  0E33               	movlw	51
  3307   001712  EC86  F00F         	call	_clcd_write
  3308   001716                     
  3309                           ;clcd.c: 48:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3310   001716  D000               	nop2		;2 cycle nop
  3311   001718  D000               	nop2		;2 cycle nop
  3312   00171A  F000               	nop	
  3313   00171C                     
  3314                           ;clcd.c: 50:     clcd_write(0x02, 0);
  3315   00171C  0E00               	movlw	0
  3316   00171E  6E01               	movwf	clcd_write@control_bit^0,c
  3317   001720  0E02               	movlw	2
  3318   001722  EC86  F00F         	call	_clcd_write
  3319   001726                     
  3320                           ;clcd.c: 51:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3321   001726  0EA6               	movlw	166
  3322   001728                     u2457:
  3323   001728  2EE8               	decfsz	wreg,f,c
  3324   00172A  D7FE               	bra	u2457
  3325   00172C  D000               	nop2	
  3326   00172E                     
  3327                           ;clcd.c: 52:     clcd_write(0x38, 0);
  3328   00172E  0E00               	movlw	0
  3329   001730  6E01               	movwf	clcd_write@control_bit^0,c
  3330   001732  0E38               	movlw	56
  3331   001734  EC86  F00F         	call	_clcd_write
  3332   001738                     
  3333                           ;clcd.c: 53:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3334   001738  0EA6               	movlw	166
  3335   00173A                     u2467:
  3336   00173A  2EE8               	decfsz	wreg,f,c
  3337   00173C  D7FE               	bra	u2467
  3338   00173E  D000               	nop2	
  3339   001740                     
  3340                           ;clcd.c: 54:     clcd_write(0x01, 0);
  3341   001740  0E00               	movlw	0
  3342   001742  6E01               	movwf	clcd_write@control_bit^0,c
  3343   001744  0E01               	movlw	1
  3344   001746  EC86  F00F         	call	_clcd_write
  3345   00174A                     
  3346                           ;clcd.c: 55:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  3347   00174A  0E04               	movlw	4
  3348   00174C  6E03               	movwf	??_init_clcd^0,c
  3349   00174E  0E3E               	movlw	62
  3350   001750                     u2477:
  3351   001750  2EE8               	decfsz	wreg,f,c
  3352   001752  D7FE               	bra	u2477
  3353   001754  2E03               	decfsz	??_init_clcd^0,f,c
  3354   001756  D7FC               	bra	u2477
  3355   001758                     
  3356                           ;clcd.c: 56:     clcd_write(0x0C, 0);
  3357   001758  0E00               	movlw	0
  3358   00175A  6E01               	movwf	clcd_write@control_bit^0,c
  3359   00175C  0E0C               	movlw	12
  3360   00175E  EC86  F00F         	call	_clcd_write
  3361   001762                     
  3362                           ;clcd.c: 57:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3363   001762  0EA6               	movlw	166
  3364   001764                     u2487:
  3365   001764  2EE8               	decfsz	wreg,f,c
  3366   001766  D7FE               	bra	u2487
  3367   001768  D000               	nop2	
  3368   00176A  0012               	return		;funcret
  3369   00176C                     __end_of_init_clcd:
  3370                           	callstack 0
  3371                           
  3372 ;; *************** function _init_adc *****************
  3373 ;; Defined at:
  3374 ;;		line 3 in file "adc.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;		None
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      void 
  3381 ;; Registers used:
  3382 ;;		None
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3388 ;;      Params:         0       0       0       0       0       0       0
  3389 ;;      Locals:         0       0       0       0       0       0       0
  3390 ;;      Temps:          0       0       0       0       0       0       0
  3391 ;;      Totals:         0       0       0       0       0       0       0
  3392 ;;Total ram usage:        0 bytes
  3393 ;; Hardware stack levels used: 1
  3394 ;; Hardware stack levels required when called: 1
  3395 ;; This function calls:
  3396 ;;		Nothing
  3397 ;; This function is called by:
  3398 ;;		_init_config
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           	psect	text16
  3403   001FAA                     __ptext16:
  3404                           	callstack 0
  3405   001FAA                     _init_adc:
  3406                           	callstack 28
  3407   001FAA                     
  3408                           ;adc.c: 5:     ADON=1;
  3409   001FAA  80C2               	bsf	4034,0,c	;volatile
  3410                           
  3411                           ;adc.c: 6:     VCFG1=0, VCFG0=0;
  3412   001FAC  9AC1               	bcf	4033,5,c	;volatile
  3413   001FAE  98C1               	bcf	4033,4,c	;volatile
  3414                           
  3415                           ;adc.c: 7:     PCFG3=1, PCFG2=0, PCFG1=1, PCFG0=0;
  3416   001FB0  86C1               	bsf	4033,3,c	;volatile
  3417   001FB2  94C1               	bcf	4033,2,c	;volatile
  3418   001FB4  82C1               	bsf	4033,1,c	;volatile
  3419   001FB6  90C1               	bcf	4033,0,c	;volatile
  3420                           
  3421                           ;adc.c: 8:     ACQT2=1, ACQT1=0, ACQT0=0;
  3422   001FB8  8AC0               	bsf	4032,5,c	;volatile
  3423   001FBA  98C0               	bcf	4032,4,c	;volatile
  3424   001FBC  96C0               	bcf	4032,3,c	;volatile
  3425                           
  3426                           ;adc.c: 9:     ADCS2=0, ADCS1=1, ADCS0=0;
  3427   001FBE  94C0               	bcf	4032,2,c	;volatile
  3428   001FC0  82C0               	bsf	4032,1,c	;volatile
  3429   001FC2  90C0               	bcf	4032,0,c	;volatile
  3430                           
  3431                           ;adc.c: 10:     ADFM=1;
  3432   001FC4  8EC0               	bsf	4032,7,c	;volatile
  3433   001FC6  0012               	return		;funcret
  3434   001FC8                     __end_of_init_adc:
  3435                           	callstack 0
  3436                           
  3437 ;; *************** function _getforstoreevent *****************
  3438 ;; Defined at:
  3439 ;;		line 21 in file "scrolldisplay.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;		None
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  i               2   58[COMRAM] int 
  3444 ;;  i               2   56[COMRAM] int 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3454 ;;      Params:         0       0       0       0       0       0       0
  3455 ;;      Locals:         4       0       0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0
  3457 ;;      Totals:         4       0       0       0       0       0       0
  3458 ;;Total ram usage:        4 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 6
  3461 ;; This function calls:
  3462 ;;		_get_speed
  3463 ;;		_get_time
  3464 ;;		_log_event
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text17
  3471   001952                     __ptext17:
  3472                           	callstack 0
  3473   001952                     _getforstoreevent:
  3474                           	callstack 24
  3475   001952                     
  3476                           ;scrolldisplay.c: 23:     for(int i=0; i<16; i++)
  3477   001952  0E00               	movlw	0
  3478   001954  6E3A               	movwf	(getforstoreevent@i+1)^0,c
  3479   001956  0E00               	movlw	0
  3480   001958  6E39               	movwf	getforstoreevent@i^0,c
  3481   00195A                     l2909:
  3482                           
  3483                           ;scrolldisplay.c: 24:         log[i]=' ';
  3484   00195A  0E60               	movlw	low _log
  3485   00195C  2439               	addwf	getforstoreevent@i^0,w,c
  3486   00195E  6ED9               	movwf	fsr2l,c
  3487   001960  0E00               	movlw	high _log
  3488   001962  203A               	addwfc	(getforstoreevent@i+1)^0,w,c
  3489   001964  6EDA               	movwf	fsr2h,c
  3490   001966  0E20               	movlw	32
  3491   001968  6EDF               	movwf	indf2,c
  3492   00196A  4A39               	infsnz	getforstoreevent@i^0,f,c
  3493   00196C  2A3A               	incf	(getforstoreevent@i+1)^0,f,c
  3494   00196E  BE3A               	btfsc	(getforstoreevent@i+1)^0,7,c
  3495   001970  EFC3  F00C         	goto	u2101
  3496   001974  503A               	movf	(getforstoreevent@i+1)^0,w,c
  3497   001976  E109               	bnz	u2100
  3498   001978  0E10               	movlw	16
  3499   00197A  5C39               	subwf	getforstoreevent@i^0,w,c
  3500   00197C  A0D8               	btfss	status,0,c
  3501   00197E  EFC3  F00C         	goto	u2101
  3502   001982  EFC5  F00C         	goto	u2100
  3503   001986                     u2101:
  3504   001986  EFAD  F00C         	goto	l2909
  3505   00198A                     u2100:
  3506   00198A                     
  3507                           ;scrolldisplay.c: 25:     log[16] = '\0';
  3508   00198A  0E00               	movlw	0
  3509   00198C  0100               	movlb	0	; () banked
  3510   00198E  6F70               	movwf	(_log+16)& (0+255),b
  3511   001990                     
  3512                           ; BSR set to: 0
  3513                           ;scrolldisplay.c: 26:     get_time();
  3514   001990  ECF1  F00C         	call	_get_time	;wreg free
  3515   001994                     
  3516                           ;scrolldisplay.c: 27:     for(int i=0; i<8; i++)
  3517   001994  0E00               	movlw	0
  3518   001996  6E3C               	movwf	(getforstoreevent@i_630+1)^0,c
  3519   001998  0E00               	movlw	0
  3520   00199A  6E3B               	movwf	getforstoreevent@i_630^0,c
  3521   00199C                     l2925:
  3522                           
  3523                           ;scrolldisplay.c: 28:         log[i+2]=time[i];
  3524   00199C  0E7F               	movlw	low _time
  3525   00199E  243B               	addwf	getforstoreevent@i_630^0,w,c
  3526   0019A0  6ED9               	movwf	fsr2l,c
  3527   0019A2  0E00               	movlw	high _time
  3528   0019A4  203C               	addwfc	(getforstoreevent@i_630+1)^0,w,c
  3529   0019A6  6EDA               	movwf	fsr2h,c
  3530   0019A8  0E62               	movlw	low (_log+2)
  3531   0019AA  243B               	addwf	getforstoreevent@i_630^0,w,c
  3532   0019AC  6EE1               	movwf	fsr1l,c
  3533   0019AE  0E00               	movlw	high (_log+2)
  3534   0019B0  203C               	addwfc	(getforstoreevent@i_630+1)^0,w,c
  3535   0019B2  6EE2               	movwf	fsr1h,c
  3536   0019B4  CFDF FFE7          	movff	indf2,indf1
  3537   0019B8  4A3B               	infsnz	getforstoreevent@i_630^0,f,c
  3538   0019BA  2A3C               	incf	(getforstoreevent@i_630+1)^0,f,c
  3539   0019BC  BE3C               	btfsc	(getforstoreevent@i_630+1)^0,7,c
  3540   0019BE  EFEA  F00C         	goto	u2111
  3541   0019C2  503C               	movf	(getforstoreevent@i_630+1)^0,w,c
  3542   0019C4  E109               	bnz	u2110
  3543   0019C6  0E08               	movlw	8
  3544   0019C8  5C3B               	subwf	getforstoreevent@i_630^0,w,c
  3545   0019CA  A0D8               	btfss	status,0,c
  3546   0019CC  EFEA  F00C         	goto	u2111
  3547   0019D0  EFEC  F00C         	goto	u2110
  3548   0019D4                     u2111:
  3549   0019D4  EFCE  F00C         	goto	l2925
  3550   0019D8                     u2110:
  3551   0019D8                     
  3552                           ;scrolldisplay.c: 29:     get_speed();
  3553   0019D8  EC0E  F00C         	call	_get_speed	;wreg free
  3554   0019DC                     
  3555                           ;scrolldisplay.c: 31:     log_event();
  3556   0019DC  EC79  F00E         	call	_log_event	;wreg free
  3557   0019E0  0012               	return		;funcret
  3558   0019E2                     __end_of_getforstoreevent:
  3559                           	callstack 0
  3560                           
  3561 ;; *************** function _log_event *****************
  3562 ;; Defined at:
  3563 ;;		line 33 in file "scrolldisplay.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;  i               2    6[COMRAM] int 
  3568 ;;  address         1    5[COMRAM] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3578 ;;      Params:         0       0       0       0       0       0       0
  3579 ;;      Locals:         3       0       0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0
  3581 ;;      Totals:         3       0       0       0       0       0       0
  3582 ;;Total ram usage:        3 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 4
  3585 ;; This function calls:
  3586 ;;		_write_external_eeprom
  3587 ;; This function is called by:
  3588 ;;		_getforstoreevent
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text18
  3593   001CF2                     __ptext18:
  3594                           	callstack 0
  3595   001CF2                     _log_event:
  3596                           	callstack 25
  3597   001CF2                     
  3598                           ;scrolldisplay.c: 35:     unsigned char address;;scrolldisplay.c: 36:     logpos++;
  3599   001CF2  2A5B               	incf	_logpos^0,f,c
  3600   001CF4                     
  3601                           ;scrolldisplay.c: 37:     if(logpos==10)
  3602   001CF4  0E0A               	movlw	10
  3603   001CF6  185B               	xorwf	_logpos^0,w,c
  3604   001CF8  A4D8               	btfss	status,2,c
  3605   001CFA  EF81  F00E         	goto	u2041
  3606   001CFE  EF83  F00E         	goto	u2040
  3607   001D02                     u2041:
  3608   001D02  EF85  F00E         	goto	l2845
  3609   001D06                     u2040:
  3610   001D06                     
  3611                           ;scrolldisplay.c: 38:         logpos=0;
  3612   001D06  0E00               	movlw	0
  3613   001D08  6E5B               	movwf	_logpos^0,c
  3614   001D0A                     l2845:
  3615                           
  3616                           ;scrolldisplay.c: 39:     address=logpos*16;
  3617   001D0A  505B               	movf	_logpos^0,w,c
  3618   001D0C  0D10               	mullw	16
  3619   001D0E  CFF3 F006          	movff	prodl,log_event@address
  3620   001D12                     
  3621                           ;scrolldisplay.c: 40:     for(int i=0; i<16 ;i++)
  3622   001D12  0E00               	movlw	0
  3623   001D14  6E08               	movwf	(log_event@i+1)^0,c
  3624   001D16  0E00               	movlw	0
  3625   001D18  6E07               	movwf	log_event@i^0,c
  3626   001D1A                     l2853:
  3627                           
  3628                           ;scrolldisplay.c: 41:     {;scrolldisplay.c: 42:         write_external_eeprom(address,l
      +                          og[i]);
  3629   001D1A  0E60               	movlw	low _log
  3630   001D1C  2407               	addwf	log_event@i^0,w,c
  3631   001D1E  6ED9               	movwf	fsr2l,c
  3632   001D20  0E00               	movlw	high _log
  3633   001D22  2008               	addwfc	(log_event@i+1)^0,w,c
  3634   001D24  6EDA               	movwf	fsr2h,c
  3635   001D26  50DF               	movf	indf2,w,c
  3636   001D28  6E02               	movwf	write_external_eeprom@data^0,c
  3637   001D2A  5006               	movf	log_event@address^0,w,c
  3638   001D2C  EC4B  F00F         	call	_write_external_eeprom
  3639   001D30                     
  3640                           ;scrolldisplay.c: 43:         address++;
  3641   001D30  2A06               	incf	log_event@address^0,f,c
  3642   001D32                     
  3643                           ;scrolldisplay.c: 44:     }
  3644   001D32  4A07               	infsnz	log_event@i^0,f,c
  3645   001D34  2A08               	incf	(log_event@i+1)^0,f,c
  3646   001D36  BE08               	btfsc	(log_event@i+1)^0,7,c
  3647   001D38  EFA7  F00E         	goto	u2051
  3648   001D3C  5008               	movf	(log_event@i+1)^0,w,c
  3649   001D3E  E109               	bnz	u2050
  3650   001D40  0E10               	movlw	16
  3651   001D42  5C07               	subwf	log_event@i^0,w,c
  3652   001D44  A0D8               	btfss	status,0,c
  3653   001D46  EFA7  F00E         	goto	u2051
  3654   001D4A  EFA9  F00E         	goto	u2050
  3655   001D4E                     u2051:
  3656   001D4E  EF8D  F00E         	goto	l2853
  3657   001D52                     u2050:
  3658   001D52  0012               	return		;funcret
  3659   001D54                     __end_of_log_event:
  3660                           	callstack 0
  3661                           
  3662 ;; *************** function _write_external_eeprom *****************
  3663 ;; Defined at:
  3664 ;;		line 9 in file "external.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  address         1    wreg     unsigned char 
  3667 ;;  data            1    1[COMRAM] unsigned char 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  address         1    4[COMRAM] unsigned char 
  3670 ;;  i               2    2[COMRAM] unsigned int 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3680 ;;      Params:         1       0       0       0       0       0       0
  3681 ;;      Locals:         3       0       0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0
  3683 ;;      Totals:         4       0       0       0       0       0       0
  3684 ;;Total ram usage:        4 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 3
  3687 ;; This function calls:
  3688 ;;		_i2c_start
  3689 ;;		_i2c_stop
  3690 ;;		_i2c_write
  3691 ;; This function is called by:
  3692 ;;		_log_event
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text19
  3697   001E96                     __ptext19:
  3698                           	callstack 0
  3699   001E96                     _write_external_eeprom:
  3700                           	callstack 25
  3701                           
  3702                           ;incstack = 0
  3703                           ;write_external_eeprom@address stored from wreg
  3704   001E96  6E05               	movwf	write_external_eeprom@address^0,c
  3705   001E98                     
  3706                           ;external.c: 9: void write_external_eeprom(unsigned char address, unsigned char data);ex
      +                          ternal.c: 10: {;external.c: 11:  i2c_start();
  3707   001E98  EC48  F010         	call	_i2c_start	;wreg free
  3708   001E9C                     
  3709                           ;external.c: 12:  i2c_write(0xA0);
  3710   001E9C  0EA0               	movlw	160
  3711   001E9E  EC2E  F010         	call	_i2c_write
  3712   001EA2                     
  3713                           ;external.c: 13:  i2c_write(address);
  3714   001EA2  5005               	movf	write_external_eeprom@address^0,w,c
  3715   001EA4  EC2E  F010         	call	_i2c_write
  3716   001EA8                     
  3717                           ;external.c: 14:  i2c_write(data);
  3718   001EA8  5002               	movf	write_external_eeprom@data^0,w,c
  3719   001EAA  EC2E  F010         	call	_i2c_write
  3720   001EAE                     
  3721                           ;external.c: 15:  i2c_stop();
  3722   001EAE  EC44  F010         	call	_i2c_stop	;wreg free
  3723   001EB2                     
  3724                           ;external.c: 16:  for(unsigned int i = 3000;i--;);
  3725   001EB2  0E0B               	movlw	11
  3726   001EB4  6E04               	movwf	(write_external_eeprom@i+1)^0,c
  3727   001EB6  0EB8               	movlw	184
  3728   001EB8  6E03               	movwf	write_external_eeprom@i^0,c
  3729   001EBA                     l2359:
  3730   001EBA  0603               	decf	write_external_eeprom@i^0,f,c
  3731   001EBC  A0D8               	btfss	status,0,c
  3732   001EBE  0604               	decf	(write_external_eeprom@i+1)^0,f,c
  3733   001EC0  2803               	incf	write_external_eeprom@i^0,w,c
  3734   001EC2  E106               	bnz	u1351
  3735   001EC4  2804               	incf	(write_external_eeprom@i+1)^0,w,c
  3736   001EC6  A4D8               	btfss	status,2,c
  3737   001EC8  EF68  F00F         	goto	u1351
  3738   001ECC  EF6A  F00F         	goto	u1350
  3739   001ED0                     u1351:
  3740   001ED0  EF5D  F00F         	goto	l2359
  3741   001ED4                     u1350:
  3742   001ED4  0012               	return		;funcret
  3743   001ED6                     __end_of_write_external_eeprom:
  3744                           	callstack 0
  3745                           
  3746 ;; *************** function _get_speed *****************
  3747 ;; Defined at:
  3748 ;;		line 15 in file "scrolldisplay.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  adc             2   54[COMRAM] unsigned short 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3762 ;;      Params:         0       0       0       0       0       0       0
  3763 ;;      Locals:         2       0       0       0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0
  3765 ;;      Totals:         2       0       0       0       0       0       0
  3766 ;;Total ram usage:        2 bytes
  3767 ;; Hardware stack levels used: 1
  3768 ;; Hardware stack levels required when called: 2
  3769 ;; This function calls:
  3770 ;;		___fldiv
  3771 ;;		___fltol
  3772 ;;		___lwdiv
  3773 ;;		___lwmod
  3774 ;;		___xxtofl
  3775 ;;		_read_adc
  3776 ;; This function is called by:
  3777 ;;		_getforstoreevent
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text20
  3782   00181C                     __ptext20:
  3783                           	callstack 0
  3784   00181C                     _get_speed:
  3785                           	callstack 27
  3786   00181C                     
  3787                           ;scrolldisplay.c: 17:     unsigned short adc = (unsigned short)(read_adc(4)/10.33);
  3788   00181C  0EAE               	movlw	174
  3789   00181E  6E18               	movwf	___fldiv@a^0,c
  3790   001820  0E47               	movlw	71
  3791   001822  6E19               	movwf	(___fldiv@a+1)^0,c
  3792   001824  0E25               	movlw	37
  3793   001826  6E1A               	movwf	(___fldiv@a+2)^0,c
  3794   001828  0E41               	movlw	65
  3795   00182A  6E1B               	movwf	(___fldiv@a+3)^0,c
  3796   00182C  0E04               	movlw	4
  3797   00182E  EC6B  F00F         	call	_read_adc
  3798   001832  C001  F006         	movff	?_read_adc,___xxtofl@val
  3799   001836  C002  F007         	movff	?_read_adc+1,___xxtofl@val+1
  3800   00183A  6A08               	clrf	(___xxtofl@val+2)^0,c
  3801   00183C  6A09               	clrf	(___xxtofl@val+3)^0,c
  3802   00183E  0E00               	movlw	0
  3803   001840  ECE9  F006         	call	___xxtofl
  3804   001844  C006  F014         	movff	?___xxtofl,___fldiv@b
  3805   001848  C007  F015         	movff	?___xxtofl+1,___fldiv@b+1
  3806   00184C  C008  F016         	movff	?___xxtofl+2,___fldiv@b+2
  3807   001850  C009  F017         	movff	?___xxtofl+3,___fldiv@b+3
  3808   001854  EC76  F003         	call	___fldiv	;wreg free
  3809   001858  C014  F02D         	movff	?___fldiv,___fltol@f1
  3810   00185C  C015  F02E         	movff	?___fldiv+1,___fltol@f1+1
  3811   001860  C016  F02F         	movff	?___fldiv+2,___fltol@f1+2
  3812   001864  C017  F030         	movff	?___fldiv+3,___fltol@f1+3
  3813   001868  EC94  F009         	call	___fltol	;wreg free
  3814   00186C  C02D  F037         	movff	?___fltol,get_speed@adc
  3815   001870  C02E  F038         	movff	?___fltol+1,get_speed@adc+1
  3816                           
  3817                           ;scrolldisplay.c: 18:     log[14] = ((adc/10)%10)+'0';
  3818   001874  0E00               	movlw	0
  3819   001876  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3820   001878  0E0A               	movlw	10
  3821   00187A  6E03               	movwf	___lwdiv@divisor^0,c
  3822   00187C  C037  F001         	movff	get_speed@adc,___lwdiv@dividend
  3823   001880  C038  F002         	movff	get_speed@adc+1,___lwdiv@dividend+1
  3824   001884  EC6E  F00D         	call	___lwdiv	;wreg free
  3825   001888  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3826   00188C  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3827   001890  0E00               	movlw	0
  3828   001892  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3829   001894  0E0A               	movlw	10
  3830   001896  6E0A               	movwf	___lwmod@divisor^0,c
  3831   001898  EC47  F00E         	call	___lwmod	;wreg free
  3832   00189C  5008               	movf	?___lwmod^0,w,c
  3833   00189E  0F30               	addlw	48
  3834   0018A0  0100               	movlb	0	; () banked
  3835   0018A2  6F6E               	movwf	(_log+14)& (0+255),b
  3836                           
  3837                           ;scrolldisplay.c: 19:     log[15] = (adc%10)+'0';
  3838   0018A4  C037  F008         	movff	get_speed@adc,___lwmod@dividend
  3839   0018A8  C038  F009         	movff	get_speed@adc+1,___lwmod@dividend+1
  3840   0018AC  0E00               	movlw	0
  3841   0018AE  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  3842   0018B0  0E0A               	movlw	10
  3843   0018B2  6E0A               	movwf	___lwmod@divisor^0,c
  3844   0018B4  EC47  F00E         	call	___lwmod	;wreg free
  3845   0018B8  5008               	movf	?___lwmod^0,w,c
  3846   0018BA  0F30               	addlw	48
  3847   0018BC  0100               	movlb	0	; () banked
  3848   0018BE  6F6F               	movwf	(_log+15)& (0+255),b
  3849   0018C0                     
  3850                           ; BSR set to: 0
  3851   0018C0  0012               	return		;funcret
  3852   0018C2                     __end_of_get_speed:
  3853                           	callstack 0
  3854                           
  3855 ;; *************** function _read_adc *****************
  3856 ;; Defined at:
  3857 ;;		line 12 in file "adc.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  channel         1    wreg     unsigned char 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  channel         1    4[COMRAM] unsigned char 
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  2    0[COMRAM] unsigned short 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3871 ;;      Params:         2       0       0       0       0       0       0
  3872 ;;      Locals:         1       0       0       0       0       0       0
  3873 ;;      Temps:          2       0       0       0       0       0       0
  3874 ;;      Totals:         5       0       0       0       0       0       0
  3875 ;;Total ram usage:        5 bytes
  3876 ;; Hardware stack levels used: 1
  3877 ;; Hardware stack levels required when called: 1
  3878 ;; This function calls:
  3879 ;;		Nothing
  3880 ;; This function is called by:
  3881 ;;		_main
  3882 ;;		_get_speed
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text21
  3887   001ED6                     __ptext21:
  3888                           	callstack 0
  3889   001ED6                     _read_adc:
  3890                           	callstack 29
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;incstack = 0
  3894                           ;read_adc@channel stored from wreg
  3895   001ED6  6E05               	movwf	read_adc@channel^0,c
  3896   001ED8                     
  3897                           ;adc.c: 12: unsigned short read_adc(unsigned char channel);adc.c: 13: {;adc.c: 14:     A
      +                          DCON0=(ADCON0 & 0xC3) |(unsigned char)(channel<<2);
  3898   001ED8  C005  F003         	movff	read_adc@channel,??_read_adc
  3899   001EDC  90D8               	bcf	status,0,c
  3900   001EDE  3603               	rlcf	??_read_adc^0,f,c
  3901   001EE0  90D8               	bcf	status,0,c
  3902   001EE2  3603               	rlcf	??_read_adc^0,f,c
  3903   001EE4  50C2               	movf	194,w,c	;volatile
  3904   001EE6  0BC3               	andlw	195
  3905   001EE8  1003               	iorwf	??_read_adc^0,w,c
  3906   001EEA  6EC2               	movwf	194,c	;volatile
  3907   001EEC                     
  3908                           ;adc.c: 15:     GO=1;
  3909   001EEC  82C2               	bsf	4034,1,c	;volatile
  3910   001EEE                     l93:
  3911   001EEE  B2C2               	btfsc	4034,1,c	;volatile
  3912   001EF0  EF7C  F00F         	goto	u1331
  3913   001EF4  EF7E  F00F         	goto	u1330
  3914   001EF8                     u1331:
  3915   001EF8  EF77  F00F         	goto	l93
  3916   001EFC                     u1330:
  3917   001EFC                     
  3918                           ;adc.c: 17:     return (unsigned short) ADRESL | (unsigned short)((ADRESH & 0x03) << 8);
  3919   001EFC  50C4               	movf	196,w,c	;volatile
  3920   001EFE  0B03               	andlw	3
  3921   001F00  6E03               	movwf	??_read_adc^0,c
  3922   001F02  50C3               	movf	195,w,c	;volatile
  3923   001F04  6E01               	movwf	?_read_adc^0,c
  3924   001F06  C003  F002         	movff	??_read_adc,?_read_adc+1
  3925   001F0A  0012               	return		;funcret
  3926   001F0C                     __end_of_read_adc:
  3927                           	callstack 0
  3928                           
  3929 ;; *************** function ___xxtofl *****************
  3930 ;; Defined at:
  3931 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  sign            1    wreg     unsigned char 
  3934 ;;  val             4    5[COMRAM] long 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  sign            1   13[COMRAM] unsigned char 
  3937 ;;  arg             4   15[COMRAM] unsigned long 
  3938 ;;  exp             1   14[COMRAM] unsigned char 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  4    5[COMRAM] unsigned char 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3948 ;;      Params:         4       0       0       0       0       0       0
  3949 ;;      Locals:         6       0       0       0       0       0       0
  3950 ;;      Temps:          4       0       0       0       0       0       0
  3951 ;;      Totals:        14       0       0       0       0       0       0
  3952 ;;Total ram usage:       14 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; Hardware stack levels required when called: 1
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_main
  3959 ;;		_get_speed
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text22
  3964   000DD2                     __ptext22:
  3965                           	callstack 0
  3966   000DD2                     ___xxtofl:
  3967                           	callstack 27
  3968                           
  3969                           ;incstack = 0
  3970                           ;___xxtofl@sign stored from wreg
  3971   000DD2  6E0E               	movwf	___xxtofl@sign^0,c
  3972   000DD4  500E               	movf	___xxtofl@sign^0,w,c
  3973   000DD6  B4D8               	btfsc	status,2,c
  3974   000DD8  EFF0  F006         	goto	u1841
  3975   000DDC  EFF2  F006         	goto	u1840
  3976   000DE0                     u1841:
  3977   000DE0  EF14  F007         	goto	l1197
  3978   000DE4                     u1840:
  3979   000DE4  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  3980   000DE6  EFF9  F006         	goto	u1850
  3981   000DEA  EFF7  F006         	goto	u1851
  3982   000DEE                     u1851:
  3983   000DEE  EF14  F007         	goto	l1197
  3984   000DF2                     u1850:
  3985   000DF2  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  3986   000DF6  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  3987   000DFA  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  3988   000DFE  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  3989   000E02  1E0A               	comf	??___xxtofl^0,f,c
  3990   000E04  1E0B               	comf	(??___xxtofl+1)^0,f,c
  3991   000E06  1E0C               	comf	(??___xxtofl+2)^0,f,c
  3992   000E08  1E0D               	comf	(??___xxtofl+3)^0,f,c
  3993   000E0A  2A0A               	incf	??___xxtofl^0,f,c
  3994   000E0C  0E00               	movlw	0
  3995   000E0E  220B               	addwfc	(??___xxtofl+1)^0,f,c
  3996   000E10  220C               	addwfc	(??___xxtofl+2)^0,f,c
  3997   000E12  220D               	addwfc	(??___xxtofl+3)^0,f,c
  3998   000E14  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  3999   000E18  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  4000   000E1C  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  4001   000E20  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  4002   000E24  EF1C  F007         	goto	l2677
  4003   000E28                     l1197:
  4004   000E28  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  4005   000E2C  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4006   000E30  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4007   000E34  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4008   000E38                     l2677:
  4009   000E38  5006               	movf	___xxtofl@val^0,w,c
  4010   000E3A  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  4011   000E3C  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  4012   000E3E  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  4013   000E40  A4D8               	btfss	status,2,c
  4014   000E42  EF25  F007         	goto	u1861
  4015   000E46  EF27  F007         	goto	u1860
  4016   000E4A                     u1861:
  4017   000E4A  EF31  F007         	goto	l2683
  4018   000E4E                     u1860:
  4019   000E4E  0E00               	movlw	0
  4020   000E50  6E06               	movwf	?___xxtofl^0,c
  4021   000E52  0E00               	movlw	0
  4022   000E54  6E07               	movwf	(?___xxtofl+1)^0,c
  4023   000E56  0E00               	movlw	0
  4024   000E58  6E08               	movwf	(?___xxtofl+2)^0,c
  4025   000E5A  0E00               	movlw	0
  4026   000E5C  6E09               	movwf	(?___xxtofl+3)^0,c
  4027   000E5E  EFC2  F007         	goto	l1200
  4028   000E62                     l2683:
  4029   000E62  0E96               	movlw	150
  4030   000E64  6E0F               	movwf	___xxtofl@exp^0,c
  4031   000E66  EF3B  F007         	goto	l2687
  4032   000E6A                     l2685:
  4033   000E6A  2A0F               	incf	___xxtofl@exp^0,f,c
  4034   000E6C  90D8               	bcf	status,0,c
  4035   000E6E  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  4036   000E70  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  4037   000E72  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  4038   000E74  3210               	rrcf	___xxtofl@arg^0,f,c
  4039   000E76                     l2687:
  4040   000E76  0E00               	movlw	0
  4041   000E78  1410               	andwf	___xxtofl@arg^0,w,c
  4042   000E7A  6E0A               	movwf	??___xxtofl^0,c
  4043   000E7C  0E00               	movlw	0
  4044   000E7E  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  4045   000E80  6E0B               	movwf	(??___xxtofl+1)^0,c
  4046   000E82  0E00               	movlw	0
  4047   000E84  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  4048   000E86  6E0C               	movwf	(??___xxtofl+2)^0,c
  4049   000E88  0EFE               	movlw	254
  4050   000E8A  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  4051   000E8C  6E0D               	movwf	(??___xxtofl+3)^0,c
  4052   000E8E  500A               	movf	??___xxtofl^0,w,c
  4053   000E90  100B               	iorwf	(??___xxtofl+1)^0,w,c
  4054   000E92  100C               	iorwf	(??___xxtofl+2)^0,w,c
  4055   000E94  100D               	iorwf	(??___xxtofl+3)^0,w,c
  4056   000E96  A4D8               	btfss	status,2,c
  4057   000E98  EF50  F007         	goto	u1871
  4058   000E9C  EF52  F007         	goto	u1870
  4059   000EA0                     u1871:
  4060   000EA0  EF35  F007         	goto	l2685
  4061   000EA4                     u1870:
  4062   000EA4  EF60  F007         	goto	l1204
  4063   000EA8                     l2689:
  4064   000EA8  2A0F               	incf	___xxtofl@exp^0,f,c
  4065   000EAA  0E01               	movlw	1
  4066   000EAC  2610               	addwf	___xxtofl@arg^0,f,c
  4067   000EAE  0E00               	movlw	0
  4068   000EB0  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  4069   000EB2  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  4070   000EB4  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  4071   000EB6  90D8               	bcf	status,0,c
  4072   000EB8  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  4073   000EBA  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  4074   000EBC  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  4075   000EBE  3210               	rrcf	___xxtofl@arg^0,f,c
  4076   000EC0                     l1204:
  4077   000EC0  0E00               	movlw	0
  4078   000EC2  1410               	andwf	___xxtofl@arg^0,w,c
  4079   000EC4  6E0A               	movwf	??___xxtofl^0,c
  4080   000EC6  0E00               	movlw	0
  4081   000EC8  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  4082   000ECA  6E0B               	movwf	(??___xxtofl+1)^0,c
  4083   000ECC  0E00               	movlw	0
  4084   000ECE  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  4085   000ED0  6E0C               	movwf	(??___xxtofl+2)^0,c
  4086   000ED2  0EFF               	movlw	255
  4087   000ED4  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  4088   000ED6  6E0D               	movwf	(??___xxtofl+3)^0,c
  4089   000ED8  500A               	movf	??___xxtofl^0,w,c
  4090   000EDA  100B               	iorwf	(??___xxtofl+1)^0,w,c
  4091   000EDC  100C               	iorwf	(??___xxtofl+2)^0,w,c
  4092   000EDE  100D               	iorwf	(??___xxtofl+3)^0,w,c
  4093   000EE0  A4D8               	btfss	status,2,c
  4094   000EE2  EF75  F007         	goto	u1881
  4095   000EE6  EF77  F007         	goto	u1880
  4096   000EEA                     u1881:
  4097   000EEA  EF54  F007         	goto	l2689
  4098   000EEE                     u1880:
  4099   000EEE  EF7F  F007         	goto	l2697
  4100   000EF2                     l2695:
  4101   000EF2  060F               	decf	___xxtofl@exp^0,f,c
  4102   000EF4  90D8               	bcf	status,0,c
  4103   000EF6  3610               	rlcf	___xxtofl@arg^0,f,c
  4104   000EF8  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  4105   000EFA  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  4106   000EFC  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  4107   000EFE                     l2697:
  4108   000EFE  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  4109   000F00  EF84  F007         	goto	u1891
  4110   000F04  EF86  F007         	goto	u1890
  4111   000F08                     u1891:
  4112   000F08  EF8E  F007         	goto	l1211
  4113   000F0C                     u1890:
  4114   000F0C  0E02               	movlw	2
  4115   000F0E  600F               	cpfslt	___xxtofl@exp^0,c
  4116   000F10  EF8C  F007         	goto	u1901
  4117   000F14  EF8E  F007         	goto	u1900
  4118   000F18                     u1901:
  4119   000F18  EF79  F007         	goto	l2695
  4120   000F1C                     u1900:
  4121   000F1C                     l1211:
  4122   000F1C  B00F               	btfsc	___xxtofl@exp^0,0,c
  4123   000F1E  EF93  F007         	goto	u1911
  4124   000F22  EF95  F007         	goto	u1910
  4125   000F26                     u1911:
  4126   000F26  EF96  F007         	goto	l2703
  4127   000F2A                     u1910:
  4128   000F2A  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  4129   000F2C                     l2703:
  4130   000F2C  90D8               	bcf	status,0,c
  4131   000F2E  320F               	rrcf	___xxtofl@exp^0,f,c
  4132   000F30  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  4133   000F34  6A0B               	clrf	(??___xxtofl+1)^0,c
  4134   000F36  6A0C               	clrf	(??___xxtofl+2)^0,c
  4135   000F38  6A0D               	clrf	(??___xxtofl+3)^0,c
  4136   000F3A  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  4137   000F3E  6A0C               	clrf	(??___xxtofl+2)^0,c
  4138   000F40  6A0B               	clrf	(??___xxtofl+1)^0,c
  4139   000F42  6A0A               	clrf	??___xxtofl^0,c
  4140   000F44  500A               	movf	??___xxtofl^0,w,c
  4141   000F46  1210               	iorwf	___xxtofl@arg^0,f,c
  4142   000F48  500B               	movf	(??___xxtofl+1)^0,w,c
  4143   000F4A  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  4144   000F4C  500C               	movf	(??___xxtofl+2)^0,w,c
  4145   000F4E  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  4146   000F50  500D               	movf	(??___xxtofl+3)^0,w,c
  4147   000F52  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  4148   000F54  500E               	movf	___xxtofl@sign^0,w,c
  4149   000F56  B4D8               	btfsc	status,2,c
  4150   000F58  EFB0  F007         	goto	u1921
  4151   000F5C  EFB2  F007         	goto	u1920
  4152   000F60                     u1921:
  4153   000F60  EFBA  F007         	goto	l2713
  4154   000F64                     u1920:
  4155   000F64  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  4156   000F66  EFB9  F007         	goto	u1930
  4157   000F6A  EFB7  F007         	goto	u1931
  4158   000F6E                     u1931:
  4159   000F6E  EFBA  F007         	goto	l2713
  4160   000F72                     u1930:
  4161   000F72  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  4162   000F74                     l2713:
  4163   000F74  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  4164   000F78  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  4165   000F7C  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  4166   000F80  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  4167   000F84                     l1200:
  4168   000F84  0012               	return		;funcret
  4169   000F86                     __end_of___xxtofl:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function ___lwmod *****************
  4173 ;; Defined at:
  4174 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  dividend        2    7[COMRAM] unsigned int 
  4177 ;;  divisor         2    9[COMRAM] unsigned int 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  counter         1   11[COMRAM] unsigned char 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  2    7[COMRAM] unsigned int 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4189 ;;      Params:         4       0       0       0       0       0       0
  4190 ;;      Locals:         1       0       0       0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0
  4192 ;;      Totals:         5       0       0       0       0       0       0
  4193 ;;Total ram usage:        5 bytes
  4194 ;; Hardware stack levels used: 1
  4195 ;; Hardware stack levels required when called: 1
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_get_speed
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text23
  4204   001C8E                     __ptext23:
  4205                           	callstack 0
  4206   001C8E                     ___lwmod:
  4207                           	callstack 27
  4208   001C8E  500A               	movf	___lwmod@divisor^0,w,c
  4209   001C90  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  4210   001C92  B4D8               	btfsc	status,2,c
  4211   001C94  EF4E  F00E         	goto	u1811
  4212   001C98  EF50  F00E         	goto	u1810
  4213   001C9C                     u1811:
  4214   001C9C  EF74  F00E         	goto	l1043
  4215   001CA0                     u1810:
  4216   001CA0  0E01               	movlw	1
  4217   001CA2  6E0C               	movwf	___lwmod@counter^0,c
  4218   001CA4  EF58  F00E         	goto	l2661
  4219   001CA8                     l2659:
  4220   001CA8  90D8               	bcf	status,0,c
  4221   001CAA  360A               	rlcf	___lwmod@divisor^0,f,c
  4222   001CAC  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  4223   001CAE  2A0C               	incf	___lwmod@counter^0,f,c
  4224   001CB0                     l2661:
  4225   001CB0  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  4226   001CB2  EF5D  F00E         	goto	u1821
  4227   001CB6  EF5F  F00E         	goto	u1820
  4228   001CBA                     u1821:
  4229   001CBA  EF54  F00E         	goto	l2659
  4230   001CBE                     u1820:
  4231   001CBE                     l2663:
  4232   001CBE  500A               	movf	___lwmod@divisor^0,w,c
  4233   001CC0  5C08               	subwf	___lwmod@dividend^0,w,c
  4234   001CC2  500B               	movf	(___lwmod@divisor+1)^0,w,c
  4235   001CC4  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  4236   001CC6  A0D8               	btfss	status,0,c
  4237   001CC8  EF68  F00E         	goto	u1831
  4238   001CCC  EF6A  F00E         	goto	u1830
  4239   001CD0                     u1831:
  4240   001CD0  EF6E  F00E         	goto	l2667
  4241   001CD4                     u1830:
  4242   001CD4  500A               	movf	___lwmod@divisor^0,w,c
  4243   001CD6  5E08               	subwf	___lwmod@dividend^0,f,c
  4244   001CD8  500B               	movf	(___lwmod@divisor+1)^0,w,c
  4245   001CDA  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  4246   001CDC                     l2667:
  4247   001CDC  90D8               	bcf	status,0,c
  4248   001CDE  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  4249   001CE0  320A               	rrcf	___lwmod@divisor^0,f,c
  4250   001CE2  2E0C               	decfsz	___lwmod@counter^0,f,c
  4251   001CE4  EF5F  F00E         	goto	l2663
  4252   001CE8                     l1043:
  4253   001CE8  C008  F008         	movff	___lwmod@dividend,?___lwmod
  4254   001CEC  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  4255   001CF0  0012               	return		;funcret
  4256   001CF2                     __end_of___lwmod:
  4257                           	callstack 0
  4258                           
  4259 ;; *************** function ___fltol *****************
  4260 ;; Defined at:
  4261 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  f1              4   44[COMRAM] unsigned int 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  exp1            1   53[COMRAM] unsigned char 
  4266 ;;  sign1           1   52[COMRAM] unsigned char 
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  4   44[COMRAM] long 
  4269 ;; Registers used:
  4270 ;;		wreg, status,2, status,0
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4276 ;;      Params:         4       0       0       0       0       0       0
  4277 ;;      Locals:         2       0       0       0       0       0       0
  4278 ;;      Temps:          4       0       0       0       0       0       0
  4279 ;;      Totals:        10       0       0       0       0       0       0
  4280 ;;Total ram usage:       10 bytes
  4281 ;; Hardware stack levels used: 1
  4282 ;; Hardware stack levels required when called: 1
  4283 ;; This function calls:
  4284 ;;		Nothing
  4285 ;; This function is called by:
  4286 ;;		_main
  4287 ;;		_get_speed
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text24
  4292   001328                     __ptext24:
  4293                           	callstack 0
  4294   001328                     ___fltol:
  4295                           	callstack 27
  4296   001328  342F               	rlcf	(___fltol@f1+2)^0,w,c
  4297   00132A  3430               	rlcf	(___fltol@f1+3)^0,w,c
  4298   00132C  6E36               	movwf	___fltol@exp1^0,c
  4299   00132E  5036               	movf	___fltol@exp1^0,w,c
  4300   001330  A4D8               	btfss	status,2,c
  4301   001332  EF9D  F009         	goto	u1711
  4302   001336  EF9F  F009         	goto	u1710
  4303   00133A                     u1711:
  4304   00133A  EFA9  F009         	goto	l2595
  4305   00133E                     u1710:
  4306   00133E                     l2591:
  4307   00133E  0E00               	movlw	0
  4308   001340  6E2D               	movwf	?___fltol^0,c
  4309   001342  0E00               	movlw	0
  4310   001344  6E2E               	movwf	(?___fltol+1)^0,c
  4311   001346  0E00               	movlw	0
  4312   001348  6E2F               	movwf	(?___fltol+2)^0,c
  4313   00134A  0E00               	movlw	0
  4314   00134C  6E30               	movwf	(?___fltol+3)^0,c
  4315   00134E  EF16  F00A         	goto	l839
  4316   001352                     l2595:
  4317   001352  C02D  F031         	movff	___fltol@f1,??___fltol
  4318   001356  C02E  F032         	movff	___fltol@f1+1,??___fltol+1
  4319   00135A  C02F  F033         	movff	___fltol@f1+2,??___fltol+2
  4320   00135E  C030  F034         	movff	___fltol@f1+3,??___fltol+3
  4321   001362  0E20               	movlw	32
  4322   001364  EFB9  F009         	goto	u1720
  4323   001368                     u1725:
  4324   001368  90D8               	bcf	status,0,c
  4325   00136A  3234               	rrcf	(??___fltol+3)^0,f,c
  4326   00136C  3233               	rrcf	(??___fltol+2)^0,f,c
  4327   00136E  3232               	rrcf	(??___fltol+1)^0,f,c
  4328   001370  3231               	rrcf	??___fltol^0,f,c
  4329   001372                     u1720:
  4330   001372  2EE8               	decfsz	wreg,f,c
  4331   001374  EFB4  F009         	goto	u1725
  4332   001378  5031               	movf	??___fltol^0,w,c
  4333   00137A  6E35               	movwf	___fltol@sign1^0,c
  4334   00137C  8E2F               	bsf	(___fltol@f1+2)^0,7,c
  4335   00137E  0EFF               	movlw	255
  4336   001380  162D               	andwf	___fltol@f1^0,f,c
  4337   001382  0EFF               	movlw	255
  4338   001384  162E               	andwf	(___fltol@f1+1)^0,f,c
  4339   001386  0EFF               	movlw	255
  4340   001388  162F               	andwf	(___fltol@f1+2)^0,f,c
  4341   00138A  0E00               	movlw	0
  4342   00138C  1630               	andwf	(___fltol@f1+3)^0,f,c
  4343   00138E  0E96               	movlw	150
  4344   001390  5E36               	subwf	___fltol@exp1^0,f,c
  4345   001392  BE36               	btfsc	___fltol@exp1^0,7,c
  4346   001394  EFD0  F009         	goto	u1730
  4347   001398  EFCE  F009         	goto	u1731
  4348   00139C                     u1731:
  4349   00139C  EFE6  F009         	goto	l2615
  4350   0013A0                     u1730:
  4351   0013A0  5036               	movf	___fltol@exp1^0,w,c
  4352   0013A2  0A80               	xorlw	128
  4353   0013A4  0F97               	addlw	151
  4354   0013A6  B0D8               	btfsc	status,0,c
  4355   0013A8  EFD8  F009         	goto	u1741
  4356   0013AC  EFDA  F009         	goto	u1740
  4357   0013B0                     u1741:
  4358   0013B0  EFDC  F009         	goto	l2611
  4359   0013B4                     u1740:
  4360   0013B4  EF9F  F009         	goto	l2591
  4361   0013B8                     l2611:
  4362   0013B8  90D8               	bcf	status,0,c
  4363   0013BA  3230               	rrcf	(___fltol@f1+3)^0,f,c
  4364   0013BC  322F               	rrcf	(___fltol@f1+2)^0,f,c
  4365   0013BE  322E               	rrcf	(___fltol@f1+1)^0,f,c
  4366   0013C0  322D               	rrcf	___fltol@f1^0,f,c
  4367   0013C2  3E36               	incfsz	___fltol@exp1^0,f,c
  4368   0013C4  EFDC  F009         	goto	l2611
  4369   0013C8  EFFE  F009         	goto	l2625
  4370   0013CC                     l2615:
  4371   0013CC  0E1F               	movlw	31
  4372   0013CE  6436               	cpfsgt	___fltol@exp1^0,c
  4373   0013D0  EFEC  F009         	goto	u1751
  4374   0013D4  EFEE  F009         	goto	u1750
  4375   0013D8                     u1751:
  4376   0013D8  EFF6  F009         	goto	l2623
  4377   0013DC                     u1750:
  4378   0013DC  EF9F  F009         	goto	l2591
  4379   0013E0                     l2621:
  4380   0013E0  90D8               	bcf	status,0,c
  4381   0013E2  362D               	rlcf	___fltol@f1^0,f,c
  4382   0013E4  362E               	rlcf	(___fltol@f1+1)^0,f,c
  4383   0013E6  362F               	rlcf	(___fltol@f1+2)^0,f,c
  4384   0013E8  3630               	rlcf	(___fltol@f1+3)^0,f,c
  4385   0013EA  0636               	decf	___fltol@exp1^0,f,c
  4386   0013EC                     l2623:
  4387   0013EC  5036               	movf	___fltol@exp1^0,w,c
  4388   0013EE  A4D8               	btfss	status,2,c
  4389   0013F0  EFFC  F009         	goto	u1761
  4390   0013F4  EFFE  F009         	goto	u1760
  4391   0013F8                     u1761:
  4392   0013F8  EFF0  F009         	goto	l2621
  4393   0013FC                     u1760:
  4394   0013FC                     l2625:
  4395   0013FC  5035               	movf	___fltol@sign1^0,w,c
  4396   0013FE  B4D8               	btfsc	status,2,c
  4397   001400  EF04  F00A         	goto	u1771
  4398   001404  EF06  F00A         	goto	u1770
  4399   001408                     u1771:
  4400   001408  EF0E  F00A         	goto	l2629
  4401   00140C                     u1770:
  4402   00140C  1E30               	comf	(___fltol@f1+3)^0,f,c
  4403   00140E  1E2F               	comf	(___fltol@f1+2)^0,f,c
  4404   001410  1E2E               	comf	(___fltol@f1+1)^0,f,c
  4405   001412  6C2D               	negf	___fltol@f1^0,c
  4406   001414  0E00               	movlw	0
  4407   001416  222E               	addwfc	(___fltol@f1+1)^0,f,c
  4408   001418  222F               	addwfc	(___fltol@f1+2)^0,f,c
  4409   00141A  2230               	addwfc	(___fltol@f1+3)^0,f,c
  4410   00141C                     l2629:
  4411   00141C  C02D  F02D         	movff	___fltol@f1,?___fltol
  4412   001420  C02E  F02E         	movff	___fltol@f1+1,?___fltol+1
  4413   001424  C02F  F02F         	movff	___fltol@f1+2,?___fltol+2
  4414   001428  C030  F030         	movff	___fltol@f1+3,?___fltol+3
  4415   00142C                     l839:
  4416   00142C  0012               	return		;funcret
  4417   00142E                     __end_of___fltol:
  4418                           	callstack 0
  4419                           
  4420 ;; *************** function ___fldiv *****************
  4421 ;; Defined at:
  4422 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  b               4   19[COMRAM] long 
  4425 ;;  a               4   23[COMRAM] long 
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;  grs             4   38[COMRAM] unsigned long 
  4428 ;;  rem             4   31[COMRAM] unsigned long 
  4429 ;;  new_exp         2   36[COMRAM] short 
  4430 ;;  aexp            1   43[COMRAM] unsigned char 
  4431 ;;  bexp            1   42[COMRAM] unsigned char 
  4432 ;;  sign            1   35[COMRAM] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  4   19[COMRAM] unsigned char 
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4442 ;;      Params:         8       0       0       0       0       0       0
  4443 ;;      Locals:        13       0       0       0       0       0       0
  4444 ;;      Temps:          4       0       0       0       0       0       0
  4445 ;;      Totals:        25       0       0       0       0       0       0
  4446 ;;Total ram usage:       25 bytes
  4447 ;; Hardware stack levels used: 1
  4448 ;; Hardware stack levels required when called: 1
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_main
  4453 ;;		_get_speed
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text25
  4458   0006EC                     __ptext25:
  4459                           	callstack 0
  4460   0006EC                     ___fldiv:
  4461                           	callstack 27
  4462   0006EC  5017               	movf	(___fldiv@b+3)^0,w,c
  4463   0006EE  0B80               	andlw	128
  4464   0006F0  6E24               	movwf	___fldiv@sign^0,c
  4465   0006F2  5017               	movf	(___fldiv@b+3)^0,w,c
  4466   0006F4  2417               	addwf	(___fldiv@b+3)^0,w,c
  4467   0006F6  6E2B               	movwf	___fldiv@bexp^0,c
  4468   0006F8  AE16               	btfss	(___fldiv@b+2)^0,7,c
  4469   0006FA  EF81  F003         	goto	u1361
  4470   0006FE  EF83  F003         	goto	u1360
  4471   000702                     u1361:
  4472   000702  EF84  F003         	goto	l2377
  4473   000706                     u1360:
  4474   000706  802B               	bsf	___fldiv@bexp^0,0,c
  4475   000708                     l2377:
  4476   000708  502B               	movf	___fldiv@bexp^0,w,c
  4477   00070A  B4D8               	btfsc	status,2,c
  4478   00070C  EF8A  F003         	goto	u1371
  4479   000710  EF8C  F003         	goto	u1370
  4480   000714                     u1371:
  4481   000714  EFA1  F003         	goto	l2387
  4482   000718                     u1370:
  4483   000718  282B               	incf	___fldiv@bexp^0,w,c
  4484   00071A  A4D8               	btfss	status,2,c
  4485   00071C  EF92  F003         	goto	u1381
  4486   000720  EF94  F003         	goto	u1380
  4487   000724                     u1381:
  4488   000724  EF9C  F003         	goto	l2383
  4489   000728                     u1380:
  4490   000728  0E00               	movlw	0
  4491   00072A  6E14               	movwf	___fldiv@b^0,c
  4492   00072C  0E00               	movlw	0
  4493   00072E  6E15               	movwf	(___fldiv@b+1)^0,c
  4494   000730  0E00               	movlw	0
  4495   000732  6E16               	movwf	(___fldiv@b+2)^0,c
  4496   000734  0E00               	movlw	0
  4497   000736  6E17               	movwf	(___fldiv@b+3)^0,c
  4498   000738                     l2383:
  4499   000738  8E16               	bsf	(___fldiv@b+2)^0,7,c
  4500   00073A  0E00               	movlw	0
  4501   00073C  6E17               	movwf	(___fldiv@b+3)^0,c
  4502   00073E  EFA9  F003         	goto	l2389
  4503   000742                     l2387:
  4504   000742  0E00               	movlw	0
  4505   000744  6E14               	movwf	___fldiv@b^0,c
  4506   000746  0E00               	movlw	0
  4507   000748  6E15               	movwf	(___fldiv@b+1)^0,c
  4508   00074A  0E00               	movlw	0
  4509   00074C  6E16               	movwf	(___fldiv@b+2)^0,c
  4510   00074E  0E00               	movlw	0
  4511   000750  6E17               	movwf	(___fldiv@b+3)^0,c
  4512   000752                     l2389:
  4513   000752  501B               	movf	(___fldiv@a+3)^0,w,c
  4514   000754  0B80               	andlw	128
  4515   000756  1A24               	xorwf	___fldiv@sign^0,f,c
  4516   000758  501B               	movf	(___fldiv@a+3)^0,w,c
  4517   00075A  241B               	addwf	(___fldiv@a+3)^0,w,c
  4518   00075C  6E2C               	movwf	___fldiv@aexp^0,c
  4519   00075E  AE1A               	btfss	(___fldiv@a+2)^0,7,c
  4520   000760  EFB4  F003         	goto	u1391
  4521   000764  EFB6  F003         	goto	u1390
  4522   000768                     u1391:
  4523   000768  EFB7  F003         	goto	l2397
  4524   00076C                     u1390:
  4525   00076C  802C               	bsf	___fldiv@aexp^0,0,c
  4526   00076E                     l2397:
  4527   00076E  502C               	movf	___fldiv@aexp^0,w,c
  4528   000770  B4D8               	btfsc	status,2,c
  4529   000772  EFBD  F003         	goto	u1401
  4530   000776  EFBF  F003         	goto	u1400
  4531   00077A                     u1401:
  4532   00077A  EFD4  F003         	goto	l2407
  4533   00077E                     u1400:
  4534   00077E  282C               	incf	___fldiv@aexp^0,w,c
  4535   000780  A4D8               	btfss	status,2,c
  4536   000782  EFC5  F003         	goto	u1411
  4537   000786  EFC7  F003         	goto	u1410
  4538   00078A                     u1411:
  4539   00078A  EFCF  F003         	goto	l2403
  4540   00078E                     u1410:
  4541   00078E  0E00               	movlw	0
  4542   000790  6E18               	movwf	___fldiv@a^0,c
  4543   000792  0E00               	movlw	0
  4544   000794  6E19               	movwf	(___fldiv@a+1)^0,c
  4545   000796  0E00               	movlw	0
  4546   000798  6E1A               	movwf	(___fldiv@a+2)^0,c
  4547   00079A  0E00               	movlw	0
  4548   00079C  6E1B               	movwf	(___fldiv@a+3)^0,c
  4549   00079E                     l2403:
  4550   00079E  8E1A               	bsf	(___fldiv@a+2)^0,7,c
  4551   0007A0  0E00               	movlw	0
  4552   0007A2  6E1B               	movwf	(___fldiv@a+3)^0,c
  4553   0007A4  EFDC  F003         	goto	l2409
  4554   0007A8                     l2407:
  4555   0007A8  0E00               	movlw	0
  4556   0007AA  6E18               	movwf	___fldiv@a^0,c
  4557   0007AC  0E00               	movlw	0
  4558   0007AE  6E19               	movwf	(___fldiv@a+1)^0,c
  4559   0007B0  0E00               	movlw	0
  4560   0007B2  6E1A               	movwf	(___fldiv@a+2)^0,c
  4561   0007B4  0E00               	movlw	0
  4562   0007B6  6E1B               	movwf	(___fldiv@a+3)^0,c
  4563   0007B8                     l2409:
  4564   0007B8  5018               	movf	___fldiv@a^0,w,c
  4565   0007BA  1019               	iorwf	(___fldiv@a+1)^0,w,c
  4566   0007BC  101A               	iorwf	(___fldiv@a+2)^0,w,c
  4567   0007BE  101B               	iorwf	(___fldiv@a+3)^0,w,c
  4568   0007C0  A4D8               	btfss	status,2,c
  4569   0007C2  EFE5  F003         	goto	u1421
  4570   0007C6  EFE7  F003         	goto	u1420
  4571   0007CA                     u1421:
  4572   0007CA  EFFF  F003         	goto	l2421
  4573   0007CE                     u1420:
  4574   0007CE  0E00               	movlw	0
  4575   0007D0  6E14               	movwf	___fldiv@b^0,c
  4576   0007D2  0E00               	movlw	0
  4577   0007D4  6E15               	movwf	(___fldiv@b+1)^0,c
  4578   0007D6  0E00               	movlw	0
  4579   0007D8  6E16               	movwf	(___fldiv@b+2)^0,c
  4580   0007DA  0E00               	movlw	0
  4581   0007DC  6E17               	movwf	(___fldiv@b+3)^0,c
  4582   0007DE  0E80               	movlw	128
  4583   0007E0  1216               	iorwf	(___fldiv@b+2)^0,f,c
  4584   0007E2  0E7F               	movlw	127
  4585   0007E4  1217               	iorwf	(___fldiv@b+3)^0,f,c
  4586   0007E6                     l2415:
  4587   0007E6  5024               	movf	___fldiv@sign^0,w,c
  4588   0007E8  1217               	iorwf	(___fldiv@b+3)^0,f,c
  4589   0007EA  C014  F014         	movff	___fldiv@b,?___fldiv
  4590   0007EE  C015  F015         	movff	___fldiv@b+1,?___fldiv+1
  4591   0007F2  C016  F016         	movff	___fldiv@b+2,?___fldiv+2
  4592   0007F6  C017  F017         	movff	___fldiv@b+3,?___fldiv+3
  4593   0007FA  EF42  F005         	goto	l1124
  4594   0007FE                     l2421:
  4595   0007FE  502B               	movf	___fldiv@bexp^0,w,c
  4596   000800  A4D8               	btfss	status,2,c
  4597   000802  EF05  F004         	goto	u1431
  4598   000806  EF07  F004         	goto	u1430
  4599   00080A                     u1431:
  4600   00080A  EF11  F004         	goto	l2429
  4601   00080E                     u1430:
  4602   00080E  0E00               	movlw	0
  4603   000810  6E14               	movwf	?___fldiv^0,c
  4604   000812  0E00               	movlw	0
  4605   000814  6E15               	movwf	(?___fldiv+1)^0,c
  4606   000816  0E00               	movlw	0
  4607   000818  6E16               	movwf	(?___fldiv+2)^0,c
  4608   00081A  0E00               	movlw	0
  4609   00081C  6E17               	movwf	(?___fldiv+3)^0,c
  4610   00081E  EF42  F005         	goto	l1124
  4611   000822                     l2429:
  4612   000822  502C               	movf	___fldiv@aexp^0,w,c
  4613   000824  C02B  F01C         	movff	___fldiv@bexp,??___fldiv
  4614   000828  6A1D               	clrf	(??___fldiv+1)^0,c
  4615   00082A  5E1C               	subwf	??___fldiv^0,f,c
  4616   00082C  0E00               	movlw	0
  4617   00082E  5A1D               	subwfb	(??___fldiv+1)^0,f,c
  4618   000830  0E7F               	movlw	127
  4619   000832  241C               	addwf	??___fldiv^0,w,c
  4620   000834  6E25               	movwf	___fldiv@new_exp^0,c
  4621   000836  0E00               	movlw	0
  4622   000838  201D               	addwfc	(??___fldiv+1)^0,w,c
  4623   00083A  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  4624   00083C  C014  F020         	movff	___fldiv@b,___fldiv@rem
  4625   000840  C015  F021         	movff	___fldiv@b+1,___fldiv@rem+1
  4626   000844  C016  F022         	movff	___fldiv@b+2,___fldiv@rem+2
  4627   000848  C017  F023         	movff	___fldiv@b+3,___fldiv@rem+3
  4628   00084C  0E00               	movlw	0
  4629   00084E  6E14               	movwf	___fldiv@b^0,c
  4630   000850  0E00               	movlw	0
  4631   000852  6E15               	movwf	(___fldiv@b+1)^0,c
  4632   000854  0E00               	movlw	0
  4633   000856  6E16               	movwf	(___fldiv@b+2)^0,c
  4634   000858  0E00               	movlw	0
  4635   00085A  6E17               	movwf	(___fldiv@b+3)^0,c
  4636   00085C  0E00               	movlw	0
  4637   00085E  6E27               	movwf	___fldiv@grs^0,c
  4638   000860  0E00               	movlw	0
  4639   000862  6E28               	movwf	(___fldiv@grs+1)^0,c
  4640   000864  0E00               	movlw	0
  4641   000866  6E29               	movwf	(___fldiv@grs+2)^0,c
  4642   000868  0E00               	movlw	0
  4643   00086A  6E2A               	movwf	(___fldiv@grs+3)^0,c
  4644   00086C  0E00               	movlw	0
  4645   00086E  6E2C               	movwf	___fldiv@aexp^0,c
  4646   000870  EF72  F004         	goto	l1126
  4647   000874                     l2439:
  4648   000874  502C               	movf	___fldiv@aexp^0,w,c
  4649   000876  B4D8               	btfsc	status,2,c
  4650   000878  EF40  F004         	goto	u1441
  4651   00087C  EF42  F004         	goto	u1440
  4652   000880                     u1441:
  4653   000880  EF59  F004         	goto	l2447
  4654   000884                     u1440:
  4655   000884  90D8               	bcf	status,0,c
  4656   000886  3620               	rlcf	___fldiv@rem^0,f,c
  4657   000888  3621               	rlcf	(___fldiv@rem+1)^0,f,c
  4658   00088A  3622               	rlcf	(___fldiv@rem+2)^0,f,c
  4659   00088C  3623               	rlcf	(___fldiv@rem+3)^0,f,c
  4660   00088E  90D8               	bcf	status,0,c
  4661   000890  3614               	rlcf	___fldiv@b^0,f,c
  4662   000892  3615               	rlcf	(___fldiv@b+1)^0,f,c
  4663   000894  3616               	rlcf	(___fldiv@b+2)^0,f,c
  4664   000896  3617               	rlcf	(___fldiv@b+3)^0,f,c
  4665   000898  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  4666   00089A  EF51  F004         	goto	u1451
  4667   00089E  EF53  F004         	goto	u1450
  4668   0008A2                     u1451:
  4669   0008A2  EF54  F004         	goto	l1129
  4670   0008A6                     u1450:
  4671   0008A6  8014               	bsf	___fldiv@b^0,0,c
  4672   0008A8                     l1129:
  4673   0008A8  90D8               	bcf	status,0,c
  4674   0008AA  3627               	rlcf	___fldiv@grs^0,f,c
  4675   0008AC  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  4676   0008AE  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  4677   0008B0  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  4678   0008B2                     l2447:
  4679   0008B2  5018               	movf	___fldiv@a^0,w,c
  4680   0008B4  5C20               	subwf	___fldiv@rem^0,w,c
  4681   0008B6  5019               	movf	(___fldiv@a+1)^0,w,c
  4682   0008B8  5821               	subwfb	(___fldiv@rem+1)^0,w,c
  4683   0008BA  501A               	movf	(___fldiv@a+2)^0,w,c
  4684   0008BC  5822               	subwfb	(___fldiv@rem+2)^0,w,c
  4685   0008BE  501B               	movf	(___fldiv@a+3)^0,w,c
  4686   0008C0  5823               	subwfb	(___fldiv@rem+3)^0,w,c
  4687   0008C2  A0D8               	btfss	status,0,c
  4688   0008C4  EF66  F004         	goto	u1461
  4689   0008C8  EF68  F004         	goto	u1460
  4690   0008CC                     u1461:
  4691   0008CC  EF71  F004         	goto	l2453
  4692   0008D0                     u1460:
  4693   0008D0  8C2A               	bsf	(___fldiv@grs+3)^0,6,c
  4694   0008D2  5018               	movf	___fldiv@a^0,w,c
  4695   0008D4  5E20               	subwf	___fldiv@rem^0,f,c
  4696   0008D6  5019               	movf	(___fldiv@a+1)^0,w,c
  4697   0008D8  5A21               	subwfb	(___fldiv@rem+1)^0,f,c
  4698   0008DA  501A               	movf	(___fldiv@a+2)^0,w,c
  4699   0008DC  5A22               	subwfb	(___fldiv@rem+2)^0,f,c
  4700   0008DE  501B               	movf	(___fldiv@a+3)^0,w,c
  4701   0008E0  5A23               	subwfb	(___fldiv@rem+3)^0,f,c
  4702   0008E2                     l2453:
  4703   0008E2  2A2C               	incf	___fldiv@aexp^0,f,c
  4704   0008E4                     l1126:
  4705   0008E4  0E19               	movlw	25
  4706   0008E6  642C               	cpfsgt	___fldiv@aexp^0,c
  4707   0008E8  EF78  F004         	goto	u1471
  4708   0008EC  EF7A  F004         	goto	u1470
  4709   0008F0                     u1471:
  4710   0008F0  EF3A  F004         	goto	l2439
  4711   0008F4                     u1470:
  4712   0008F4  5020               	movf	___fldiv@rem^0,w,c
  4713   0008F6  1021               	iorwf	(___fldiv@rem+1)^0,w,c
  4714   0008F8  1022               	iorwf	(___fldiv@rem+2)^0,w,c
  4715   0008FA  1023               	iorwf	(___fldiv@rem+3)^0,w,c
  4716   0008FC  B4D8               	btfsc	status,2,c
  4717   0008FE  EF83  F004         	goto	u1481
  4718   000902  EF85  F004         	goto	u1480
  4719   000906                     u1481:
  4720   000906  EF9D  F004         	goto	l2465
  4721   00090A                     u1480:
  4722   00090A  8027               	bsf	___fldiv@grs^0,0,c
  4723   00090C  EF9D  F004         	goto	l2465
  4724   000910                     l2459:
  4725   000910  90D8               	bcf	status,0,c
  4726   000912  3614               	rlcf	___fldiv@b^0,f,c
  4727   000914  3615               	rlcf	(___fldiv@b+1)^0,f,c
  4728   000916  3616               	rlcf	(___fldiv@b+2)^0,f,c
  4729   000918  3617               	rlcf	(___fldiv@b+3)^0,f,c
  4730   00091A  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  4731   00091C  EF92  F004         	goto	u1491
  4732   000920  EF94  F004         	goto	u1490
  4733   000924                     u1491:
  4734   000924  EF95  F004         	goto	l1135
  4735   000928                     u1490:
  4736   000928  8014               	bsf	___fldiv@b^0,0,c
  4737   00092A                     l1135:
  4738   00092A  90D8               	bcf	status,0,c
  4739   00092C  3627               	rlcf	___fldiv@grs^0,f,c
  4740   00092E  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  4741   000930  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  4742   000932  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  4743   000934  0625               	decf	___fldiv@new_exp^0,f,c
  4744   000936  A0D8               	btfss	status,0,c
  4745   000938  0626               	decf	(___fldiv@new_exp+1)^0,f,c
  4746   00093A                     l2465:
  4747   00093A  AE16               	btfss	(___fldiv@b+2)^0,7,c
  4748   00093C  EFA2  F004         	goto	u1501
  4749   000940  EFA4  F004         	goto	u1500
  4750   000944                     u1501:
  4751   000944  EF88  F004         	goto	l2459
  4752   000948                     u1500:
  4753   000948  0E00               	movlw	0
  4754   00094A  6E2C               	movwf	___fldiv@aexp^0,c
  4755   00094C  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  4756   00094E  EFAB  F004         	goto	u1511
  4757   000952  EFAD  F004         	goto	u1510
  4758   000956                     u1511:
  4759   000956  EFD1  F004         	goto	l1137
  4760   00095A                     u1510:
  4761   00095A  0EFF               	movlw	255
  4762   00095C  1427               	andwf	___fldiv@grs^0,w,c
  4763   00095E  6E1C               	movwf	??___fldiv^0,c
  4764   000960  0EFF               	movlw	255
  4765   000962  1428               	andwf	(___fldiv@grs+1)^0,w,c
  4766   000964  6E1D               	movwf	(??___fldiv+1)^0,c
  4767   000966  0EFF               	movlw	255
  4768   000968  1429               	andwf	(___fldiv@grs+2)^0,w,c
  4769   00096A  6E1E               	movwf	(??___fldiv+2)^0,c
  4770   00096C  0E7F               	movlw	127
  4771   00096E  142A               	andwf	(___fldiv@grs+3)^0,w,c
  4772   000970  6E1F               	movwf	(??___fldiv+3)^0,c
  4773   000972  501C               	movf	??___fldiv^0,w,c
  4774   000974  101D               	iorwf	(??___fldiv+1)^0,w,c
  4775   000976  101E               	iorwf	(??___fldiv+2)^0,w,c
  4776   000978  101F               	iorwf	(??___fldiv+3)^0,w,c
  4777   00097A  B4D8               	btfsc	status,2,c
  4778   00097C  EFC2  F004         	goto	u1521
  4779   000980  EFC4  F004         	goto	u1520
  4780   000984                     u1521:
  4781   000984  EFC8  F004         	goto	l1138
  4782   000988                     u1520:
  4783   000988                     l2473:
  4784   000988  0E01               	movlw	1
  4785   00098A  6E2C               	movwf	___fldiv@aexp^0,c
  4786   00098C  EFD1  F004         	goto	l1137
  4787   000990                     l1138:
  4788   000990  A014               	btfss	___fldiv@b^0,0,c
  4789   000992  EFCD  F004         	goto	u1531
  4790   000996  EFCF  F004         	goto	u1530
  4791   00099A                     u1531:
  4792   00099A  EFD1  F004         	goto	l1137
  4793   00099E                     u1530:
  4794   00099E  EFC4  F004         	goto	l2473
  4795   0009A2                     l1137:
  4796   0009A2  502C               	movf	___fldiv@aexp^0,w,c
  4797   0009A4  B4D8               	btfsc	status,2,c
  4798   0009A6  EFD7  F004         	goto	u1541
  4799   0009AA  EFD9  F004         	goto	u1540
  4800   0009AE                     u1541:
  4801   0009AE  EFFD  F004         	goto	l2485
  4802   0009B2                     u1540:
  4803   0009B2  0E01               	movlw	1
  4804   0009B4  2614               	addwf	___fldiv@b^0,f,c
  4805   0009B6  0E00               	movlw	0
  4806   0009B8  2215               	addwfc	(___fldiv@b+1)^0,f,c
  4807   0009BA  2216               	addwfc	(___fldiv@b+2)^0,f,c
  4808   0009BC  2217               	addwfc	(___fldiv@b+3)^0,f,c
  4809   0009BE  A017               	btfss	(___fldiv@b+3)^0,0,c
  4810   0009C0  EFE4  F004         	goto	u1551
  4811   0009C4  EFE6  F004         	goto	u1550
  4812   0009C8                     u1551:
  4813   0009C8  EFFD  F004         	goto	l2485
  4814   0009CC                     u1550:
  4815   0009CC  C014  F01C         	movff	___fldiv@b,??___fldiv
  4816   0009D0  C015  F01D         	movff	___fldiv@b+1,??___fldiv+1
  4817   0009D4  C016  F01E         	movff	___fldiv@b+2,??___fldiv+2
  4818   0009D8  C017  F01F         	movff	___fldiv@b+3,??___fldiv+3
  4819   0009DC  341F               	rlcf	(??___fldiv+3)^0,w,c
  4820   0009DE  321F               	rrcf	(??___fldiv+3)^0,f,c
  4821   0009E0  321E               	rrcf	(??___fldiv+2)^0,f,c
  4822   0009E2  321D               	rrcf	(??___fldiv+1)^0,f,c
  4823   0009E4  321C               	rrcf	??___fldiv^0,f,c
  4824   0009E6  C01C  F014         	movff	??___fldiv,___fldiv@b
  4825   0009EA  C01D  F015         	movff	??___fldiv+1,___fldiv@b+1
  4826   0009EE  C01E  F016         	movff	??___fldiv+2,___fldiv@b+2
  4827   0009F2  C01F  F017         	movff	??___fldiv+3,___fldiv@b+3
  4828   0009F6  4A25               	infsnz	___fldiv@new_exp^0,f,c
  4829   0009F8  2A26               	incf	(___fldiv@new_exp+1)^0,f,c
  4830   0009FA                     l2485:
  4831   0009FA  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4832   0009FC  EF08  F005         	goto	u1561
  4833   000A00  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  4834   000A02  E108               	bnz	u1560
  4835   000A04  2825               	incf	___fldiv@new_exp^0,w,c
  4836   000A06  A0D8               	btfss	status,0,c
  4837   000A08  EF08  F005         	goto	u1561
  4838   000A0C  EF0A  F005         	goto	u1560
  4839   000A10                     u1561:
  4840   000A10  EF15  F005         	goto	l2489
  4841   000A14                     u1560:
  4842   000A14  0E00               	movlw	0
  4843   000A16  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  4844   000A18  6825               	setf	___fldiv@new_exp^0,c
  4845   000A1A  0E00               	movlw	0
  4846   000A1C  6E14               	movwf	___fldiv@b^0,c
  4847   000A1E  0E00               	movlw	0
  4848   000A20  6E15               	movwf	(___fldiv@b+1)^0,c
  4849   000A22  0E00               	movlw	0
  4850   000A24  6E16               	movwf	(___fldiv@b+2)^0,c
  4851   000A26  0E00               	movlw	0
  4852   000A28  6E17               	movwf	(___fldiv@b+3)^0,c
  4853   000A2A                     l2489:
  4854   000A2A  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4855   000A2C  EF22  F005         	goto	u1570
  4856   000A30  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  4857   000A32  E106               	bnz	u1571
  4858   000A34  0425               	decf	___fldiv@new_exp^0,w,c
  4859   000A36  B0D8               	btfsc	status,0,c
  4860   000A38  EF20  F005         	goto	u1571
  4861   000A3C  EF22  F005         	goto	u1570
  4862   000A40                     u1571:
  4863   000A40  EF30  F005         	goto	l2493
  4864   000A44                     u1570:
  4865   000A44  0E00               	movlw	0
  4866   000A46  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  4867   000A48  0E00               	movlw	0
  4868   000A4A  6E25               	movwf	___fldiv@new_exp^0,c
  4869   000A4C  0E00               	movlw	0
  4870   000A4E  6E14               	movwf	___fldiv@b^0,c
  4871   000A50  0E00               	movlw	0
  4872   000A52  6E15               	movwf	(___fldiv@b+1)^0,c
  4873   000A54  0E00               	movlw	0
  4874   000A56  6E16               	movwf	(___fldiv@b+2)^0,c
  4875   000A58  0E00               	movlw	0
  4876   000A5A  6E17               	movwf	(___fldiv@b+3)^0,c
  4877   000A5C  0E00               	movlw	0
  4878   000A5E  6E24               	movwf	___fldiv@sign^0,c
  4879   000A60                     l2493:
  4880   000A60  C025  F02B         	movff	___fldiv@new_exp,___fldiv@bexp
  4881   000A64  A02B               	btfss	___fldiv@bexp^0,0,c
  4882   000A66  EF37  F005         	goto	u1581
  4883   000A6A  EF39  F005         	goto	u1580
  4884   000A6E                     u1581:
  4885   000A6E  EF3C  F005         	goto	l2499
  4886   000A72                     u1580:
  4887   000A72  8E16               	bsf	(___fldiv@b+2)^0,7,c
  4888   000A74  EF3D  F005         	goto	l2501
  4889   000A78                     l2499:
  4890   000A78  9E16               	bcf	(___fldiv@b+2)^0,7,c
  4891   000A7A                     l2501:
  4892   000A7A  90D8               	bcf	status,0,c
  4893   000A7C  302B               	rrcf	___fldiv@bexp^0,w,c
  4894   000A7E  6E17               	movwf	(___fldiv@b+3)^0,c
  4895   000A80  EFF3  F003         	goto	l2415
  4896   000A84                     l1124:
  4897   000A84  0012               	return		;funcret
  4898   000A86                     __end_of___fldiv:
  4899                           	callstack 0
  4900                           
  4901 ;; *************** function _display_dashboard *****************
  4902 ;; Defined at:
  4903 ;;		line 8 in file "car_black_box.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  uckey           1    wreg     unsigned char 
  4906 ;;  usads           2   19[COMRAM] unsigned short 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  uckey           1   21[COMRAM] unsigned char 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4918 ;;      Params:         2       0       0       0       0       0       0
  4919 ;;      Locals:         1       0       0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0
  4921 ;;      Totals:         3       0       0       0       0       0       0
  4922 ;;Total ram usage:        3 bytes
  4923 ;; Hardware stack levels used: 1
  4924 ;; Hardware stack levels required when called: 7
  4925 ;; This function calls:
  4926 ;;		_clcd_print
  4927 ;;		_clcd_putch
  4928 ;;		_clcd_write
  4929 ;;		_display_speed
  4930 ;;		_display_time
  4931 ;;		_gear_monitor
  4932 ;; This function is called by:
  4933 ;;		_main
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text26
  4938   001D54                     __ptext26:
  4939                           	callstack 0
  4940   001D54                     _display_dashboard:
  4941                           	callstack 23
  4942                           
  4943                           ;incstack = 0
  4944                           ;display_dashboard@uckey stored from wreg
  4945   001D54  6E16               	movwf	display_dashboard@uckey^0,c
  4946   001D56                     
  4947                           ;car_black_box.c: 8: void display_dashboard(unsigned char uckey, unsigned short usads);c
      +                          ar_black_box.c: 9: {;car_black_box.c: 10:     clcd_print( (unsigned char*) "   Time    E
      +                            S" , (0x80 + (0)));
  4948   001D56  0E56               	movlw	low STR_10
  4949   001D58  6E03               	movwf	clcd_print@data^0,c
  4950   001D5A  0E06               	movlw	high STR_10
  4951   001D5C  6E04               	movwf	(clcd_print@data+1)^0,c
  4952   001D5E  0E80               	movlw	128
  4953   001D60  6E05               	movwf	clcd_print@addr^0,c
  4954   001D62  ECDE  F00D         	call	_clcd_print	;wreg free
  4955   001D66                     
  4956                           ;car_black_box.c: 11:     clcd_putch(0x70,(0x80 + (15)));
  4957   001D66  0E8F               	movlw	143
  4958   001D68  6E0F               	movwf	clcd_putch@addr^0,c
  4959   001D6A  0E70               	movlw	112
  4960   001D6C  ECFE  F00F         	call	_clcd_putch
  4961   001D70                     
  4962                           ;car_black_box.c: 12:     if(uckey == 10)
  4963   001D70  0E0A               	movlw	10
  4964   001D72  1816               	xorwf	display_dashboard@uckey^0,w,c
  4965   001D74  A4D8               	btfss	status,2,c
  4966   001D76  EFBF  F00E         	goto	u2271
  4967   001D7A  EFC1  F00E         	goto	u2270
  4968   001D7E                     u2271:
  4969   001D7E  EFCC  F00E         	goto	l3061
  4970   001D82                     u2270:
  4971   001D82                     
  4972                           ;car_black_box.c: 13:         {;car_black_box.c: 14:             controlflag=0;
  4973   001D82  0E00               	movlw	0
  4974   001D84  6E59               	movwf	(_controlflag+1)^0,c
  4975   001D86  0E00               	movlw	0
  4976   001D88  6E58               	movwf	_controlflag^0,c
  4977   001D8A                     
  4978                           ;car_black_box.c: 15:             clcd_write(0x01, 0);
  4979   001D8A  0E00               	movlw	0
  4980   001D8C  6E01               	movwf	clcd_write@control_bit^0,c
  4981   001D8E  0E01               	movlw	1
  4982   001D90  EC86  F00F         	call	_clcd_write
  4983   001D94  EFD7  F00E         	goto	l128
  4984   001D98                     l3061:
  4985                           
  4986                           ;car_black_box.c: 18:     display_time();
  4987   001D98  EC3A  F010         	call	_display_time	;wreg free
  4988   001D9C                     
  4989                           ;car_black_box.c: 19:     gear_monitor(uckey);
  4990   001D9C  5016               	movf	display_dashboard@uckey^0,w,c
  4991   001D9E  EC17  F00A         	call	_gear_monitor
  4992   001DA2                     
  4993                           ;car_black_box.c: 20:     display_speed(usads);
  4994   001DA2  C014  F011         	movff	display_dashboard@usads,display_speed@usadc
  4995   001DA6  C015  F012         	movff	display_dashboard@usads+1,display_speed@usadc+1
  4996   001DAA  ECD8  F00E         	call	_display_speed	;wreg free
  4997   001DAE                     l128:
  4998   001DAE  0012               	return		;funcret
  4999   001DB0                     __end_of_display_dashboard:
  5000                           	callstack 0
  5001                           
  5002 ;; *************** function _gear_monitor *****************
  5003 ;; Defined at:
  5004 ;;		line 55 in file "car_black_box.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  uckey           1    wreg     unsigned char 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  uckey           1   18[COMRAM] unsigned char 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5018 ;;      Params:         0       0       0       0       0       0       0
  5019 ;;      Locals:         1       0       0       0       0       0       0
  5020 ;;      Temps:          2       0       0       0       0       0       0
  5021 ;;      Totals:         3       0       0       0       0       0       0
  5022 ;;Total ram usage:        3 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; Hardware stack levels required when called: 3
  5025 ;; This function calls:
  5026 ;;		_clcd_putch
  5027 ;; This function is called by:
  5028 ;;		_display_dashboard
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text27
  5033   00142E                     __ptext27:
  5034                           	callstack 0
  5035   00142E                     _gear_monitor:
  5036                           	callstack 26
  5037                           
  5038                           ;incstack = 0
  5039                           ;gear_monitor@uckey stored from wreg
  5040   00142E  6E13               	movwf	gear_monitor@uckey^0,c
  5041   001430                     
  5042                           ;car_black_box.c: 56:     static char crashflag=0;;car_black_box.c: 57:     if(uckey == 
      +                          1)
  5043   001430  0413               	decf	gear_monitor@uckey^0,w,c
  5044   001432  A4D8               	btfss	status,2,c
  5045   001434  EF1E  F00A         	goto	u1941
  5046   001438  EF20  F00A         	goto	u1940
  5047   00143C                     u1941:
  5048   00143C  EF26  F00A         	goto	l2779
  5049   001440                     u1940:
  5050   001440                     
  5051                           ;car_black_box.c: 58:     {;car_black_box.c: 59:         crashflag=1;
  5052   001440  0E01               	movlw	1
  5053   001442  6E52               	movwf	gear_monitor@crashflag^0,c
  5054                           
  5055                           ;car_black_box.c: 60:         signindex=7;
  5056   001444  0E07               	movlw	7
  5057   001446  6E53               	movwf	_signindex^0,c
  5058                           
  5059                           ;car_black_box.c: 61:     }
  5060   001448  EF65  F00A         	goto	l2797
  5061   00144C                     l2779:
  5062   00144C  0E02               	movlw	2
  5063   00144E  1813               	xorwf	gear_monitor@uckey^0,w,c
  5064   001450  A4D8               	btfss	status,2,c
  5065   001452  EF2D  F00A         	goto	u1951
  5066   001456  EF2F  F00A         	goto	u1950
  5067   00145A                     u1951:
  5068   00145A  EF49  F00A         	goto	l2789
  5069   00145E                     u1950:
  5070   00145E                     
  5071                           ;car_black_box.c: 63:     {;car_black_box.c: 64:         if(signindex < 6)
  5072   00145E  0E06               	movlw	6
  5073   001460  6053               	cpfslt	_signindex^0,c
  5074   001462  EF35  F00A         	goto	u1961
  5075   001466  EF37  F00A         	goto	u1960
  5076   00146A                     u1961:
  5077   00146A  EF3A  F00A         	goto	l2785
  5078   00146E                     u1960:
  5079   00146E                     
  5080                           ;car_black_box.c: 65:             signindex++;
  5081   00146E  2A53               	incf	_signindex^0,f,c
  5082   001470  EF65  F00A         	goto	l2797
  5083   001474                     l2785:
  5084   001474  0E07               	movlw	7
  5085   001476  1853               	xorwf	_signindex^0,w,c
  5086   001478  A4D8               	btfss	status,2,c
  5087   00147A  EF41  F00A         	goto	u1971
  5088   00147E  EF43  F00A         	goto	u1970
  5089   001482                     u1971:
  5090   001482  EF65  F00A         	goto	l150
  5091   001486                     u1970:
  5092   001486                     
  5093                           ;car_black_box.c: 67:         {;car_black_box.c: 68:             signindex=1;
  5094   001486  0E01               	movlw	1
  5095   001488  6E53               	movwf	_signindex^0,c
  5096                           
  5097                           ;car_black_box.c: 69:             crashflag=0;
  5098   00148A  0E00               	movlw	0
  5099   00148C  6E52               	movwf	gear_monitor@crashflag^0,c
  5100   00148E  EF65  F00A         	goto	l2797
  5101   001492                     l2789:
  5102   001492  0E03               	movlw	3
  5103   001494  1813               	xorwf	gear_monitor@uckey^0,w,c
  5104   001496  A4D8               	btfss	status,2,c
  5105   001498  EF50  F00A         	goto	u1981
  5106   00149C  EF52  F00A         	goto	u1980
  5107   0014A0                     u1981:
  5108   0014A0  EF65  F00A         	goto	l2797
  5109   0014A4                     u1980:
  5110   0014A4                     
  5111                           ;car_black_box.c: 73:     {;car_black_box.c: 74:           if(crashflag ==0 && signindex
      +                           > 1)
  5112   0014A4  5052               	movf	gear_monitor@crashflag^0,w,c
  5113   0014A6  A4D8               	btfss	status,2,c
  5114   0014A8  EF58  F00A         	goto	u1991
  5115   0014AC  EF5A  F00A         	goto	u1990
  5116   0014B0                     u1991:
  5117   0014B0  EF65  F00A         	goto	l150
  5118   0014B4                     u1990:
  5119   0014B4  0E01               	movlw	1
  5120   0014B6  6453               	cpfsgt	_signindex^0,c
  5121   0014B8  EF60  F00A         	goto	u2001
  5122   0014BC  EF62  F00A         	goto	u2000
  5123   0014C0                     u2001:
  5124   0014C0  EF65  F00A         	goto	l150
  5125   0014C4                     u2000:
  5126   0014C4                     
  5127                           ;car_black_box.c: 75:               signindex--;
  5128   0014C4  0653               	decf	_signindex^0,f,c
  5129   0014C6  EF65  F00A         	goto	l2797
  5130   0014CA                     l150:
  5131   0014CA                     l2797:
  5132                           
  5133                           ;car_black_box.c: 77:     clcd_putch(signature[signindex][0], (0xC0 + (11)));
  5134   0014CA  0ECB               	movlw	203
  5135   0014CC  6E0F               	movwf	clcd_putch@addr^0,c
  5136   0014CE  5053               	movf	_signindex^0,w,c
  5137   0014D0  0D02               	mullw	2
  5138   0014D2  0E8D               	movlw	low _signature
  5139   0014D4  24F3               	addwf	243,w,c
  5140   0014D6  6ED9               	movwf	fsr2l,c
  5141   0014D8  0E00               	movlw	high _signature
  5142   0014DA  20F4               	addwfc	prodh,w,c
  5143   0014DC  6EDA               	movwf	fsr2h,c
  5144   0014DE  CFDE FFF6          	movff	postinc2,tblptrl
  5145   0014E2  CFDD FFF7          	movff	postdec2,tblptrh
  5146   0014E6                     	if	0	;tblptru may be non-zero
  5147   0014E6                     	endif
  5148   0014E6                     	if	0	;tblptru may be non-zero
  5149   0014E6                     	endif
  5150   0014E6  0008               	tblrd		*
  5151   0014E8  50F5               	movf	tablat,w,c
  5152   0014EA  ECFE  F00F         	call	_clcd_putch
  5153   0014EE                     
  5154                           ;car_black_box.c: 78:     clcd_putch(signature[signindex][1], (0xC0 + (12)));
  5155   0014EE  0ECC               	movlw	204
  5156   0014F0  6E0F               	movwf	clcd_putch@addr^0,c
  5157   0014F2  5053               	movf	_signindex^0,w,c
  5158   0014F4  0D02               	mullw	2
  5159   0014F6  0E8D               	movlw	low _signature
  5160   0014F8  24F3               	addwf	243,w,c
  5161   0014FA  6ED9               	movwf	fsr2l,c
  5162   0014FC  0E00               	movlw	high _signature
  5163   0014FE  20F4               	addwfc	prodh,w,c
  5164   001500  6EDA               	movwf	fsr2h,c
  5165   001502  CFDE F011          	movff	postinc2,??_gear_monitor
  5166   001506  CFDD F012          	movff	postdec2,??_gear_monitor+1
  5167   00150A  0E01               	movlw	1
  5168   00150C  2611               	addwf	??_gear_monitor^0,f,c
  5169   00150E  0E00               	movlw	0
  5170   001510  2212               	addwfc	(??_gear_monitor+1)^0,f,c
  5171   001512  C011  FFF6         	movff	??_gear_monitor,tblptrl
  5172   001516  C012  FFF7         	movff	??_gear_monitor+1,tblptrh
  5173   00151A                     	if	0	;tblptru may be non-zero
  5174   00151A                     	endif
  5175   00151A                     	if	0	;tblptru may be non-zero
  5176   00151A                     	endif
  5177   00151A  0008               	tblrd		*
  5178   00151C  50F5               	movf	tablat,w,c
  5179   00151E  ECFE  F00F         	call	_clcd_putch
  5180   001522  0012               	return		;funcret
  5181   001524                     __end_of_gear_monitor:
  5182                           	callstack 0
  5183                           
  5184 ;; *************** function _display_time *****************
  5185 ;; Defined at:
  5186 ;;		line 22 in file "car_black_box.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;		None
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5200 ;;      Params:         0       0       0       0       0       0       0
  5201 ;;      Locals:         0       0       0       0       0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0       0
  5203 ;;      Totals:         0       0       0       0       0       0       0
  5204 ;;Total ram usage:        0 bytes
  5205 ;; Hardware stack levels used: 1
  5206 ;; Hardware stack levels required when called: 6
  5207 ;; This function calls:
  5208 ;;		_display_times
  5209 ;;		_get_time
  5210 ;; This function is called by:
  5211 ;;		_display_dashboard
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text28
  5216   002074                     __ptext28:
  5217                           	callstack 0
  5218   002074                     _display_time:
  5219                           	callstack 23
  5220   002074                     
  5221                           ;car_black_box.c: 23:      get_time();
  5222   002074  ECF1  F00C         	call	_get_time	;wreg free
  5223   002078                     
  5224                           ;car_black_box.c: 24:   display_times();
  5225   002078  EC1E  F010         	call	_display_times	;wreg free
  5226   00207C  0012               	return		;funcret
  5227   00207E                     __end_of_display_time:
  5228                           	callstack 0
  5229                           
  5230 ;; *************** function _get_time *****************
  5231 ;; Defined at:
  5232 ;;		line 31 in file "car_black_box.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;		None
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;		None
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  1    wreg      void 
  5239 ;; Registers used:
  5240 ;;		wreg, status,2, status,0, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5246 ;;      Params:         0       0       0       0       0       0       0
  5247 ;;      Locals:         0       0       0       0       0       0       0
  5248 ;;      Temps:          0       0       0       0       0       0       0
  5249 ;;      Totals:         0       0       0       0       0       0       0
  5250 ;;Total ram usage:        0 bytes
  5251 ;; Hardware stack levels used: 1
  5252 ;; Hardware stack levels required when called: 5
  5253 ;; This function calls:
  5254 ;;		_read_ds1307
  5255 ;; This function is called by:
  5256 ;;		_display_time
  5257 ;;		_getforstoreevent
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           	psect	text29
  5262   0019E2                     __ptext29:
  5263                           	callstack 0
  5264   0019E2                     _get_time:
  5265                           	callstack 24
  5266   0019E2                     
  5267                           ;car_black_box.c: 33:  clock_reg[0] = read_ds1307(0x02);
  5268   0019E2  0E02               	movlw	2
  5269   0019E4  EC9F  F00F         	call	_read_ds1307
  5270   0019E8  6E42               	movwf	_clock_reg^0,c
  5271                           
  5272                           ;car_black_box.c: 34:  clock_reg[1] = read_ds1307(0x01);
  5273   0019EA  0E01               	movlw	1
  5274   0019EC  EC9F  F00F         	call	_read_ds1307
  5275   0019F0  6E43               	movwf	(_clock_reg+1)^0,c
  5276                           
  5277                           ;car_black_box.c: 35:  clock_reg[2] = read_ds1307(0x00);
  5278   0019F2  0E00               	movlw	0
  5279   0019F4  EC9F  F00F         	call	_read_ds1307
  5280   0019F8  6E44               	movwf	(_clock_reg+2)^0,c
  5281   0019FA                     
  5282                           ;car_black_box.c: 37:  if (clock_reg[0] & 0x40)
  5283   0019FA  AC42               	btfss	_clock_reg^0,6,c
  5284   0019FC  EF02  F00D         	goto	u1341
  5285   001A00  EF04  F00D         	goto	u1340
  5286   001A04                     u1341:
  5287   001A04  EF10  F00D         	goto	l2333
  5288   001A08                     u1340:
  5289   001A08                     
  5290                           ;car_black_box.c: 38:  {;car_black_box.c: 39:   time[0] = '0' + ((clock_reg[0] >> 4) & 0
      +                          x01);
  5291   001A08  3842               	swapf	_clock_reg^0,w,c
  5292   001A0A  0B0F               	andlw	15
  5293   001A0C  0B01               	andlw	1
  5294   001A0E  0F30               	addlw	48
  5295   001A10  0100               	movlb	0	; () banked
  5296   001A12  6F7F               	movwf	_time& (0+255),b
  5297                           
  5298                           ;car_black_box.c: 40:   time[1] = '0' + (clock_reg[0] & 0x0F);
  5299   001A14  5042               	movf	_clock_reg^0,w,c
  5300   001A16  0B0F               	andlw	15
  5301   001A18  0F30               	addlw	48
  5302   001A1A  6F80               	movwf	(_time+1)& (0+255),b
  5303                           
  5304                           ;car_black_box.c: 41:  }
  5305   001A1C  EF1A  F00D         	goto	l2335
  5306   001A20                     l2333:
  5307                           
  5308                           ;car_black_box.c: 43:  {;car_black_box.c: 44:   time[0] = '0' + ((clock_reg[0] >> 4) & 0
      +                          x03);
  5309   001A20  3842               	swapf	_clock_reg^0,w,c
  5310   001A22  0B0F               	andlw	15
  5311   001A24  0B03               	andlw	3
  5312   001A26  0F30               	addlw	48
  5313   001A28  0100               	movlb	0	; () banked
  5314   001A2A  6F7F               	movwf	_time& (0+255),b
  5315                           
  5316                           ;car_black_box.c: 45:   time[1] = '0' + (clock_reg[0] & 0x0F);
  5317   001A2C  5042               	movf	_clock_reg^0,w,c
  5318   001A2E  0B0F               	andlw	15
  5319   001A30  0F30               	addlw	48
  5320   001A32  6F80               	movwf	(_time+1)& (0+255),b
  5321   001A34                     l2335:
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;car_black_box.c: 47:  time[2] = ':';
  5325   001A34  0E3A               	movlw	58
  5326   001A36  6F81               	movwf	(_time+2)& (0+255),b
  5327   001A38                     
  5328                           ; BSR set to: 0
  5329                           ;car_black_box.c: 48:  time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  5330   001A38  3843               	swapf	(_clock_reg+1)^0,w,c
  5331   001A3A  0B0F               	andlw	15
  5332   001A3C  0B0F               	andlw	15
  5333   001A3E  0F30               	addlw	48
  5334   001A40  6F82               	movwf	(_time+3)& (0+255),b
  5335   001A42                     
  5336                           ; BSR set to: 0
  5337                           ;car_black_box.c: 49:  time[4] = '0' + (clock_reg[1] & 0x0F);
  5338   001A42  5043               	movf	(_clock_reg+1)^0,w,c
  5339   001A44  0B0F               	andlw	15
  5340   001A46  0F30               	addlw	48
  5341   001A48  6F83               	movwf	(_time+4)& (0+255),b
  5342   001A4A                     
  5343                           ; BSR set to: 0
  5344                           ;car_black_box.c: 50:  time[5] = ':';
  5345   001A4A  0E3A               	movlw	58
  5346   001A4C  6F84               	movwf	(_time+5)& (0+255),b
  5347                           
  5348                           ;car_black_box.c: 51:  time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  5349   001A4E  3844               	swapf	(_clock_reg+2)^0,w,c
  5350   001A50  0B0F               	andlw	15
  5351   001A52  0B0F               	andlw	15
  5352   001A54  0F30               	addlw	48
  5353   001A56  6F85               	movwf	(_time+6)& (0+255),b
  5354                           
  5355                           ;car_black_box.c: 52:  time[7] = '0' + (clock_reg[2] & 0x0F);
  5356   001A58  5044               	movf	(_clock_reg+2)^0,w,c
  5357   001A5A  0B0F               	andlw	15
  5358   001A5C  0F30               	addlw	48
  5359   001A5E  6F86               	movwf	(_time+7)& (0+255),b
  5360   001A60                     
  5361                           ; BSR set to: 0
  5362                           ;car_black_box.c: 53:  time[8] = '\0';
  5363   001A60  0E00               	movlw	0
  5364   001A62  6F87               	movwf	(_time+8)& (0+255),b
  5365   001A64                     
  5366                           ; BSR set to: 0
  5367   001A64  0012               	return		;funcret
  5368   001A66                     __end_of_get_time:
  5369                           	callstack 0
  5370                           
  5371 ;; *************** function _read_ds1307 *****************
  5372 ;; Defined at:
  5373 ;;		line 55 in file "ds1307.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  address         1    wreg     unsigned char 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  address         1    1[COMRAM] unsigned char 
  5378 ;;  data            1    2[COMRAM] unsigned char 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      unsigned char 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, cstack
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5388 ;;      Params:         0       0       0       0       0       0       0
  5389 ;;      Locals:         2       0       0       0       0       0       0
  5390 ;;      Temps:          0       0       0       0       0       0       0
  5391 ;;      Totals:         2       0       0       0       0       0       0
  5392 ;;Total ram usage:        2 bytes
  5393 ;; Hardware stack levels used: 1
  5394 ;; Hardware stack levels required when called: 4
  5395 ;; This function calls:
  5396 ;;		_i2c_read
  5397 ;;		_i2c_rep_start
  5398 ;;		_i2c_start
  5399 ;;		_i2c_stop
  5400 ;;		_i2c_write
  5401 ;; This function is called by:
  5402 ;;		_get_time
  5403 ;;		_init_ds1307
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text30
  5408   001F3E                     __ptext30:
  5409                           	callstack 0
  5410   001F3E                     _read_ds1307:
  5411                           	callstack 24
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;incstack = 0
  5415                           ;read_ds1307@address stored from wreg
  5416   001F3E  6E02               	movwf	read_ds1307@address^0,c
  5417   001F40                     
  5418                           ;ds1307.c: 55: unsigned char read_ds1307(unsigned char address);ds1307.c: 56: {;ds1307.c
      +                          : 57:  unsigned char data;;ds1307.c: 59:  i2c_start();
  5419   001F40  EC48  F010         	call	_i2c_start	;wreg free
  5420   001F44                     
  5421                           ;ds1307.c: 60:  i2c_write(0xD0);
  5422   001F44  0ED0               	movlw	208
  5423   001F46  EC2E  F010         	call	_i2c_write
  5424   001F4A                     
  5425                           ;ds1307.c: 61:  i2c_write(address);
  5426   001F4A  5002               	movf	read_ds1307@address^0,w,c
  5427   001F4C  EC2E  F010         	call	_i2c_write
  5428   001F50                     
  5429                           ;ds1307.c: 62:  i2c_rep_start();
  5430   001F50  EC4C  F010         	call	_i2c_rep_start	;wreg free
  5431   001F54                     
  5432                           ;ds1307.c: 63:  i2c_write(0xD1);
  5433   001F54  0ED1               	movlw	209
  5434   001F56  EC2E  F010         	call	_i2c_write
  5435                           
  5436                           ;ds1307.c: 64:  data = i2c_read();
  5437   001F5A  EC34  F010         	call	_i2c_read	;wreg free
  5438   001F5E  6E03               	movwf	read_ds1307@data^0,c
  5439   001F60                     
  5440                           ;ds1307.c: 65:  i2c_stop();
  5441   001F60  EC44  F010         	call	_i2c_stop	;wreg free
  5442                           
  5443                           ;ds1307.c: 67:  return data;
  5444   001F64  5003               	movf	read_ds1307@data^0,w,c
  5445   001F66  0012               	return		;funcret
  5446   001F68                     __end_of_read_ds1307:
  5447                           	callstack 0
  5448                           
  5449 ;; *************** function _i2c_write *****************
  5450 ;; Defined at:
  5451 ;;		line 55 in file "i2c.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  data            1    wreg     unsigned char 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;  data            1    0[COMRAM] unsigned char 
  5456 ;; Return value:  Size  Location     Type
  5457 ;;                  1    wreg      void 
  5458 ;; Registers used:
  5459 ;;		wreg, cstack
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5465 ;;      Params:         0       0       0       0       0       0       0
  5466 ;;      Locals:         1       0       0       0       0       0       0
  5467 ;;      Temps:          0       0       0       0       0       0       0
  5468 ;;      Totals:         1       0       0       0       0       0       0
  5469 ;;Total ram usage:        1 bytes
  5470 ;; Hardware stack levels used: 1
  5471 ;; Hardware stack levels required when called: 2
  5472 ;; This function calls:
  5473 ;;		_i2c_idle
  5474 ;; This function is called by:
  5475 ;;		_write_ds1307
  5476 ;;		_read_ds1307
  5477 ;;		_write_external_eeprom
  5478 ;;		_read_external_eeprom
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           	psect	text31
  5483   00205C                     __ptext31:
  5484                           	callstack 0
  5485   00205C                     _i2c_write:
  5486                           	callstack 25
  5487                           
  5488                           ;incstack = 0
  5489                           ;i2c_write@data stored from wreg
  5490   00205C  6E01               	movwf	i2c_write@data^0,c
  5491   00205E                     
  5492                           ;i2c.c: 55: void i2c_write(unsigned char data);i2c.c: 56: {;i2c.c: 57:  SSPBUF = data;
  5493   00205E  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  5494   002062                     
  5495                           ;i2c.c: 58:  i2c_idle();
  5496   002062  EC15  F010         	call	_i2c_idle	;wreg free
  5497   002066  0012               	return		;funcret
  5498   002068                     __end_of_i2c_write:
  5499                           	callstack 0
  5500                           
  5501 ;; *************** function _i2c_stop *****************
  5502 ;; Defined at:
  5503 ;;		line 43 in file "i2c.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;		None
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      void 
  5510 ;; Registers used:
  5511 ;;		cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5517 ;;      Params:         0       0       0       0       0       0       0
  5518 ;;      Locals:         0       0       0       0       0       0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0
  5520 ;;      Totals:         0       0       0       0       0       0       0
  5521 ;;Total ram usage:        0 bytes
  5522 ;; Hardware stack levels used: 1
  5523 ;; Hardware stack levels required when called: 2
  5524 ;; This function calls:
  5525 ;;		_i2c_idle
  5526 ;; This function is called by:
  5527 ;;		_write_ds1307
  5528 ;;		_read_ds1307
  5529 ;;		_write_external_eeprom
  5530 ;;		_read_external_eeprom
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text32
  5535   002088                     __ptext32:
  5536                           	callstack 0
  5537   002088                     _i2c_stop:
  5538                           	callstack 25
  5539   002088                     
  5540                           ;i2c.c: 45:  PEN = 1;
  5541   002088  84C5               	bsf	4037,2,c	;volatile
  5542   00208A                     
  5543                           ;i2c.c: 46:  i2c_idle();
  5544   00208A  EC15  F010         	call	_i2c_idle	;wreg free
  5545   00208E  0012               	return		;funcret
  5546   002090                     __end_of_i2c_stop:
  5547                           	callstack 0
  5548                           
  5549 ;; *************** function _i2c_start *****************
  5550 ;; Defined at:
  5551 ;;		line 37 in file "i2c.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;		None
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;		None
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      void 
  5558 ;; Registers used:
  5559 ;;		cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5565 ;;      Params:         0       0       0       0       0       0       0
  5566 ;;      Locals:         0       0       0       0       0       0       0
  5567 ;;      Temps:          0       0       0       0       0       0       0
  5568 ;;      Totals:         0       0       0       0       0       0       0
  5569 ;;Total ram usage:        0 bytes
  5570 ;; Hardware stack levels used: 1
  5571 ;; Hardware stack levels required when called: 2
  5572 ;; This function calls:
  5573 ;;		_i2c_idle
  5574 ;; This function is called by:
  5575 ;;		_write_ds1307
  5576 ;;		_read_ds1307
  5577 ;;		_write_external_eeprom
  5578 ;;		_read_external_eeprom
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text33
  5583   002090                     __ptext33:
  5584                           	callstack 0
  5585   002090                     _i2c_start:
  5586                           	callstack 25
  5587   002090                     
  5588                           ;i2c.c: 39:  SEN = 1;
  5589   002090  80C5               	bsf	4037,0,c	;volatile
  5590   002092                     
  5591                           ;i2c.c: 40:  i2c_idle();
  5592   002092  EC15  F010         	call	_i2c_idle	;wreg free
  5593   002096  0012               	return		;funcret
  5594   002098                     __end_of_i2c_start:
  5595                           	callstack 0
  5596                           
  5597 ;; *************** function _i2c_rep_start *****************
  5598 ;; Defined at:
  5599 ;;		line 49 in file "i2c.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1    wreg      void 
  5606 ;; Registers used:
  5607 ;;		cstack
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5613 ;;      Params:         0       0       0       0       0       0       0
  5614 ;;      Locals:         0       0       0       0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0       0       0
  5616 ;;      Totals:         0       0       0       0       0       0       0
  5617 ;;Total ram usage:        0 bytes
  5618 ;; Hardware stack levels used: 1
  5619 ;; Hardware stack levels required when called: 2
  5620 ;; This function calls:
  5621 ;;		_i2c_idle
  5622 ;; This function is called by:
  5623 ;;		_read_ds1307
  5624 ;;		_read_external_eeprom
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text34
  5629   002098                     __ptext34:
  5630                           	callstack 0
  5631   002098                     _i2c_rep_start:
  5632                           	callstack 25
  5633   002098                     
  5634                           ;i2c.c: 51: 
  5635   002098  82C5               	bsf	4037,1,c	;volatile
  5636   00209A                     
  5637                           ;i2c.c: 52:  i2c_idle();
  5638   00209A  EC15  F010         	call	_i2c_idle	;wreg free
  5639   00209E  0012               	return		;funcret
  5640   0020A0                     __end_of_i2c_rep_start:
  5641                           	callstack 0
  5642                           
  5643 ;; *************** function _i2c_read *****************
  5644 ;; Defined at:
  5645 ;;		line 73 in file "i2c.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;		None
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;		None
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      unsigned char 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5659 ;;      Params:         0       0       0       0       0       0       0
  5660 ;;      Locals:         0       0       0       0       0       0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0
  5662 ;;      Totals:         0       0       0       0       0       0       0
  5663 ;;Total ram usage:        0 bytes
  5664 ;; Hardware stack levels used: 1
  5665 ;; Hardware stack levels required when called: 3
  5666 ;; This function calls:
  5667 ;;		_i2c_no_ack
  5668 ;;		_i2c_rx_mode
  5669 ;; This function is called by:
  5670 ;;		_read_ds1307
  5671 ;;		_read_external_eeprom
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text35
  5676   002068                     __ptext35:
  5677                           	callstack 0
  5678   002068                     _i2c_read:
  5679                           	callstack 24
  5680   002068                     
  5681                           ;i2c.c: 75:  i2c_rx_mode();
  5682   002068  EC50  F010         	call	_i2c_rx_mode	;wreg free
  5683                           
  5684                           ;i2c.c: 76:  i2c_no_ack();
  5685   00206C  EC54  F010         	call	_i2c_no_ack	;wreg free
  5686   002070                     
  5687                           ;i2c.c: 78:  return SSPBUF;
  5688   002070  50C9               	movf	201,w,c	;volatile
  5689   002072  0012               	return		;funcret
  5690   002074                     __end_of_i2c_read:
  5691                           	callstack 0
  5692                           
  5693 ;; *************** function _i2c_rx_mode *****************
  5694 ;; Defined at:
  5695 ;;		line 61 in file "i2c.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;		None
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;		None
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5709 ;;      Params:         0       0       0       0       0       0       0
  5710 ;;      Locals:         0       0       0       0       0       0       0
  5711 ;;      Temps:          0       0       0       0       0       0       0
  5712 ;;      Totals:         0       0       0       0       0       0       0
  5713 ;;Total ram usage:        0 bytes
  5714 ;; Hardware stack levels used: 1
  5715 ;; Hardware stack levels required when called: 2
  5716 ;; This function calls:
  5717 ;;		_i2c_idle
  5718 ;; This function is called by:
  5719 ;;		_i2c_read
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text36
  5724   0020A0                     __ptext36:
  5725                           	callstack 0
  5726   0020A0                     _i2c_rx_mode:
  5727                           	callstack 24
  5728   0020A0                     
  5729                           ;i2c.c: 63:  RCEN = 1;
  5730   0020A0  86C5               	bsf	4037,3,c	;volatile
  5731   0020A2                     
  5732                           ;i2c.c: 64:  i2c_idle();
  5733   0020A2  EC15  F010         	call	_i2c_idle	;wreg free
  5734   0020A6  0012               	return		;funcret
  5735   0020A8                     __end_of_i2c_rx_mode:
  5736                           	callstack 0
  5737                           
  5738 ;; *************** function _i2c_idle *****************
  5739 ;; Defined at:
  5740 ;;		line 23 in file "i2c.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;		None
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;		None
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      void 
  5747 ;; Registers used:
  5748 ;;		None
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5754 ;;      Params:         0       0       0       0       0       0       0
  5755 ;;      Locals:         0       0       0       0       0       0       0
  5756 ;;      Temps:          0       0       0       0       0       0       0
  5757 ;;      Totals:         0       0       0       0       0       0       0
  5758 ;;Total ram usage:        0 bytes
  5759 ;; Hardware stack levels used: 1
  5760 ;; Hardware stack levels required when called: 1
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		_i2c_start
  5765 ;;		_i2c_stop
  5766 ;;		_i2c_rep_start
  5767 ;;		_i2c_write
  5768 ;;		_i2c_rx_mode
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           	psect	text37
  5773   00202A                     __ptext37:
  5774                           	callstack 0
  5775   00202A                     _i2c_idle:
  5776                           	callstack 25
  5777   00202A                     l492:
  5778   00202A  A69E               	btfss	3998,3,c	;volatile
  5779   00202C  EF1A  F010         	goto	u1271
  5780   002030  EF1C  F010         	goto	u1270
  5781   002034                     u1271:
  5782   002034  EF15  F010         	goto	l492
  5783   002038                     u1270:
  5784   002038                     
  5785                           ;i2c.c: 26:  SSPIF = 0;
  5786   002038  969E               	bcf	3998,3,c	;volatile
  5787   00203A  0012               	return		;funcret
  5788   00203C                     __end_of_i2c_idle:
  5789                           	callstack 0
  5790                           
  5791 ;; *************** function _i2c_no_ack *****************
  5792 ;; Defined at:
  5793 ;;		line 67 in file "i2c.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;		None
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  1    wreg      void 
  5800 ;; Registers used:
  5801 ;;		None
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5807 ;;      Params:         0       0       0       0       0       0       0
  5808 ;;      Locals:         0       0       0       0       0       0       0
  5809 ;;      Temps:          0       0       0       0       0       0       0
  5810 ;;      Totals:         0       0       0       0       0       0       0
  5811 ;;Total ram usage:        0 bytes
  5812 ;; Hardware stack levels used: 1
  5813 ;; Hardware stack levels required when called: 1
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		_i2c_read
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           	psect	text38
  5822   0020A8                     __ptext38:
  5823                           	callstack 0
  5824   0020A8                     _i2c_no_ack:
  5825                           	callstack 25
  5826   0020A8                     
  5827                           ;i2c.c: 69:  ACKDT = 1;
  5828   0020A8  8AC5               	bsf	4037,5,c	;volatile
  5829                           
  5830                           ;i2c.c: 70:  ACKEN = 1;
  5831   0020AA  88C5               	bsf	4037,4,c	;volatile
  5832   0020AC  0012               	return		;funcret
  5833   0020AE                     __end_of_i2c_no_ack:
  5834                           	callstack 0
  5835                           
  5836 ;; *************** function _display_times *****************
  5837 ;; Defined at:
  5838 ;;		line 26 in file "car_black_box.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;		None
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5852 ;;      Params:         0       0       0       0       0       0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0
  5855 ;;      Totals:         0       0       0       0       0       0       0
  5856 ;;Total ram usage:        0 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; Hardware stack levels required when called: 3
  5859 ;; This function calls:
  5860 ;;		_clcd_print
  5861 ;; This function is called by:
  5862 ;;		_display_time
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           	psect	text39
  5867   00203C                     __ptext39:
  5868                           	callstack 0
  5869   00203C                     _display_times:
  5870                           	callstack 25
  5871   00203C                     
  5872                           ;car_black_box.c: 28:  clcd_print(time, (0xC0 + (2)));
  5873   00203C  0E7F               	movlw	low _time
  5874   00203E  6E03               	movwf	clcd_print@data^0,c
  5875   002040  0E00               	movlw	high _time
  5876   002042  6E04               	movwf	(clcd_print@data+1)^0,c
  5877   002044  0EC2               	movlw	194
  5878   002046  6E05               	movwf	clcd_print@addr^0,c
  5879   002048  ECDE  F00D         	call	_clcd_print	;wreg free
  5880   00204C  0012               	return		;funcret
  5881   00204E                     __end_of_display_times:
  5882                           	callstack 0
  5883                           
  5884 ;; *************** function _clcd_print *****************
  5885 ;; Defined at:
  5886 ;;		line 60 in file "clcd.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  data            2    2[COMRAM] PTR const unsigned char 
  5889 ;;		 -> STR_23(14), STR_22(14), STR_21(14), STR_20(14), 
  5890 ;;		 -> STR_19(14), STR_18(5), STR_17(9), STR_16(15), 
  5891 ;;		 -> STR_15(17), STR_14(17), STR_13(17), STR_12(17), 
  5892 ;;		 -> STR_11(17), time(9), STR_10(16), STR_1(9), 
  5893 ;;  addr            1    4[COMRAM] unsigned char 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;		None
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  1    wreg      void 
  5898 ;; Registers used:
  5899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5905 ;;      Params:         3       0       0       0       0       0       0
  5906 ;;      Locals:         0       0       0       0       0       0       0
  5907 ;;      Temps:          0       0       0       0       0       0       0
  5908 ;;      Totals:         3       0       0       0       0       0       0
  5909 ;;Total ram usage:        3 bytes
  5910 ;; Hardware stack levels used: 1
  5911 ;; Hardware stack levels required when called: 2
  5912 ;; This function calls:
  5913 ;;		_clcd_write
  5914 ;; This function is called by:
  5915 ;;		_main
  5916 ;;		_display_dashboard
  5917 ;;		_display_times
  5918 ;;		_logscreen
  5919 ;;		_timeleft
  5920 ;;		_print
  5921 ;;		_scrolllog
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text40
  5926   001BBC                     __ptext40:
  5927                           	callstack 0
  5928   001BBC                     _clcd_print:
  5929                           	callstack 26
  5930   001BBC                     
  5931                           ;clcd.c: 60: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 61: 
      +                          {;clcd.c: 62:  clcd_write(addr, 0);
  5932   001BBC  0E00               	movlw	0
  5933   001BBE  6E01               	movwf	clcd_write@control_bit^0,c
  5934   001BC0  5005               	movf	clcd_print@addr^0,w,c
  5935   001BC2  EC86  F00F         	call	_clcd_write
  5936                           
  5937                           ;clcd.c: 63:  while (*data != '\0')
  5938   001BC6  EFFB  F00D         	goto	l2301
  5939   001BCA                     l2297:
  5940                           
  5941                           ;clcd.c: 64:  {;clcd.c: 65:   clcd_write(*data++, 1);
  5942   001BCA  0E01               	movlw	1
  5943   001BCC  6E01               	movwf	clcd_write@control_bit^0,c
  5944   001BCE  C003  FFF6         	movff	clcd_print@data,tblptrl
  5945   001BD2  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  5946   001BD6  6AF8               	clrf	tblptru,c
  5947   001BD8  0E05               	movlw	(high __ramtop+-1)
  5948   001BDA  64F7               	cpfsgt	tblptrh,c
  5949   001BDC  D003               	bra	u1307
  5950   001BDE  0008               	tblrd		*
  5951   001BE0  50F5               	movf	tablat,w,c
  5952   001BE2  D005               	bra	u1300
  5953   001BE4                     u1307:
  5954   001BE4  CFF6 FFE9          	movff	tblptrl,fsr0l
  5955   001BE8  CFF7 FFEA          	movff	tblptrh,fsr0h
  5956   001BEC  50EF               	movf	indf0,w,c
  5957   001BEE                     u1300:
  5958   001BEE  EC86  F00F         	call	_clcd_write
  5959   001BF2  4A03               	infsnz	clcd_print@data^0,f,c
  5960   001BF4  2A04               	incf	(clcd_print@data+1)^0,f,c
  5961   001BF6                     l2301:
  5962                           
  5963                           ;clcd.c: 63:  while (*data != '\0')
  5964   001BF6  C003  FFF6         	movff	clcd_print@data,tblptrl
  5965   001BFA  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  5966   001BFE  6AF8               	clrf	tblptru,c
  5967   001C00  0E05               	movlw	(high __ramtop+-1)
  5968   001C02  64F7               	cpfsgt	tblptrh,c
  5969   001C04  D003               	bra	u1317
  5970   001C06  0008               	tblrd		*
  5971   001C08  50F5               	movf	tablat,w,c
  5972   001C0A  D005               	bra	u1310
  5973   001C0C                     u1317:
  5974   001C0C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5975   001C10  CFF7 FFEA          	movff	tblptrh,fsr0h
  5976   001C14  50EF               	movf	indf0,w,c
  5977   001C16                     u1310:
  5978   001C16  0900               	iorlw	0
  5979   001C18  A4D8               	btfss	status,2,c
  5980   001C1A  EF11  F00E         	goto	u1321
  5981   001C1E  EF13  F00E         	goto	u1320
  5982   001C22                     u1321:
  5983   001C22  EFE5  F00D         	goto	l2297
  5984   001C26                     u1320:
  5985   001C26  0012               	return		;funcret
  5986   001C28                     __end_of_clcd_print:
  5987                           	callstack 0
  5988                           
  5989 ;; *************** function _display_speed *****************
  5990 ;; Defined at:
  5991 ;;		line 80 in file "car_black_box.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  usadc           2   16[COMRAM] unsigned short 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;		None
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  1    wreg      void 
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0, cstack
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6005 ;;      Params:         2       0       0       0       0       0       0
  6006 ;;      Locals:         0       0       0       0       0       0       0
  6007 ;;      Temps:          0       0       0       0       0       0       0
  6008 ;;      Totals:         2       0       0       0       0       0       0
  6009 ;;Total ram usage:        2 bytes
  6010 ;; Hardware stack levels used: 1
  6011 ;; Hardware stack levels required when called: 3
  6012 ;; This function calls:
  6013 ;;		___awmod
  6014 ;;		___lwdiv
  6015 ;;		_clcd_putch
  6016 ;; This function is called by:
  6017 ;;		_display_dashboard
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text41
  6022   001DB0                     __ptext41:
  6023                           	callstack 0
  6024   001DB0                     _display_speed:
  6025                           	callstack 26
  6026   001DB0                     
  6027                           ;car_black_box.c: 81:         clcd_putch((unsigned char)(usadc/10)%10+48, (0xC0 + (14)))
      +                          ;
  6028   001DB0  0ECE               	movlw	206
  6029   001DB2  6E0F               	movwf	clcd_putch@addr^0,c
  6030   001DB4  0E00               	movlw	0
  6031   001DB6  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  6032   001DB8  0E0A               	movlw	10
  6033   001DBA  6E03               	movwf	___lwdiv@divisor^0,c
  6034   001DBC  C011  F001         	movff	display_speed@usadc,___lwdiv@dividend
  6035   001DC0  C012  F002         	movff	display_speed@usadc+1,___lwdiv@dividend+1
  6036   001DC4  EC6E  F00D         	call	___lwdiv	;wreg free
  6037   001DC8  5001               	movf	?___lwdiv^0,w,c
  6038   001DCA  6E09               	movwf	___awmod@dividend^0,c
  6039   001DCC  6A0A               	clrf	(___awmod@dividend+1)^0,c
  6040   001DCE  0E00               	movlw	0
  6041   001DD0  6E0C               	movwf	(___awmod@divisor+1)^0,c
  6042   001DD2  0E0A               	movlw	10
  6043   001DD4  6E0B               	movwf	___awmod@divisor^0,c
  6044   001DD6  ECB6  F00B         	call	___awmod	;wreg free
  6045   001DDA  5009               	movf	?___awmod^0,w,c
  6046   001DDC  0F30               	addlw	48
  6047   001DDE  ECFE  F00F         	call	_clcd_putch
  6048                           
  6049                           ;car_black_box.c: 82:         clcd_putch((unsigned char)usadc%10+48, (0xC0 + (15)));
  6050   001DE2  0ECF               	movlw	207
  6051   001DE4  6E0F               	movwf	clcd_putch@addr^0,c
  6052   001DE6  C011  F009         	movff	display_speed@usadc,___awmod@dividend
  6053   001DEA  6A0A               	clrf	(___awmod@dividend+1)^0,c
  6054   001DEC  0E00               	movlw	0
  6055   001DEE  6E0C               	movwf	(___awmod@divisor+1)^0,c
  6056   001DF0  0E0A               	movlw	10
  6057   001DF2  6E0B               	movwf	___awmod@divisor^0,c
  6058   001DF4  ECB6  F00B         	call	___awmod	;wreg free
  6059   001DF8  5009               	movf	?___awmod^0,w,c
  6060   001DFA  0F30               	addlw	48
  6061   001DFC  ECFE  F00F         	call	_clcd_putch
  6062   001E00  0012               	return		;funcret
  6063   001E02                     __end_of_display_speed:
  6064                           	callstack 0
  6065                           
  6066 ;; *************** function _clcd_putch *****************
  6067 ;; Defined at:
  6068 ;;		line 69 in file "clcd.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  data            1    wreg     const unsigned char 
  6071 ;;  addr            1   14[COMRAM] unsigned char 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  data            1   15[COMRAM] const unsigned char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6083 ;;      Params:         1       0       0       0       0       0       0
  6084 ;;      Locals:         1       0       0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0
  6086 ;;      Totals:         2       0       0       0       0       0       0
  6087 ;;Total ram usage:        2 bytes
  6088 ;; Hardware stack levels used: 1
  6089 ;; Hardware stack levels required when called: 2
  6090 ;; This function calls:
  6091 ;;		_clcd_write
  6092 ;; This function is called by:
  6093 ;;		_display_dashboard
  6094 ;;		_gear_monitor
  6095 ;;		_display_speed
  6096 ;;		_logscreen
  6097 ;;		_timeleft
  6098 ;;		_print
  6099 ;;		_scrolllog
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text42
  6104   001FFC                     __ptext42:
  6105                           	callstack 0
  6106   001FFC                     _clcd_putch:
  6107                           	callstack 26
  6108                           
  6109                           ;incstack = 0
  6110                           ;clcd_putch@data stored from wreg
  6111   001FFC  6E10               	movwf	clcd_putch@data^0,c
  6112   001FFE                     
  6113                           ;clcd.c: 69: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 70: {
      +                          ;clcd.c: 71:  clcd_write(addr, 0);
  6114   001FFE  0E00               	movlw	0
  6115   002000  6E01               	movwf	clcd_write@control_bit^0,c
  6116   002002  500F               	movf	clcd_putch@addr^0,w,c
  6117   002004  EC86  F00F         	call	_clcd_write
  6118                           
  6119                           ;clcd.c: 72:  clcd_write(data, 1);
  6120   002008  0E01               	movlw	1
  6121   00200A  6E01               	movwf	clcd_write@control_bit^0,c
  6122   00200C  5010               	movf	clcd_putch@data^0,w,c
  6123   00200E  EC86  F00F         	call	_clcd_write
  6124   002012  0012               	return		;funcret
  6125   002014                     __end_of_clcd_putch:
  6126                           	callstack 0
  6127                           
  6128 ;; *************** function _clcd_write *****************
  6129 ;; Defined at:
  6130 ;;		line 3 in file "clcd.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  byte            1    wreg     unsigned char 
  6133 ;;  control_bit     1    0[COMRAM] unsigned char 
  6134 ;; Auto vars:     Size  Location     Type
  6135 ;;  byte            1    1[COMRAM] unsigned char 
  6136 ;; Return value:  Size  Location     Type
  6137 ;;                  1    wreg      void 
  6138 ;; Registers used:
  6139 ;;		wreg
  6140 ;; Tracked objects:
  6141 ;;		On entry : 0/0
  6142 ;;		On exit  : 0/0
  6143 ;;		Unchanged: 0/0
  6144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6145 ;;      Params:         1       0       0       0       0       0       0
  6146 ;;      Locals:         1       0       0       0       0       0       0
  6147 ;;      Temps:          0       0       0       0       0       0       0
  6148 ;;      Totals:         2       0       0       0       0       0       0
  6149 ;;Total ram usage:        2 bytes
  6150 ;; Hardware stack levels used: 1
  6151 ;; Hardware stack levels required when called: 1
  6152 ;; This function calls:
  6153 ;;		Nothing
  6154 ;; This function is called by:
  6155 ;;		_display_dashboard
  6156 ;;		_init_clcd
  6157 ;;		_clcd_print
  6158 ;;		_clcd_putch
  6159 ;;		_logscreen
  6160 ;;		_timeleft
  6161 ;;		_print
  6162 ;;		_scrolllog
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           	psect	text43
  6167   001F0C                     __ptext43:
  6168                           	callstack 0
  6169   001F0C                     _clcd_write:
  6170                           	callstack 27
  6171                           
  6172                           ;incstack = 0
  6173                           ;clcd_write@byte stored from wreg
  6174   001F0C  6E02               	movwf	clcd_write@byte^0,c
  6175   001F0E                     
  6176                           ;clcd.c: 3: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 4: {;
      +                          clcd.c: 5:  PORTCbits.RC1 = control_bit;
  6177   001F0E  B001               	btfsc	clcd_write@control_bit^0,0,c
  6178   001F10  D002               	bra	u1285
  6179   001F12  9282               	bcf	130,1,c	;volatile
  6180   001F14  D001               	bra	u1286
  6181   001F16                     u1285:
  6182   001F16  8282               	bsf	130,1,c	;volatile
  6183   001F18                     u1286:
  6184   001F18                     
  6185                           ;clcd.c: 6:  PORTD = byte;
  6186   001F18  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  6187   001F1C                     
  6188                           ;clcd.c: 9:  PORTCbits.RC2 = 1;
  6189   001F1C  8482               	bsf	130,2,c	;volatile
  6190   001F1E                     
  6191                           ;clcd.c: 10:  PORTCbits.RC2 = 0;
  6192   001F1E  9482               	bcf	130,2,c	;volatile
  6193   001F20                     
  6194                           ;clcd.c: 12:  TRISD7 = 1;
  6195   001F20  8E95               	bsf	3989,7,c	;volatile
  6196   001F22                     
  6197                           ;clcd.c: 13:  PORTCbits.RC0 = 1;
  6198   001F22  8082               	bsf	130,0,c	;volatile
  6199   001F24                     
  6200                           ;clcd.c: 14:  PORTCbits.RC1 = 0;
  6201   001F24  9282               	bcf	130,1,c	;volatile
  6202   001F26                     l2267:
  6203                           
  6204                           ;clcd.c: 17:  {;clcd.c: 18:   PORTCbits.RC2 = 1;
  6205   001F26  8482               	bsf	130,2,c	;volatile
  6206   001F28                     
  6207                           ;clcd.c: 19:   PORTCbits.RC2 = 0;
  6208   001F28  9482               	bcf	130,2,c	;volatile
  6209   001F2A                     
  6210                           ;clcd.c: 20:  } while (PORTDbits.RD7);
  6211   001F2A  BE83               	btfsc	131,7,c	;volatile
  6212   001F2C  EF9A  F00F         	goto	u1291
  6213   001F30  EF9C  F00F         	goto	u1290
  6214   001F34                     u1291:
  6215   001F34  EF93  F00F         	goto	l2267
  6216   001F38                     u1290:
  6217   001F38                     
  6218                           ;clcd.c: 22:  PORTCbits.RC0 = 0;
  6219   001F38  9082               	bcf	130,0,c	;volatile
  6220                           
  6221                           ;clcd.c: 23:  TRISD7 = 0x00;
  6222   001F3A  9E95               	bcf	3989,7,c	;volatile
  6223   001F3C  0012               	return		;funcret
  6224   001F3E                     __end_of_clcd_write:
  6225                           	callstack 0
  6226                           
  6227 ;; *************** function ___lwdiv *****************
  6228 ;; Defined at:
  6229 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;  dividend        2    0[COMRAM] unsigned int 
  6232 ;;  divisor         2    2[COMRAM] unsigned int 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  quotient        2    4[COMRAM] unsigned int 
  6235 ;;  counter         1    6[COMRAM] unsigned char 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  2    0[COMRAM] unsigned int 
  6238 ;; Registers used:
  6239 ;;		wreg, status,2, status,0
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6245 ;;      Params:         4       0       0       0       0       0       0
  6246 ;;      Locals:         3       0       0       0       0       0       0
  6247 ;;      Temps:          0       0       0       0       0       0       0
  6248 ;;      Totals:         7       0       0       0       0       0       0
  6249 ;;Total ram usage:        7 bytes
  6250 ;; Hardware stack levels used: 1
  6251 ;; Hardware stack levels required when called: 1
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_display_speed
  6256 ;;		_get_speed
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           	psect	text44
  6261   001ADC                     __ptext44:
  6262                           	callstack 0
  6263   001ADC                     ___lwdiv:
  6264                           	callstack 27
  6265   001ADC  0E00               	movlw	0
  6266   001ADE  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  6267   001AE0  0E00               	movlw	0
  6268   001AE2  6E05               	movwf	___lwdiv@quotient^0,c
  6269   001AE4  5003               	movf	___lwdiv@divisor^0,w,c
  6270   001AE6  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6271   001AE8  B4D8               	btfsc	status,2,c
  6272   001AEA  EF79  F00D         	goto	u1781
  6273   001AEE  EF7B  F00D         	goto	u1780
  6274   001AF2                     u1781:
  6275   001AF2  EFA3  F00D         	goto	l1033
  6276   001AF6                     u1780:
  6277   001AF6  0E01               	movlw	1
  6278   001AF8  6E07               	movwf	___lwdiv@counter^0,c
  6279   001AFA  EF83  F00D         	goto	l2641
  6280   001AFE                     l2639:
  6281   001AFE  90D8               	bcf	status,0,c
  6282   001B00  3603               	rlcf	___lwdiv@divisor^0,f,c
  6283   001B02  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6284   001B04  2A07               	incf	___lwdiv@counter^0,f,c
  6285   001B06                     l2641:
  6286   001B06  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  6287   001B08  EF88  F00D         	goto	u1791
  6288   001B0C  EF8A  F00D         	goto	u1790
  6289   001B10                     u1791:
  6290   001B10  EF7F  F00D         	goto	l2639
  6291   001B14                     u1790:
  6292   001B14                     l2643:
  6293   001B14  90D8               	bcf	status,0,c
  6294   001B16  3605               	rlcf	___lwdiv@quotient^0,f,c
  6295   001B18  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6296   001B1A  5003               	movf	___lwdiv@divisor^0,w,c
  6297   001B1C  5C01               	subwf	___lwdiv@dividend^0,w,c
  6298   001B1E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6299   001B20  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6300   001B22  A0D8               	btfss	status,0,c
  6301   001B24  EF96  F00D         	goto	u1801
  6302   001B28  EF98  F00D         	goto	u1800
  6303   001B2C                     u1801:
  6304   001B2C  EF9D  F00D         	goto	l2651
  6305   001B30                     u1800:
  6306   001B30  5003               	movf	___lwdiv@divisor^0,w,c
  6307   001B32  5E01               	subwf	___lwdiv@dividend^0,f,c
  6308   001B34  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6309   001B36  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6310   001B38  8005               	bsf	___lwdiv@quotient^0,0,c
  6311   001B3A                     l2651:
  6312   001B3A  90D8               	bcf	status,0,c
  6313   001B3C  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6314   001B3E  3203               	rrcf	___lwdiv@divisor^0,f,c
  6315   001B40  2E07               	decfsz	___lwdiv@counter^0,f,c
  6316   001B42  EF8A  F00D         	goto	l2643
  6317   001B46                     l1033:
  6318   001B46  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  6319   001B4A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6320   001B4E  0012               	return		;funcret
  6321   001B50                     __end_of___lwdiv:
  6322                           	callstack 0
  6323                           
  6324 ;; *************** function ___awmod *****************
  6325 ;; Defined at:
  6326 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  dividend        2    8[COMRAM] int 
  6329 ;;  divisor         2   10[COMRAM] int 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  sign            1   13[COMRAM] unsigned char 
  6332 ;;  counter         1   12[COMRAM] unsigned char 
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  2    8[COMRAM] int 
  6335 ;; Registers used:
  6336 ;;		wreg, status,2, status,0
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6342 ;;      Params:         4       0       0       0       0       0       0
  6343 ;;      Locals:         2       0       0       0       0       0       0
  6344 ;;      Temps:          0       0       0       0       0       0       0
  6345 ;;      Totals:         6       0       0       0       0       0       0
  6346 ;;Total ram usage:        6 bytes
  6347 ;; Hardware stack levels used: 1
  6348 ;; Hardware stack levels required when called: 1
  6349 ;; This function calls:
  6350 ;;		Nothing
  6351 ;; This function is called by:
  6352 ;;		_display_speed
  6353 ;;		_timeleft
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           	psect	text45
  6358   00176C                     __ptext45:
  6359                           	callstack 0
  6360   00176C                     ___awmod:
  6361                           	callstack 27
  6362   00176C  0E00               	movlw	0
  6363   00176E  6E0E               	movwf	___awmod@sign^0,c
  6364   001770  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  6365   001772  EFBF  F00B         	goto	u1650
  6366   001776  EFBD  F00B         	goto	u1651
  6367   00177A                     u1651:
  6368   00177A  EFC5  F00B         	goto	l2561
  6369   00177E                     u1650:
  6370   00177E  6C09               	negf	___awmod@dividend^0,c
  6371   001780  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  6372   001782  B0D8               	btfsc	status,0,c
  6373   001784  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  6374   001786  0E01               	movlw	1
  6375   001788  6E0E               	movwf	___awmod@sign^0,c
  6376   00178A                     l2561:
  6377   00178A  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  6378   00178C  EFCC  F00B         	goto	u1660
  6379   001790  EFCA  F00B         	goto	u1661
  6380   001794                     u1661:
  6381   001794  EFD0  F00B         	goto	l2565
  6382   001798                     u1660:
  6383   001798  6C0B               	negf	___awmod@divisor^0,c
  6384   00179A  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  6385   00179C  B0D8               	btfsc	status,0,c
  6386   00179E  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  6387   0017A0                     l2565:
  6388   0017A0  500B               	movf	___awmod@divisor^0,w,c
  6389   0017A2  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  6390   0017A4  B4D8               	btfsc	status,2,c
  6391   0017A6  EFD7  F00B         	goto	u1671
  6392   0017AA  EFD9  F00B         	goto	u1670
  6393   0017AE                     u1671:
  6394   0017AE  EFFD  F00B         	goto	l2581
  6395   0017B2                     u1670:
  6396   0017B2  0E01               	movlw	1
  6397   0017B4  6E0D               	movwf	___awmod@counter^0,c
  6398   0017B6  EFE1  F00B         	goto	l2571
  6399   0017BA                     l2569:
  6400   0017BA  90D8               	bcf	status,0,c
  6401   0017BC  360B               	rlcf	___awmod@divisor^0,f,c
  6402   0017BE  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  6403   0017C0  2A0D               	incf	___awmod@counter^0,f,c
  6404   0017C2                     l2571:
  6405   0017C2  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  6406   0017C4  EFE6  F00B         	goto	u1681
  6407   0017C8  EFE8  F00B         	goto	u1680
  6408   0017CC                     u1681:
  6409   0017CC  EFDD  F00B         	goto	l2569
  6410   0017D0                     u1680:
  6411   0017D0                     l2573:
  6412   0017D0  500B               	movf	___awmod@divisor^0,w,c
  6413   0017D2  5C09               	subwf	___awmod@dividend^0,w,c
  6414   0017D4  500C               	movf	(___awmod@divisor+1)^0,w,c
  6415   0017D6  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  6416   0017D8  A0D8               	btfss	status,0,c
  6417   0017DA  EFF1  F00B         	goto	u1691
  6418   0017DE  EFF3  F00B         	goto	u1690
  6419   0017E2                     u1691:
  6420   0017E2  EFF7  F00B         	goto	l2577
  6421   0017E6                     u1690:
  6422   0017E6  500B               	movf	___awmod@divisor^0,w,c
  6423   0017E8  5E09               	subwf	___awmod@dividend^0,f,c
  6424   0017EA  500C               	movf	(___awmod@divisor+1)^0,w,c
  6425   0017EC  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  6426   0017EE                     l2577:
  6427   0017EE  90D8               	bcf	status,0,c
  6428   0017F0  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  6429   0017F2  320B               	rrcf	___awmod@divisor^0,f,c
  6430   0017F4  2E0D               	decfsz	___awmod@counter^0,f,c
  6431   0017F6  EFE8  F00B         	goto	l2573
  6432   0017FA                     l2581:
  6433   0017FA  500E               	movf	___awmod@sign^0,w,c
  6434   0017FC  B4D8               	btfsc	status,2,c
  6435   0017FE  EF03  F00C         	goto	u1701
  6436   001802  EF05  F00C         	goto	u1700
  6437   001806                     u1701:
  6438   001806  EF09  F00C         	goto	l2585
  6439   00180A                     u1700:
  6440   00180A  6C09               	negf	___awmod@dividend^0,c
  6441   00180C  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  6442   00180E  B0D8               	btfsc	status,0,c
  6443   001810  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  6444   001812                     l2585:
  6445   001812  C009  F009         	movff	___awmod@dividend,?___awmod
  6446   001816  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  6447   00181A  0012               	return		;funcret
  6448   00181C                     __end_of___awmod:
  6449                           	callstack 0
  6450                           
  6451 ;; *************** function _isr *****************
  6452 ;; Defined at:
  6453 ;;		line 3 in file "isr.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;		None
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;		None
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg, status,2, status,0
  6462 ;; Tracked objects:
  6463 ;;		On entry : 0/0
  6464 ;;		On exit  : 0/0
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6467 ;;      Params:         0       0       0       0       0       0       0
  6468 ;;      Locals:         0       0       0       0       0       0       0
  6469 ;;      Temps:          0       0       0       0       0       0       0
  6470 ;;      Totals:         0       0       0       0       0       0       0
  6471 ;;Total ram usage:        0 bytes
  6472 ;; Hardware stack levels used: 1
  6473 ;; This function calls:
  6474 ;;		Nothing
  6475 ;; This function is called by:
  6476 ;;		Interrupt level 2
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	intcode
  6481   000008                     __pintcode:
  6482                           	callstack 0
  6483   000008                     _isr:
  6484                           	callstack 23
  6485                           
  6486                           ;incstack = 0
  6487   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6488   00000A  ED01  F00F         	call	int_func,f	;refresh shadow registers
  6489                           
  6490                           	psect	intcode_body
  6491   001E02                     __pintcode_body:
  6492                           	callstack 23
  6493   001E02                     int_func:
  6494                           	callstack 23
  6495   001E02  0006               	pop		; remove dummy address from shadow register refresh
  6496   001E04                     
  6497                           ;isr.c: 5:     static unsigned int count = 0;;isr.c: 6:     if (TMR0IF == 1)
  6498   001E04  A4F2               	btfss	4082,2,c	;volatile
  6499   001E06  EF07  F00F         	goto	i2u240_41
  6500   001E0A  EF09  F00F         	goto	i2u240_40
  6501   001E0E                     i2u240_41:
  6502   001E0E  EF25  F00F         	goto	i2l248
  6503   001E12                     i2u240_40:
  6504   001E12                     
  6505                           ;isr.c: 7:     {;isr.c: 8:         TMR0 = TMR0 + 8;
  6506   001E12  0E08               	movlw	8
  6507   001E14  24D6               	addwf	214,w,c	;volatile
  6508   001E16  6ED6               	movwf	214,c	;volatile
  6509   001E18  0E00               	movlw	0
  6510   001E1A  20D7               	addwfc	215,w,c	;volatile
  6511   001E1C  6ED7               	movwf	215,c	;volatile
  6512                           
  6513                           ;isr.c: 9:         if (++count == 20000)
  6514   001E1E  4A4D               	infsnz	isr@count^0,f,c
  6515   001E20  2A4E               	incf	(isr@count+1)^0,f,c
  6516   001E22  0E20               	movlw	32
  6517   001E24  184D               	xorwf	isr@count^0,w,c
  6518   001E26  E107               	bnz	i2u241_41
  6519   001E28  0E4E               	movlw	78
  6520   001E2A  184E               	xorwf	(isr@count+1)^0,w,c
  6521   001E2C  A4D8               	btfss	status,2,c
  6522   001E2E  EF1B  F00F         	goto	i2u241_41
  6523   001E32  EF1D  F00F         	goto	i2u241_40
  6524   001E36                     i2u241_41:
  6525   001E36  EF24  F00F         	goto	i2l3157
  6526   001E3A                     i2u241_40:
  6527   001E3A                     
  6528                           ;isr.c: 10:         {;isr.c: 11:             count=0;
  6529   001E3A  0E00               	movlw	0
  6530   001E3C  6E4E               	movwf	(isr@count+1)^0,c
  6531   001E3E  0E00               	movlw	0
  6532   001E40  6E4D               	movwf	isr@count^0,c
  6533   001E42                     
  6534                           ;isr.c: 12:             sec--;
  6535   001E42  0656               	decf	_sec^0,f,c
  6536   001E44  A0D8               	btfss	status,0,c
  6537   001E46  0657               	decf	(_sec+1)^0,f,c
  6538   001E48                     i2l3157:
  6539                           
  6540                           ;isr.c: 15:         TMR0IF = 0;
  6541   001E48  94F2               	bcf	4082,2,c	;volatile
  6542   001E4A                     i2l248:
  6543   001E4A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6544   001E4C  0011               	retfie		f
  6545   001E4E                     __end_of_isr:
  6546                           	callstack 0
  6547                           
  6548                           	psect	rparam
  6549   000000                     
  6550                           	psect	temp
  6551   00005D                     btemp:
  6552                           	callstack 0
  6553   00005D                     	ds	1
  6554   000000                     int$flags	set	btemp
  6555   000000                     wtemp8	set	btemp+1
  6556   000000                     ttemp5	set	btemp+1
  6557   000000                     ttemp6	set	btemp+4
  6558   000000                     ttemp7	set	btemp+8
  6559                           
  6560                           	psect	config
  6561                           
  6562                           ; Padding undefined space
  6563   300000                     	org	3145728
  6564   300000  FF                 	db	255
  6565                           
  6566                           ;Config register CONFIG1H @ 0x300001
  6567                           ;	Oscillator Selection bits
  6568                           ;	OSC = RCIO, External RC oscillator, port function on RA6
  6569                           ;	Fail-Safe Clock Monitor Enable bit
  6570                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6571                           ;	Internal/External Oscillator Switchover bit
  6572                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6573   300001                     	org	3145729
  6574   300001  07                 	db	7
  6575                           
  6576                           ;Config register CONFIG2L @ 0x300002
  6577                           ;	Power-up Timer Enable bit
  6578                           ;	PWRT = OFF, PWRT disabled
  6579                           ;	Brown-out Reset Enable bits
  6580                           ;	BOREN = BOHW, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6581                           ;	Brown-out Reset Voltage bits
  6582                           ;	BORV = 3, VBOR set to 2.1V
  6583   300002                     	org	3145730
  6584   300002  1F                 	db	31
  6585                           
  6586                           ;Config register CONFIG2H @ 0x300003
  6587                           ;	Watchdog Timer Enable bit
  6588                           ;	WDT = ON, WDT enabled
  6589                           ;	Watchdog Timer Postscale Select bits
  6590                           ;	WDTPS = 32768, 1:32768
  6591   300003                     	org	3145731
  6592   300003  1F                 	db	31
  6593                           
  6594                           ; Padding undefined space
  6595   300004                     	org	3145732
  6596   300004  FF                 	db	255
  6597                           
  6598                           ;Config register CONFIG3H @ 0x300005
  6599                           ;	PORTB A/D Enable bit
  6600                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  6601                           ;	Low-Power Timer 1 Oscillator Enable bit
  6602                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6603                           ;	MCLR Pin Enable bit
  6604                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6605   300005                     	org	3145733
  6606   300005  82                 	db	130
  6607                           
  6608                           ;Config register CONFIG4L @ 0x300006
  6609                           ;	Stack Full/Underflow Reset Enable bit
  6610                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6611                           ;	Single-Supply ICSP Enable bit
  6612                           ;	LVP = ON, Single-Supply ICSP enabled
  6613                           ;	Boot Block Size Select bit
  6614                           ;	BBSIZ = 1024, 1K words (2K bytes) boot block
  6615                           ;	Extended Instruction Set Enable bit
  6616                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6617                           ;	Background Debugger Enable bit
  6618                           ;	DEBUG = 0x1, unprogrammed default
  6619   300006                     	org	3145734
  6620   300006  85                 	db	133
  6621                           
  6622                           ; Padding undefined space
  6623   300007                     	org	3145735
  6624   300007  FF                 	db	255
  6625                           
  6626                           ;Config register CONFIG5L @ 0x300008
  6627                           ;	Code Protection bit
  6628                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6629                           ;	Code Protection bit
  6630                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6631                           ;	Code Protection bit
  6632                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6633                           ;	Code Protection bit
  6634                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6635   300008                     	org	3145736
  6636   300008  0F                 	db	15
  6637                           
  6638                           ;Config register CONFIG5H @ 0x300009
  6639                           ;	Boot Block Code Protection bit
  6640                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6641                           ;	Data EEPROM Code Protection bit
  6642                           ;	CPD = OFF, Data EEPROM not code-protected
  6643   300009                     	org	3145737
  6644   300009  C0                 	db	192
  6645                           
  6646                           ;Config register CONFIG6L @ 0x30000A
  6647                           ;	Write Protection bit
  6648                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6649                           ;	Write Protection bit
  6650                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6651                           ;	Write Protection bit
  6652                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6653                           ;	Write Protection bit
  6654                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6655   30000A                     	org	3145738
  6656   30000A  0F                 	db	15
  6657                           
  6658                           ;Config register CONFIG6H @ 0x30000B
  6659                           ;	Configuration Register Write Protection bit
  6660                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6661                           ;	Boot Block Write Protection bit
  6662                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  6663                           ;	Data EEPROM Write Protection bit
  6664                           ;	WRTD = OFF, Data EEPROM not write-protected
  6665   30000B                     	org	3145739
  6666   30000B  E0                 	db	224
  6667                           
  6668                           ;Config register CONFIG7L @ 0x30000C
  6669                           ;	Table Read Protection bit
  6670                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6671                           ;	Table Read Protection bit
  6672                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6673                           ;	Table Read Protection bit
  6674                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6675                           ;	Table Read Protection bit
  6676                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6677   30000C                     	org	3145740
  6678   30000C  0F                 	db	15
  6679                           
  6680                           ;Config register CONFIG7H @ 0x30000D
  6681                           ;	Boot Block Table Read Protection bit
  6682                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6683   30000D                     	org	3145741
  6684   30000D  40                 	db	64
  6685                           tosu	equ	0xFFF
  6686                           tosh	equ	0xFFE
  6687                           tosl	equ	0xFFD
  6688                           stkptr	equ	0xFFC
  6689                           pclatu	equ	0xFFB
  6690                           pclath	equ	0xFFA
  6691                           pcl	equ	0xFF9
  6692                           tblptru	equ	0xFF8
  6693                           tblptrh	equ	0xFF7
  6694                           tblptrl	equ	0xFF6
  6695                           tablat	equ	0xFF5
  6696                           prodh	equ	0xFF4
  6697                           prodl	equ	0xFF3
  6698                           indf0	equ	0xFEF
  6699                           postinc0	equ	0xFEE
  6700                           postdec0	equ	0xFED
  6701                           preinc0	equ	0xFEC
  6702                           plusw0	equ	0xFEB
  6703                           fsr0h	equ	0xFEA
  6704                           fsr0l	equ	0xFE9
  6705                           wreg	equ	0xFE8
  6706                           indf1	equ	0xFE7
  6707                           postinc1	equ	0xFE6
  6708                           postdec1	equ	0xFE5
  6709                           preinc1	equ	0xFE4
  6710                           plusw1	equ	0xFE3
  6711                           fsr1h	equ	0xFE2
  6712                           fsr1l	equ	0xFE1
  6713                           bsr	equ	0xFE0
  6714                           indf2	equ	0xFDF
  6715                           postinc2	equ	0xFDE
  6716                           postdec2	equ	0xFDD
  6717                           preinc2	equ	0xFDC
  6718                           plusw2	equ	0xFDB
  6719                           fsr2h	equ	0xFDA
  6720                           fsr2l	equ	0xFD9
  6721                           status	equ	0xFD8

Data Sizes:
    Strings     233
    Constant    0
    Data        44
    BSS         63
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     65      92
    BANK0           160      0      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    scrolling	PTR unsigned char [5] size(2) Largest target is 14
		 -> STR_23(CODE[14]), STR_22(CODE[14]), STR_21(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), 

    mystrcmp@s2	PTR unsigned char  size(2) Largest target is 5
		 -> pass(BANK0[5]), 

    mystrcmp@s1	PTR unsigned char  size(2) Largest target is 5
		 -> uckey(BANK0[5]), 

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_23(CODE[14]), STR_22(CODE[14]), STR_21(CODE[14]), STR_20(CODE[14]), 
		 -> STR_19(CODE[14]), STR_18(CODE[5]), STR_17(CODE[9]), STR_16(CODE[15]), 
		 -> STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[17]), time(BANK0[9]), STR_10(CODE[16]), STR_1(CODE[9]), 

    signature	PTR unsigned char [8] size(2) Largest target is 3
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_getforstoreevent
    _scrolllog->_print
    _print->_clcd_putch
    _logscreen->_clcd_putch
    _timeleft->_clcd_putch
    _init_config->_init_clcd
    _init_config->_init_ds1307
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _getforstoreevent->_get_speed
    _log_event->_write_external_eeprom
    _write_external_eeprom->_i2c_write
    _get_speed->___fltol
    ___xxtofl->_read_adc
    ___lwmod->___lwdiv
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _display_dashboard->_gear_monitor
    _gear_monitor->_clcd_putch
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_times->_clcd_print
    _clcd_print->_clcd_write
    _display_speed->_clcd_putch
    _clcd_putch->___awmod
    ___awmod->___awdiv

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   69702
                                             60 COMRAM     5     5      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                         _clcd_print
                  _display_dashboard
                   _getforstoreevent
                        _init_config
                          _logscreen
                           _read_adc
                      _read_switches
                          _scrolllog
 ---------------------------------------------------------------------------------
 (1) _scrolllog                                            3     3      0   17512
                                             19 COMRAM     3     3      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                              _print
 ---------------------------------------------------------------------------------
 (2) _print                                                3     3      0    8723
                                             16 COMRAM     3     3      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      30
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _logscreen                                            3     3      0   19089
                                             16 COMRAM     3     3      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                           _mystrcmp
                           _timeleft
 ---------------------------------------------------------------------------------
 (2) _timeleft                                             0     0      0   10035
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _mystrcmp                                             8     4      4     286
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    2146
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                  _init_matrixkeypad
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrixkeypad                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     506
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     370
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            2     2      0    1640
                                              2 COMRAM     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getforstoreevent                                     4     4      0    3884
                                             56 COMRAM     4     4      0
                          _get_speed
                           _get_time
                          _log_event
 ---------------------------------------------------------------------------------
 (2) _log_event                                            3     3      0     257
                                              5 COMRAM     3     3      0
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (3) _write_external_eeprom                                4     3      1     165
                                              1 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _get_speed                                            2     2      0    3402
                                             54 COMRAM     2     2      0
                            ___fldiv
                            ___fltol
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                              5 COMRAM    14    10      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             44 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1551
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) _display_dashboard                                    3     1      2   20231
                                             19 COMRAM     3     1      2
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                      _display_speed
                       _display_time
                       _gear_monitor
 ---------------------------------------------------------------------------------
 (2) _gear_monitor                                         3     3      0    2814
                                             16 COMRAM     3     3      0
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    4358
                      _display_times
                           _get_time
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (5) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _display_times                                        0     0      0    4291
                         _clcd_print
 ---------------------------------------------------------------------------------
 (3) _clcd_print                                           3     0      3    4291
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _display_speed                                        2     0      2    4238
                                             16 COMRAM     2     0      2
                            ___awmod
                            ___lwdiv
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (3) _clcd_putch                                           2     1      1    2748
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1    1640
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
       _read_adc (ARG)
     _read_adc (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
     _read_adc (ARG)
   ___xxtofl
   _clcd_print
     _clcd_write
   _display_dashboard
     _clcd_print
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
         ___lwdiv (ARG)
       ___lwdiv (ARG)
       _clcd_write (ARG)
     _clcd_write
     _display_speed
       ___awmod
       ___lwdiv
       _clcd_putch
     _display_time
       _display_times
         _clcd_print
       _get_time
         _read_ds1307
           _i2c_read
             _i2c_no_ack
             _i2c_rx_mode
               _i2c_idle
           _i2c_rep_start
             _i2c_idle
           _i2c_start
             _i2c_idle
           _i2c_stop
             _i2c_idle
           _i2c_write
             _i2c_idle
     _gear_monitor
       _clcd_putch
   _getforstoreevent
     _get_speed
       ___fldiv
       ___fltol
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___xxtofl
       _read_adc
     _get_time
     _log_event
       _write_external_eeprom
         _i2c_start
         _i2c_stop
         _i2c_write
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrixkeypad
     _init_timer0
   _logscreen
     _clcd_print
     _clcd_putch
     _clcd_write
     _mystrcmp
     _timeleft
       ___awdiv
       ___awmod
       _clcd_print
       _clcd_putch
       _clcd_write
   _read_adc
   _read_switches
     _scan_key
   _scrolllog
     _clcd_print
     _clcd_putch
     _clcd_write
     _print
       _clcd_print
       _clcd_putch
       _clcd_write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      28        0.0%
BITBIGSFRll        281      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      50       5       50.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     41      5C       1       97.9%
BITBIGSFRhlh        19      0       0      17        0.0%
BITBIGSFRlhhllh     12      0       0      22        0.0%
BITBIGSFRlhl         F      0       0      25        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRhllh        9      0       0      18        0.0%
BITBIGSFRlhhlll      6      0       0      24        0.0%
BITBIGSFRlhhlh       5      0       0      21        0.0%
BITBIGSFRlhhllh      2      0       0      23        0.0%
BITBIGSFRlhhhh       2      0       0      19        0.0%
BITBIGSFRlhhhl       2      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AC      27        0.0%
DATA                 0      0      AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Dec 28 23:03:44 2023

                 ___fldiv@aexp 002C                   ___fldiv@bexp 002B                              _i 0050  
                 ___fldiv@sign 0024          _write_external_eeprom 1E96                 clcd_print@addr 0005  
               clcd_print@data 0003                             l29 1FE0                             l90 1FC6  
                           l93 1EEE                             l96 1F0A                             _GO 7E11  
                 ___awdiv@sign 0006              _init_matrixkeypad 204E                            l131 207C  
                          l134 204C                            l150 14CA                            l231 193A  
                          l128 1DAE                            l208 205A                            l320 15D4  
                          l224 18DC                            l216 1ADA                            l153 1522  
                          l321 15E8                            l225 1950                            l410 1D52  
                          l226 18F0                            l218 1AD8                            l139 1A64  
                          l156 1E00                            l404 19E0                            l228 190A  
                          l229 191E                            l182 1F38                            l502 2096  
                          l183 1F3C                            l511 2066                            l327 1BBA  
                          l192 1C26                            l520 2072                            l416 1210  
                          l505 208E                            l514 20A6                            l186 176A  
                          l426 10F4                            l195 2012                            l451 1FA8  
                          l508 209E                            l517 20AC                            l293 0DD0  
                          l454 1F66                            l359 1FFA                            l536 1ED4  
                          l448 1E94                            l296 0C06                            l492 202A  
                          l397 18C0                            l494 2038                            l495 203A  
                          l489 2028                            l773 16AC                            l839 142C  
                          _CKE 7E3E                            l786 181A                            _GIE 7F97  
                          _PR2 0FCB                            _PEN 7E2A                            u800 1948  
                          u801 1944                            _SEN 7E28                            u750 18D6  
                          u751 18D2                            _PSA 7EAB                            u760 18EA  
                          u920 1A78                            u761 18E6                            u921 1A74  
                          u770 1904                            u930 1A90                            u771 1900  
                          u931 1A8C                            u780 1918                            u940 1AA6  
                          u781 1914                            u941 1AA2                            u790 1934  
                          u950 1AB6                            u791 1930                            u951 1AB2  
                          u960 1AD0                            u961 1ACC                            _SMP 7E3F  
                ?_display_time 0001             ?_init_matrixkeypad 0001                            _min 007B  
                          _log 0060                            _sec 0056                            _isr 0008  
               clcd_putch@addr 000F                            _out 0045                 clcd_putch@data 0010  
                 ___awmod@sign 000E                            prod 0FF3                            wreg 0FE8  
          ??_init_matrixkeypad 0001                   ___fltol@exp1 0036                           l1040 1B4E  
                         l1200 0F84                           l1033 1B46                           l1050 1CF0  
                         l1043 1CE8                           l1211 0F1C                           l1124 0A84  
                         l1204 0EC0                           l1126 08E4                           l1135 092A  
                         l1137 09A2                           l1129 08A8                           l3001 0CEE  
                         l1138 0990                           l3003 0CF6                           l2301 1BF6  
                         l3021 0D56                           l3005 0CFE                           l3101 1084  
                         l2311 1F54                           l2303 1F40                           l3031 0DAA  
                         l3023 0D5C                           l3007 0D06                           l3015 0D1C  
                         l3111 10CE                           l3103 1096                           l2313 1F60  
                         l2305 1F44                           l2401 078E                           l2321 1EFC  
                         l3025 0D68                           l3017 0D36                           l3009 0D10  
                         l3033 0DB6                           l3113 10E4                           l3105 10A6  
                         l3121 1216                           l2251 20A8                           l2307 1F4A  
                         l2331 1A08                           l3051 1D66                           l2411 07CE  
                         l2403 079E                           l3035 0DBE                           l3027 0D7A  
                         l3019 0D46                           l3115 10EC                           l3107 10B0  
                         l3131 12A2                           l3123 121A                           l2261 1F20  
                         l2253 1F0E                           l2325 1FFE                           l2245 202A  
                         l2309 1F50                           l2341 1A4A                           l2333 1A20  
                         l3061 1D98                           l3053 1D70                           l2501 0A7A  
                         l2413 07DE                           l2421 07FE                           l2405 07A0  
                         l1197 0E28                           l2317 1ED8                           l3037 0DC8  
                         l3029 0DA0                           l3117 10F2                           l3109 10BC  
                         l3133 12AE                           l3125 1272                           l2271 1F2A  
                         l2263 1F22                           l2255 1F18                           l2247 20A0  
                         l2343 1A60                           l2335 1A34                           l2327 19E2  
                         l3063 1D9C                           l3055 1D82                           l2431 083C  
                         l2423 080E                           l2415 07E6                           l2407 07A8  
                         l2319 1EEC                           l2351 1EA2                           l2511 15EE  
                         l3071 0FA6                           l3135 12B8                           l3143 12E8  
                         l3127 1284                           l3119 1212                           l2265 1F24  
                         l2257 1F1C                           l2345 203C                           l2249 20A2  
                         l2273 2090                           l2281 2088                           l2337 1A38  
                         l2329 19FA                           l3065 1DA2                           l3057 1D8A  
                         l3049 1D56                           l2441 0884                           l2433 084C  
                         l2425 080E                           l2417 07EA                           l2409 07B8  
                         l2601 138E                           l2353 1EA8                           l2361 1F8E  
                         l2521 161E                           l2513 15FC                           l3081 1016  
                         l3073 0FC6                           l3137 12CA                           l3129 1296  
                         l2267 1F26                           l2259 1F1E                           l2291 2070  
                         l2275 2092                           l2283 208A                           l2339 1A42  
                         l2451 08D2                           l2443 0898                           l2435 085C  
                         l2371 06EC                           l2611 13B8                           l2603 1392  
                         l2355 1EAE                           l2347 1E98                           l2363 1F92  
                         l2531 164C                           l2523 1622                           l2515 1604  
                         l3091 1054                           l3083 101A                           l3075 0FEE  
                         l3067 0F88                           l3139 12D4                           l2269 1F28  
                         l2285 2098                           l2277 205E                           l2461 091A  
                         l2453 08E2                           l2445 08A6                           l2437 086C  
                         l2429 0822                           l2381 0728                           l2373 06F8  
                         l2621 13E0                           l2613 13C2                           l2605 13A0  
                         l2701 0F2A                           l2357 1EB2                           l2349 1E9C  
                         l2365 1F98                           l1741 1FF2                           l2541 1680  
                         l2533 165A                           l2525 162A                           l2517 1608  
                         l2509 15EA                           l1805 18EA                           l3093 105C  
                         l3085 1030                           l3077 1000                           l3069 0F9C  
                         l2295 1BBC                           l2287 209A                           l2279 2062  
                         l2471 095A                           l2463 0928                           l2455 08F4  
                         l2447 08B2                           l2439 0874                           l2391 0758  
                         l2383 0738                           l2375 0706                           l2623 13EC  
                         l2615 13CC                           l2711 0F72                           l2703 0F2C  
                         l2359 1EBA                           l2367 1F9E                           l1751 2024  
                         l1743 2014                           l2543 1686                           l2535 1660  
                         l2527 163C                           l2519 1616                           l1815 1918  
                         l3095 106A                           l3087 1042                           l3079 1012  
                         l2561 178A                           l2553 176C                           l2641 1B06  
                         l2633 1ADC                           l2801 1DB0                           l2297 1BCA  
                         l2289 2068                           l2481 09CC                           l2473 0988  
                         l2457 090A                           l2465 093A                           l2449 08D0  
                         l2393 075E                           l2385 073A                           l2377 0708  
                         l2625 13FC                           l2713 0F74                           l2705 0F30  
                         l1737 1FAA                           l2721 16B8                           l2369 1FA4  
                         l1753 2026                           l1745 2018                           l2537 1676  
                         l2529 1644                           l2545 168C                           l1825 1948  
                         l1809 1904                           l3089 104A                           l3193 12FE  
                         l2571 17C2                           l2563 1798                           l2555 1770  
                         l2651 1B3A                           l2643 1B14                           l2635 1AE4  
                         l2299 1BF2                           l2491 0A44                           l2483 09F6  
                         l2467 0948                           l2459 0910                           l2395 076C  
                         l2379 0718                           l2387 0742                           l2627 140C  
                         l2707 0F54                           l2731 16C8                           l2723 16BC  
                         l1747 2020                           l1691 2058                           l1739 1FE2  
                         l2811 1B92                           l2803 1B50                           l2547 169C  
                         l2539 167E                           l1819 1934                           l3099 106E  
                         l2573 17D0                           l2581 17FA                           l2565 17A0  
                         l2557 177E                           l2653 1B40                           l2645 1B1A  
                         l2637 1AF6                           l2493 0A60                           l2477 09B2  
                         l2485 09FA                           l2469 094C                           l2397 076E  
                         l2389 0752                           l2629 141C                           l2661 1CB0  
                         l2709 0F64                           l2741 170C                           l2733 16E0  
                         l2725 16C0                           l2717 16AE                           l1749 2022  
                         l2901 1FDC                           l2805 1B5C                           l2813 1B96  
                         l2549 16A4                           l2821 152E                           l1829 194E  
                         l2583 180A                           l2575 17E6                           l2567 17B2  
                         l2559 1786                           l2647 1B30                           l2639 1AFE  
                         l2495 0A64                           l2487 0A14                           l2479 09BE  
                         l2399 077E                           l2591 133E                           l2663 1CBE  
                         l2655 1C8E                           l2671 0DD4                           l2911 196A  
                         l2903 1952                           l2751 1738                           l2743 1716  
                         l2735 16EA                           l2727 16C2                           l2719 16B2  
                         l1687 204E                           l2815 1BB2                           l2807 1B86  
                         l2831 15C2                           l2823 1538                           l2585 1812  
                         l2577 17EE                           l2569 17BA                           l2649 1B38  
                         l2497 0A72                           l2489 0A2A                           l2665 1CD4  
                         l2657 1CA0                           l2673 0DE4                           l2841 1CF4  
                         l2913 196E                           l2753 1740                           l2745 171C  
                         l2737 16FA                           l2729 16C6                           l2761 1E4E  
                         l1689 2052                           l2833 15D6                           l2825 153E  
                         l2579 17F4                           l2771 2074                           l2499 0A78  
                         l2595 1352                           l2667 1CDC                           l2659 1CA8  
                         l2691 0EAA                           l2683 0E62                           l2675 0DF2  
                         l2843 1D06                           l2931 19D8                           l2915 198A  
                         l2755 174A                           l2747 1726                           l2739 1704  
                         l2763 1E56                           l2835 15DE                           l2827 156E  
                         l2819 1524                           l1971 1A80                           l1963 1A68  
                         l2773 2078                           l2781 145E                           l2597 137C  
                         l2589 1328                           l2669 1CE2                           l2693 0EB6  
                         l2685 0E6A                           l2677 0E38                           l2837 181C  
                         l2853 1D1A                           l2845 1D0A                           l2933 19DC  
                         l2925 199C                           l2917 1990                           l2909 195A  
                         l2757 1758                           l2749 172E                           l2765 1E62  
                         l2829 158E                           l2941 0AB0                           l1797 18C2  
                         l1973 1A90                           l1965 1A78                           l2861 10F8  
                         l2791 14A4                           l2783 146E                           l2775 1430  
                         l2599 137E                           l2695 0EF2                           l2687 0E76  
                         l2679 0E4E                           l2855 1D30                           l2847 1D12  
                         l2839 1CF2                           l2927 19B8                           l2919 1994  
                         l2759 1762                           l2767 1E76                           l2951 0B22  
                         l2943 0AC2                           l2935 0A88                           l1799 18D6  
                         l1975 1A96                           l2871 1130                           l2863 110A  
                         l2793 14B4                           l2785 1474                           l2777 1440  
                         l2697 0EFE                           l2689 0EA8                           l2857 1D32  
                         l2929 19BC                           l2769 1E80                           l2961 0B6E  
                         l2953 0B2A                           l2945 0AD2                           l2937 0A8E  
                         l1977 1AA6                           l1985 1AC0                           l2881 11A8  
                         l2873 113A                           l2865 111A                           l2795 14C4  
                         l2787 1486                           l2779 144C                           l2699 0F0C  
                         l2859 1D36                           l2971 0BAE                           l2963 0B7A  
                         l2955 0B3A                           l2947 0AFA                           l2939 0AA0  
                         l1987 1AD0                           l1979 1AB6                           l2891 11E8  
                         l2883 11B2                           l2875 1162                           l2867 1124  
                         l2789 1492                           l2797 14CA                           l2893 1FC8  
                         l2973 0BBA                           l2957 0B4C                           l2965 0B80  
                         l2981 0C0A                           l1989 1AD8                           l2885 11B4  
                         l2869 1126                           l2877 1186                           l2799 14EE  
                         l2895 1FD0                           l2991 0C84                           l2975 0BD0  
                         l2967 0B92                           l2983 0C18                           l2959 0B5C  
                         l2887 11BE                           l2879 1198                           l2897 1FD4  
                         l2993 0CA4                           l2985 0C2C                           l2977 0BE0  
                         l2969 0B96                           l2889 11C8                           l2899 1FD8  
                         l2995 0CB6                           l2987 0C52                           l2979 0BF6  
                         l2997 0CDC                           l2989 0C6A                           l2999 0CE6  
                         _ADFM 7E07                           ?_isr 0001                           _ADON 7E10  
                         STR_1 06C4                           STR_2 06E4                           STR_3 06E1  
                         STR_4 06D5                           STR_5 06D8                           STR_6 06DB  
                         STR_7 06DE                           STR_8 06E7                           STR_9 06D2  
                         _T0CS 7EAD                           u2000 14C4                           u2001 14C0  
                         u2010 1B86                           u2011 1B82                           u1300 1BEE  
                         u2100 198A                           u2020 1BB2                           u2101 1986  
                         u2021 1BAE                           u1310 1C16                           u2110 19D8  
                         u2030 15D4                           u2111 19D4                           u2031 15D0  
                         u1320 1C26                           u1400 077E                           u2040 1D06  
                         u2200 0BD0                           u2120 0AA0                           u1321 1C22  
                         u1401 077A                           u2041 1D02                           u2201 0BCC  
                         u2121 0A9C                           u1410 078E                           u1330 1EFC  
                         u2050 1D52                           u2210 0BF6                           u2130 0AC2  
                         u1307 1BE4                           u1411 078A                           u1331 1EF8  
                         u2051 1D4E                           u2211 0BF2                           u2131 0ABE  
                         u1340 1A08                           u1500 0948                           u1420 07CE  
                         u2220 0C2C                           u2140 0AD2                           u2060 110A  
                         u2300 1012                           u1317 1C0C                           u1341 1A04  
                         u1501 0944                           u1421 07CA                           u2221 0C28  
                         u2141 0ACE                           u2061 1106                           u2301 100E  
                         u1270 2038                           u1510 095A                           u1430 080E  
                         u1350 1ED4                           u2230 0C52                           u2150 0AFA  
                         u2070 111A                           u2310 1030                           u1271 2034  
                         u1511 0956                           u1431 080A                           u1351 1ED0  
                         u2231 0C4E                           u2151 0AF6                           u2071 1116  
                         u2311 102C                           u1520 0988                           u1440 0884  
                         u1360 0706                           u1600 1616                           u2240 0C84  
                         u2160 0B3A                           u2080 1198                           u2320 1042  
                         u1521 0984                           u1441 0880                           u1361 0702  
                         u1601 1612                           u2241 0C80                           u2161 0B36  
                         u2081 1194                           u2321 103E                           u1290 1F38  
                         u1530 099E                           u1450 08A6                           u1370 0718  
                         u1610 163C                           u2250 0CDC                           u2170 0B4C  
                         u2090 11A8                           u2330 1084                           u1291 1F34  
                         u1531 099A                           u1451 08A2                           u1371 0714  
                         u1611 1638                           u2251 0CD8                           u2171 0B48  
                         u2091 11A4                           u2331 1080                           u1700 180A  
                         u1540 09B2                           u1460 08D0                           u1380 0728  
                         u1620 165A                           u2260 0DA0                           u2180 0B92  
                         u2340 1096                           u1701 1806                           u1285 1F16  
                         u1541 09AE                           u1461 08CC                           u1381 0724  
                         u1621 1656                           u2261 0D9C                           u2181 0B8E  
                         u2341 1092                           u1286 1F18                           u2270 1D82  
                         u1550 09CC                           u1470 08F4                           u1390 076C  
                         u1710 133E                           u1630 1676                           u2190 0BAE  
                         u2350 10A6                           u2271 1D7E                           u1551 09C8  
                         u1471 08F0                           u1391 0768                           u1711 133A  
                         u1631 1672                           u2191 0BAA                           u2351 10A2  
                         u1800 1B30                           u1560 0A14                           u1480 090A  
                         u1720 1372                           u1640 169C                           u2360 10CE  
                         u2280 0F9C                           u1801 1B2C                           u1561 0A10  
                         u1481 0906                           u1641 1698                           u2361 10CA  
                         u2281 0F98                           u1650 177E                           u1570 0A44  
                         u1490 0928                           u1730 13A0                           u1810 1CA0  
                         u2370 10E4                           u2290 1000                           u1651 177A  
                         u1571 0A40                           u1491 0924                           u1731 139C  
                         u1811 1C9C                           u2427 16D2                           u2371 10E0  
                         u2291 0FFC                           u1660 1798                           u1580 0A72  
                         u1740 13B4                           u1820 1CBE                           u1900 0F1C  
                         u2380 1284                           u1661 1794                           u1581 0A6E  
                         u1741 13B0                           u1725 1368                           u1821 1CBA  
                         u1901 0F18                           u2437 16F0                           u2381 1280  
                         u1670 17B2                           u1750 13DC                           u1830 1CD4  
                         u1910 0F2A                           u1590 15FC                           u2390 1296  
                         u1671 17AE                           u1751 13D8                           u1831 1CD0  
                         u1911 0F26                           u2447 1706                           u1591 15F8  
                         u2391 1292                           u1680 17D0                           u1760 13FC  
                         u1920 0F64                           u1840 0DE4                           u1681 17CC  
                         u1761 13F8                           u1921 0F60                           u1841 0DE0  
                         u2457 1728                           u1690 17E6                           u1770 140C  
                         u1930 0F72                           u1850 0DF2                           u1691 17E2  
                         u1771 1408                           u1931 0F6E                           u1851 0DEE  
                         u2467 173A                           u1780 1AF6                           u1940 1440  
                         u1860 0E4E                           u1781 1AF2                           u1941 143C  
                         u1861 0E4A                           u2477 1750                           u1790 1B14  
                         u1950 145E                           u1870 0EA4                           u1791 1B10  
                         u1951 145A                           u1871 0EA0                           u2487 1764  
                         u1960 146E                           u1880 0EEE                           u1961 146A  
                         u1881 0EEA                           u1970 1486                           u1890 0F0C  
                         u1971 1482                           u1891 0F08                           _PEIE 7F96  
                         u1980 14A4                           u1981 14A0                           u1990 14B4  
                         u1991 14B0                           _RCEN 7E2B                           _RBPU 7F8F  
                         _TMR0 0FD6                           _RSEN 7E29                 ?_display_speed 0011  
               ?_display_times 0001                           _main 1212                           _logg 004F  
                         _pass 00AB                           _wait 0071                           _time 007F  
                         fsr0h 0FEA                           indf0 0FEF                           fsr0l 0FE9  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005D                           prodl 0FF3  
                         start 000E                ___fldiv@new_exp 0025                   ___param_bank 0000  
               clcd_write@byte 0002                  _i2c_rep_start 2098                  ??_i2c_rx_mode 0001  
                 _ECCP1CONbits 0FBA      __end_of_init_matrixkeypad 205C                          ??_isr 0001  
                 ?_init_ds1307 0001                  ___fltol@sign1 0035                          _ADCS0 7E00  
                        _ADCS1 7E01                          _ADCS2 7E02                          ?_main 0001  
                 ?_read_ds1307 0001                          _ACKEN 7E2C                          _ACKDT 7E2D  
               ??_display_time 0006                          _BCLIF 7D0B                __end_of___fldiv 0A86  
                        _ACQT0 7E03                          _ACQT1 7E04                          _ACQT2 7E05  
              __end_of___awdiv 16AE                          STR_10 0656                          STR_11 0634  
                        STR_12 0601                          STR_20 06AD                          STR_13 0612  
                        STR_21 0691                          STR_14 0623                          STR_22 0675  
                        STR_15 0645                          STR_23 069F                          STR_16 0666  
                        STR_17 06BB                          STR_18 06CD                          STR_19 0683  
              __end_of___awmod 181C                __end_of___fltol 142E                          _CMCON 0FB4  
              ___awdiv@divisor 0003                          _PCFG0 7E08                          _PCFG1 7E09  
                        _PCFG2 7E0A                          _PCFG3 7E0B                __end_of___lwdiv 1B50  
              __end_of___lwmod 1CF2                   ?_init_config 0001                          i2l248 1E4A  
              ___awdiv@counter 0005                          _VCFG0 7E0C                          _VCFG1 7E0D  
                        _PORTB 0F81                          _PORTD 0F83                   get_speed@adc 0037  
                        _TRISB 0F93                          _TRISC 0F94                          _TRISD 0F95  
                        _SSPIF 7CF3                   ?_init_timer0 0001      write_external_eeprom@data 0002  
                        _blink 004B                          _uckey 0088                          _press 0077  
                        _print 10F6                          tablat 0FF5                          ttemp5 005E  
                        ttemp6 0061                          ttemp7 0065                          status 0FD8  
                        wtemp8 005E           __end_of_gear_monitor 1524               init_ds1307@dummy 0004  
                   _i2c_no_ack 20A8                __initialization 1C28                 ?_i2c_rep_start 0001  
       ?_write_external_eeprom 0002                   __end_of_main 1328               __end_of_i2c_idle 203C  
             __end_of_i2c_read 2074               __end_of_i2c_stop 2090                         ??_main 003D  
                __activetblptr 0002            __end_of_i2c_rx_mode 20A8                         _ADCON0 0FC2  
              ??_display_speed 0013                ??_display_times 0006                         _ADRESH 0FC4  
                       _ADRESL 0FC3                         _T08BIT 7EAE               ___awdiv@dividend 0001  
                       ?_print 0001                         i2l3151 1E12                         i2l3153 1E3A  
                       i2l3155 1E42                         i2l3157 1E48                         i2l3149 1E04  
                 _write_ds1307 1F8C                         _TMR0IE 7F95                         _TMR0IF 7F92  
                       _TMR2IE 7CE9                         _TMR0ON 7EAF                         _TMR2ON 7E52  
                       _SSPADD 0FC8                         _TRISC3 7CA3                         _TRISC4 7CA4  
                       _TRISD7 7CAF                         _SSPBUF 0FC9               __end_of___xxtofl 0F86  
             __end_of_get_time 1A66               log_event@address 0006                      ??___fldiv 001C  
                    ??___awdiv 0005                      ??___awmod 000D                      ??___fltol 0031  
                    ??___lwdiv 0005                      ??___lwmod 000C               __end_of_init_i2c 202A  
             __end_of_init_adc 1FC8               __end_of_read_adc 1F0C                         clear_0 1C6E  
                       clear_1 1C7A                         _logpos 005B               ___awdiv@quotient 0007  
                       _logout 007D                ___awmod@divisor 000B                         isa$std 0001  
             __end_of_scan_key 1952                ___awmod@counter 000D          gear_monitor@crashflag 0052  
                 __pdataCOMRAM 0054                   __mediumconst 0000               __end_of_timeleft 15EA  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             __end_of_mystrcmp 1BBC                   ___xxtofl@arg 0010                   ___xxtofl@exp 000F  
                 ___xxtofl@val 0006                     __accesstop 0060        __end_of__initialization 1C80  
         __end_of_display_time 207E                  ___rparam_used 0001                     ___fltol@f1 002D  
              ??_i2c_rep_start 0001                    ?_i2c_no_ack 0001                 __pcstackCOMRAM 0001  
                 __pidataBANK0 1F68                    _i2c_rx_mode 20A0                  __end_of_print 1212  
            __end_of_i2c_start 2098              __end_of_i2c_write 2068               _getforstoreevent 1952  
                      ??_print 0011                     __pbssBANK0 0060         write_external_eeprom@i 0003  
                    ?_i2c_idle 0001                      ?_i2c_read 0001                      ?_i2c_stop 0001  
                logscreen@wait 0011                     _clcd_print 1BBC                     _clcd_putch 1FFC  
                   _clcd_write 1F0C          getforstoreevent@i_630 003B   write_external_eeprom@address 0005  
              read_ds1307@data 0003                        _CCP1CON 0FBD                        _ACKSTAT 7E2E  
     read_switches@ucdetection 0001                        _T2CKPS0 7E50                        _T2CKPS1 7E51  
                    ?___xxtofl 0006                   _gear_monitor 142E                        _SSPCON1 0FC6  
                    ?_get_time 0001                  _read_switches 1A66                     ??_i2c_idle 0001  
                   ??_i2c_read 0001                     ??_i2c_stop 0001                      ?_init_i2c 0001  
                    ?_init_adc 0001                      ?_read_adc 0001            read_switches@uconce 005C  
                    ?_scan_key 0001        ??_write_external_eeprom 0003                        __Hparam 0000  
                      __Lparam 0000                      ?_timeleft 0001              __end_of_get_speed 18C2  
                      ___fldiv 06EC                        ___awdiv 15EA                        ___awmod 176C  
                      ___fltol 1328                     _eventcount 0075                        ___lwdiv 1ADC  
                      ___lwmod 1C8E                   __psmallconst 0600                      ?_mystrcmp 0001  
                      __pcinit 1C28                        __ramtop 0600                        __ptext0 1212  
                      __ptext1 0F86                        __ptext2 10F6                        __ptext3 1A66  
                      __ptext4 18C2                        __ptext5 0A86                        __ptext6 1524  
                      __ptext7 15EA                        __ptext8 1B50                        __ptext9 1FC8  
            __end_of_init_clcd 176C                     ??___xxtofl 000A               ___awmod@dividend 0009  
            __end_of_log_event 1D54         display_dashboard@uckey 0016                 ?_read_switches 0001  
       display_dashboard@usads 0014              __end_of_logscreen 0DD2                     ??_get_time 0004  
               __pintcode_body 1E02                        _tryflag 0054           end_of_initialization 1C80  
                   ??_init_i2c 0001                     ??_init_adc 0001                  __Lmediumconst 0000  
                   ??_read_adc 0003                        int_func 1E02                     ??_scan_key 0001  
            __end_of_scrolllog 10F6                    ?_clcd_print 0003                    ?_clcd_putch 000F  
                  ?_clcd_write 0001                     ??_timeleft 0011                        postdec1 0FE5  
                      postdec2 0FDD                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE                     ??_mystrcmp 0005                      _PORTBbits 0F81  
                    _PORTCbits 0F82                      _PORTDbits 0F83                read_adc@channel 0005  
                   _notpressed 00A7                   _display_time 2074                  i2c_write@data 0001  
                ___xxtofl@sign 000E                      _TRISEbits 0F96                    ___fldiv@grs 0027  
                  ___fldiv@rem 0020          __end_of_display_speed 1E02          __end_of_display_times 204E  
            getforstoreevent@i 0039                   ??_i2c_no_ack 0001       __end_of_getforstoreevent 19E2  
                 ?_i2c_rx_mode 0001                  __pidataCOMRAM 207E            start_initialization 1C28  
              ??_read_switches 0001                      _i2c_start 2090                    __end_of_isr 1E4E  
                    _i2c_write 205C             __end_of_i2c_no_ack 20AE          __end_of_i2c_rep_start 20A0  
                ??_init_ds1307 0004                    __pdataBANK0 008D                  ??_read_ds1307 0002  
                ??_init_config 0005                      ___fldiv@a 0018                      ___fldiv@b 0014  
                   log_event@i 0007                  ??_init_timer0 0001                    __pbssCOMRAM 0042  
                   ?_i2c_start 0001                     ?_i2c_write 0001             display_speed@usadc 0011  
                 logscreen@key 0013               scrolllog@prevkey 005A               ___lwdiv@dividend 0001  
__end_of_write_external_eeprom 1ED6                      __pintcode 0008                      _blinkflag 0049  
                     ?___fldiv 0014                       ?___awdiv 0001                       ?___awmod 0009  
                     ?___fltol 002D              _display_dashboard 1D54             read_ds1307@address 0002  
                     ?___lwdiv 0001                      _clock_reg 0042                       ?___lwmod 0008  
           ?_display_dashboard 0014                      _get_speed 181C                    __smallconst 0600  
           read_switches@uckey 0051            __end_of_init_ds1307 1E96                      _enterflag 0047  
          ??_display_dashboard 0016            __end_of_read_ds1307 1F68              gear_monitor@uckey 0013  
             ___lwdiv@quotient 0005                      _init_clcd 16AE            __end_of_init_config 1FE2  
                    _log_event 1CF2                  ?_write_ds1307 0002            __end_of_init_timer0 1FFC  
                    _logscreen 0A86                   ??_clcd_print 0006                   ??_clcd_putch 0010  
                 ??_clcd_write 0002                       i2u240_40 1E12                       i2u240_41 1E0E  
                     i2u241_40 1E3A                       i2u241_41 1E36      __end_of_display_dashboard 1DB0  
                    _signature 008D                      _signindex 0053                      _scrolling 009D  
                    _scrolllog 0F86                    _compareflag 0079          clcd_write@control_bit 0001  
                   ?_get_speed 0001                      main@ucKey 0041                      main@usAdc 003F  
                  ??_i2c_start 0001             __end_of_clcd_print 1C28                    ??_i2c_write 0001  
           __end_of_clcd_putch 2014             __end_of_clcd_write 1F3E                     ?_init_clcd 0001  
                    copy_data0 1C3C                      copy_data1 1C5C                 ??_write_ds1307 0003  
                  _controlflag 0058                     ?_log_event 0001                       _i2c_idle 202A  
                     _i2c_read 2068                       _i2c_stop 2088                     ?_logscreen 0001  
                     __Hrparam 0000                       __Lrparam 0000                     ?_scrolllog 0001  
            ?_getforstoreevent 0001             ??_getforstoreevent 0039                    _init_ds1307 1E4E  
                  _read_ds1307 1F3E                    _init_config 1FC8                       ___xxtofl 0DD2  
                   mystrcmp@s1 0001                     mystrcmp@s2 0003            write_ds1307@address 0003  
                  _init_timer0 1FE2                ___lwdiv@divisor 0003                ___lwdiv@counter 0007  
                     __ptext10 1FE2                       __ptext11 204E                       __ptext20 181C  
                     __ptext12 2014                       __ptext21 1ED6                       __ptext13 1E4E  
                     __ptext30 1F3E                       __ptext22 0DD2                       __ptext14 1F8C  
                     __ptext31 205C                       __ptext23 1C8E                       __ptext15 16AE  
                     __ptext40 1BBC                       __ptext32 2088                       __ptext24 1328  
                     __ptext16 1FAA                       __ptext41 1DB0                       __ptext33 2090  
                     __ptext25 06EC                       __ptext17 1952                       __ptext42 1FFC  
                     __ptext34 2098                       __ptext26 1D54                       __ptext18 1CF2  
                     __ptext43 1F0C                       __ptext35 2068                       __ptext27 142E  
                     __ptext19 1E96                       __ptext44 1ADC                       __ptext36 20A0  
                     __ptext28 2074                       __ptext45 176C                       __ptext37 202A  
                     __ptext29 19E2                       __ptext38 20A8                       __ptext39 203C  
                     _get_time 19E2                       _init_i2c 2014                       _init_adc 1FAA  
                     _read_adc 1ED6                       _scan_key 18C2                       isa$xinst 0000  
                     _timeleft 1524                       int$flags 005D                       _mystrcmp 1B50  
                  ??_get_speed 0037                  ?_gear_monitor 0001                       isr@count 004D  
                  ??_init_clcd 0003          __end_of_read_switches 1ADC                    ??_log_event 0006  
                     intlevel2 0000                      mystrcmp@i 0007                   scrolllog@key 0016  
             ___lwmod@dividend 0008                    ??_logscreen 0011                    ??_scrolllog 0014  
                     print@key 0013           __end_of_write_ds1307 1FAA                 ??_gear_monitor 0011  
              ___lwmod@divisor 000A                ___lwmod@counter 000C               write_ds1307@data 0002  
                _display_speed 1DB0                  _display_times 203C  

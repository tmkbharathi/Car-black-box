

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Dec 27 13:05:26 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Generated 23/03/2023 GMT
    62                           ; 
    63                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4580 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     
    96                           	psect	idataCOMRAM
    97   001DDE                     __pidataCOMRAM:
    98                           	callstack 0
    99                           
   100                           ;initializer for _tryflag
   101   001DDE  0003               	dw	3
   102                           
   103                           ;initializer for _sec
   104   001DE0  000A               	dw	10
   105                           
   106                           ;initializer for _controlflag
   107   001DE2  0001               	dw	1
   108                           
   109                           ;initializer for _star
   110   001DE4  01                 	db	1
   111                           
   112                           ;initializer for read_switches@uconce
   113   001DE5  01                 	db	1
   114                           
   115                           	psect	idataBANK0
   116   001CC8                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for _signature
   120   001CC8  DB                 	db	low STR_1
   121   001CC9  06                 	db	high STR_1
   122   001CCA  D8                 	db	low STR_2
   123   001CCB  06                 	db	high STR_2
   124   001CCC  CC                 	db	low STR_3
   125   001CCD  06                 	db	high STR_3
   126   001CCE  CF                 	db	low STR_4
   127   001CCF  06                 	db	high STR_4
   128   001CD0  D2                 	db	low STR_5
   129   001CD1  06                 	db	high STR_5
   130   001CD2  D5                 	db	low STR_6
   131   001CD3  06                 	db	high STR_6
   132   001CD4  DE                 	db	low STR_7
   133   001CD5  06                 	db	high STR_7
   134   001CD6  C9                 	db	low STR_8
   135   001CD7  06                 	db	high STR_8
   136                           
   137                           ;initializer for _scrolling
   138   001CD8  83                 	db	low STR_18
   139   001CD9  06                 	db	high STR_18
   140   001CDA  AD                 	db	low STR_19
   141   001CDB  06                 	db	high STR_19
   142   001CDC  91                 	db	low STR_20
   143   001CDD  06                 	db	high STR_20
   144   001CDE  75                 	db	low STR_21
   145   001CDF  06                 	db	high STR_21
   146   001CE0  9F                 	db	low STR_22
   147   001CE1  06                 	db	high STR_22
   148                           
   149                           ;initializer for _notpressed
   150   001CE2  2710               	dw	10000
   151   001CE4  0000               	dw	0
   152                           
   153                           ;initializer for _pass
   154   001CE6  31                 	db	49
   155   001CE7  31                 	db	49
   156   001CE8  30                 	db	48
   157   001CE9  30                 	db	48
   158   001CEA  00                 	db	0
   159   000000                     _TMR0	set	4054
   160   000000                     _SSPBUF	set	4041
   161   000000                     _SSPADD	set	4040
   162   000000                     _SSPCON1	set	4038
   163   000000                     _ADRESH	set	4036
   164   000000                     _ADRESL	set	4035
   165   000000                     _ACKSTAT	set	32302
   166   000000                     _CKE	set	32318
   167   000000                     _T2CKPS0	set	32336
   168   000000                     _TMR0ON	set	32431
   169   000000                     _RBPU	set	32655
   170   000000                     _PORTBbits	set	3969
   171   000000                     _TRISD	set	3989
   172   000000                     _PORTDbits	set	3971
   173   000000                     _ADCON0	set	4034
   174   000000                     _ACKEN	set	32300
   175   000000                     _ACKDT	set	32301
   176   000000                     _RCEN	set	32299
   177   000000                     _RSEN	set	32297
   178   000000                     _PEN	set	32298
   179   000000                     _SEN	set	32296
   180   000000                     _SMP	set	32319
   181   000000                     _TRISC4	set	31908
   182   000000                     _TRISC3	set	31907
   183   000000                     _TMR2ON	set	32338
   184   000000                     _T2CKPS1	set	32337
   185   000000                     _PSA	set	32427
   186   000000                     _T0CS	set	32429
   187   000000                     _T08BIT	set	32430
   188   000000                     _TMR0IE	set	32661
   189   000000                     _PEIE	set	32662
   190   000000                     _GIE	set	32663
   191   000000                     _GO	set	32273
   192   000000                     _ADFM	set	32263
   193   000000                     _ADCS0	set	32256
   194   000000                     _ADCS1	set	32257
   195   000000                     _ADCS2	set	32258
   196   000000                     _ACQT0	set	32259
   197   000000                     _ACQT1	set	32260
   198   000000                     _PCFG0	set	32264
   199   000000                     _PCFG1	set	32265
   200   000000                     _PCFG2	set	32266
   201   000000                     _PCFG3	set	32267
   202   000000                     _VCFG0	set	32268
   203   000000                     _PORTB	set	3969
   204   000000                     _PORTCbits	set	3970
   205   000000                     _ACQT2	set	32261
   206   000000                     _VCFG1	set	32269
   207   000000                     _ADON	set	32272
   208   000000                     _TRISB	set	3987
   209   000000                     _TRISC	set	3988
   210   000000                     _PORTD	set	3971
   211   000000                     _TRISD7	set	31919
   212   000000                     _CMCON	set	4020
   213   000000                     _TRISEbits	set	3990
   214   000000                     _ECCP1CONbits	set	4026
   215   000000                     _TMR2IE	set	31977
   216   000000                     _CCP1CON	set	4029
   217   000000                     _TMR0IF	set	32658
   218   000000                     _PR2	set	4043
   219   000000                     _BCLIF	set	32011
   220   000000                     _SSPIF	set	31987
   221                           
   222                           	psect	smallconst
   223   000600                     __psmallconst:
   224                           	callstack 0
   225   000600  00                 	db	0
   226   000601                     STR_11:
   227   000601  20                 	db	32
   228   000602  20                 	db	32
   229   000603  43                 	db	67	;'C'
   230   000604  6F                 	db	111	;'o'
   231   000605  64                 	db	100	;'d'
   232   000606  65                 	db	101	;'e'
   233   000607  20                 	db	32
   234   000608  50                 	db	80	;'P'
   235   000609  61                 	db	97	;'a'
   236   00060A  73                 	db	115	;'s'
   237   00060B  73                 	db	115	;'s'
   238   00060C  65                 	db	101	;'e'
   239   00060D  64                 	db	100	;'d'
   240   00060E  20                 	db	32
   241   00060F  20                 	db	32
   242   000610  20                 	db	32
   243   000611  00                 	db	0
   244   000612                     STR_12:
   245   000612  20                 	db	32
   246   000613  43                 	db	67	;'C'
   247   000614  61                 	db	97	;'a'
   248   000615  72                 	db	114	;'r'
   249   000616  20                 	db	32
   250   000617  42                 	db	66	;'B'
   251   000618  6C                 	db	108	;'l'
   252   000619  61                 	db	97	;'a'
   253   00061A  63                 	db	99	;'c'
   254   00061B  6B                 	db	107	;'k'
   255   00061C  20                 	db	32
   256   00061D  42                 	db	66	;'B'
   257   00061E  6F                 	db	111	;'o'
   258   00061F  78                 	db	120	;'x'
   259   000620  20                 	db	32
   260   000621  20                 	db	32
   261   000622  00                 	db	0
   262   000623                     STR_13:
   263   000623  20                 	db	32
   264   000624  57                 	db	87	;'W'
   265   000625  72                 	db	114	;'r'
   266   000626  6F                 	db	111	;'o'
   267   000627  6E                 	db	110	;'n'
   268   000628  67                 	db	103	;'g'
   269   000629  20                 	db	32
   270   00062A  50                 	db	80	;'P'
   271   00062B  61                 	db	97	;'a'
   272   00062C  73                 	db	115	;'s'
   273   00062D  73                 	db	115	;'s'
   274   00062E  77                 	db	119	;'w'
   275   00062F  6F                 	db	111	;'o'
   276   000630  72                 	db	114	;'r'
   277   000631  64                 	db	100	;'d'
   278   000632  20                 	db	32
   279   000633  00                 	db	0
   280   000634                     STR_10:
   281   000634  20                 	db	32
   282   000635  45                 	db	69	;'E'
   283   000636  6E                 	db	110	;'n'
   284   000637  74                 	db	116	;'t'
   285   000638  65                 	db	101	;'e'
   286   000639  72                 	db	114	;'r'
   287   00063A  20                 	db	32
   288   00063B  50                 	db	80	;'P'
   289   00063C  61                 	db	97	;'a'
   290   00063D  73                 	db	115	;'s'
   291   00063E  73                 	db	115	;'s'
   292   00063F  77                 	db	119	;'w'
   293   000640  6F                 	db	111	;'o'
   294   000641  72                 	db	114	;'r'
   295   000642  64                 	db	100	;'d'
   296   000643  20                 	db	32
   297   000644  00                 	db	0
   298   000645                     STR_14:
   299   000645  20                 	db	32
   300   000646  61                 	db	97	;'a'
   301   000647  74                 	db	116	;'t'
   302   000648  74                 	db	116	;'t'
   303   000649  65                 	db	101	;'e'
   304   00064A  6D                 	db	109	;'m'
   305   00064B  70                 	db	112	;'p'
   306   00064C  74                 	db	116	;'t'
   307   00064D  20                 	db	32
   308   00064E  52                 	db	82	;'R'
   309   00064F  65                 	db	101	;'e'
   310   000650  6D                 	db	109	;'m'
   311   000651  61                 	db	97	;'a'
   312   000652  69                 	db	105	;'i'
   313   000653  6E                 	db	110	;'n'
   314   000654  73                 	db	115	;'s'
   315   000655  00                 	db	0
   316   000656                     STR_9:
   317   000656  20                 	db	32
   318   000657  20                 	db	32
   319   000658  20                 	db	32
   320   000659  54                 	db	84	;'T'
   321   00065A  69                 	db	105	;'i'
   322   00065B  6D                 	db	109	;'m'
   323   00065C  65                 	db	101	;'e'
   324   00065D  20                 	db	32
   325   00065E  20                 	db	32
   326   00065F  20                 	db	32
   327   000660  20                 	db	32
   328   000661  45                 	db	69	;'E'
   329   000662  20                 	db	32
   330   000663  20                 	db	32
   331   000664  53                 	db	83	;'S'
   332   000665  00                 	db	0
   333   000666                     STR_15:
   334   000666  54                 	db	84	;'T'
   335   000667  72                 	db	114	;'r'
   336   000668  79                 	db	121	;'y'
   337   000669  20                 	db	32
   338   00066A  41                 	db	65	;'A'
   339   00066B  67                 	db	103	;'g'
   340   00066C  61                 	db	97	;'a'
   341   00066D  69                 	db	105	;'i'
   342   00066E  6E                 	db	110	;'n'
   343   00066F  20                 	db	32
   344   000670  6C                 	db	108	;'l'
   345   000671  65                 	db	101	;'e'
   346   000672  66                 	db	102	;'f'
   347   000673  74                 	db	116	;'t'
   348   000674  00                 	db	0
   349   000675                     STR_21:
   350   000675  53                 	db	83	;'S'
   351   000676  65                 	db	101	;'e'
   352   000677  74                 	db	116	;'t'
   353   000678  20                 	db	32
   354   000679  74                 	db	116	;'t'
   355   00067A  69                 	db	105	;'i'
   356   00067B  6D                 	db	109	;'m'
   357   00067C  65                 	db	101	;'e'
   358   00067D  20                 	db	32
   359   00067E  20                 	db	32
   360   00067F  20                 	db	32
   361   000680  20                 	db	32
   362   000681  20                 	db	32
   363   000682  00                 	db	0
   364   000683                     STR_18:
   365   000683  56                 	db	86	;'V'
   366   000684  69                 	db	105	;'i'
   367   000685  65                 	db	101	;'e'
   368   000686  77                 	db	119	;'w'
   369   000687  20                 	db	32
   370   000688  6C                 	db	108	;'l'
   371   000689  6F                 	db	111	;'o'
   372   00068A  67                 	db	103	;'g'
   373   00068B  20                 	db	32
   374   00068C  20                 	db	32
   375   00068D  20                 	db	32
   376   00068E  20                 	db	32
   377   00068F  20                 	db	32
   378   000690  00                 	db	0
   379   000691                     STR_20:
   380   000691  43                 	db	67	;'C'
   381   000692  6C                 	db	108	;'l'
   382   000693  65                 	db	101	;'e'
   383   000694  61                 	db	97	;'a'
   384   000695  72                 	db	114	;'r'
   385   000696  20                 	db	32
   386   000697  6C                 	db	108	;'l'
   387   000698  6F                 	db	111	;'o'
   388   000699  67                 	db	103	;'g'
   389   00069A  20                 	db	32
   390   00069B  20                 	db	32
   391   00069C  20                 	db	32
   392   00069D  20                 	db	32
   393   00069E  00                 	db	0
   394   00069F                     STR_22:
   395   00069F  43                 	db	67	;'C'
   396   0006A0  68                 	db	104	;'h'
   397   0006A1  61                 	db	97	;'a'
   398   0006A2  6E                 	db	110	;'n'
   399   0006A3  67                 	db	103	;'g'
   400   0006A4  65                 	db	101	;'e'
   401   0006A5  20                 	db	32
   402   0006A6  50                 	db	80	;'P'
   403   0006A7  61                 	db	97	;'a'
   404   0006A8  73                 	db	115	;'s'
   405   0006A9  73                 	db	115	;'s'
   406   0006AA  20                 	db	32
   407   0006AB  20                 	db	32
   408   0006AC  00                 	db	0
   409   0006AD                     STR_19:
   410   0006AD  44                 	db	68	;'D'
   411   0006AE  6F                 	db	111	;'o'
   412   0006AF  77                 	db	119	;'w'
   413   0006B0  6E                 	db	110	;'n'
   414   0006B1  6C                 	db	108	;'l'
   415   0006B2  6F                 	db	111	;'o'
   416   0006B3  61                 	db	97	;'a'
   417   0006B4  64                 	db	100	;'d'
   418   0006B5  20                 	db	32
   419   0006B6  6C                 	db	108	;'l'
   420   0006B7  6F                 	db	111	;'o'
   421   0006B8  67                 	db	103	;'g'
   422   0006B9  20                 	db	32
   423   0006BA  00                 	db	0
   424   0006BB                     STR_16:
   425   0006BB  57                 	db	87	;'W'
   426   0006BC  61                 	db	97	;'a'
   427   0006BD  69                 	db	105	;'i'
   428   0006BE  74                 	db	116	;'t'
   429   0006BF  20                 	db	32
   430   0006C0  66                 	db	102	;'f'
   431   0006C1  6F                 	db	111	;'o'
   432   0006C2  72                 	db	114	;'r'
   433   0006C3  00                 	db	0
   434   0006C4                     STR_17:
   435   0006C4  20                 	db	32
   436   0006C5  73                 	db	115	;'s'
   437   0006C6  20                 	db	32
   438   0006C7  20                 	db	32
   439   0006C8  00                 	db	0
   440   0006C9                     STR_8:
   441   0006C9  43                 	db	67	;'C'
   442   0006CA  20                 	db	32
   443   0006CB  00                 	db	0
   444   0006CC                     STR_3:
   445   0006CC  47                 	db	71	;'G'
   446   0006CD  31                 	db	49	;'1'
   447   0006CE  00                 	db	0
   448   0006CF                     STR_4:
   449   0006CF  47                 	db	71	;'G'
   450   0006D0  32                 	db	50	;'2'
   451   0006D1  00                 	db	0
   452   0006D2                     STR_5:
   453   0006D2  47                 	db	71	;'G'
   454   0006D3  33                 	db	51	;'3'
   455   0006D4  00                 	db	0
   456   0006D5                     STR_6:
   457   0006D5  47                 	db	71	;'G'
   458   0006D6  34                 	db	52	;'4'
   459   0006D7  00                 	db	0
   460   0006D8                     STR_2:
   461   0006D8  47                 	db	71	;'G'
   462   0006D9  4E                 	db	78	;'N'
   463   0006DA  00                 	db	0
   464   0006DB                     STR_1:
   465   0006DB  4F                 	db	79	;'O'
   466   0006DC  4E                 	db	78	;'N'
   467   0006DD  00                 	db	0
   468   0006DE                     STR_7:
   469   0006DE  47                 	db	71	;'G'
   470   0006DF  52                 	db	82	;'R'
   471   0006E0  00                 	db	0
   472   0006E1  00                 	db	0	; dummy byte at the end
   473   000000                     
   474                           ; #config settings
   475                           
   476                           	psect	cinit
   477   001AB6                     __pcinit:
   478                           	callstack 0
   479   001AB6                     start_initialization:
   480                           	callstack 0
   481   001AB6                     __initialization:
   482                           	callstack 0
   483                           
   484                           ; Initialize objects allocated to BANK0 (35 bytes)
   485                           ; load TBLPTR registers with __pidataBANK0
   486   001AB6  0EC8               	movlw	low __pidataBANK0
   487   001AB8  6EF6               	movwf	tblptrl,c
   488   001ABA  0E1C               	movlw	high __pidataBANK0
   489   001ABC  6EF7               	movwf	tblptrh,c
   490   001ABE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   491   001AC0  6EF8               	movwf	tblptru,c
   492   001AC2  EE00  F060         	lfsr	0,__pdataBANK0
   493   001AC6  EE10 F023          	lfsr	1,35
   494   001ACA                     copy_data0:
   495   001ACA  0009               	tblrd		*+
   496   001ACC  CFF5 FFEE          	movff	tablat,postinc0
   497   001AD0  50E5               	movf	postdec1,w,c
   498   001AD2  50E1               	movf	fsr1l,w,c
   499   001AD4  E1FA               	bnz	copy_data0
   500                           
   501                           ; Initialize objects allocated to COMRAM (8 bytes)
   502                           ; load TBLPTR registers with __pidataCOMRAM
   503   001AD6  0EDE               	movlw	low __pidataCOMRAM
   504   001AD8  6EF6               	movwf	tblptrl,c
   505   001ADA  0E1D               	movlw	high __pidataCOMRAM
   506   001ADC  6EF7               	movwf	tblptrh,c
   507   001ADE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   508   001AE0  6EF8               	movwf	tblptru,c
   509   001AE2  EE00  F055         	lfsr	0,__pdataCOMRAM
   510   001AE6  EE10 F008          	lfsr	1,8
   511   001AEA                     copy_data1:
   512   001AEA  0009               	tblrd		*+
   513   001AEC  CFF5 FFEE          	movff	tablat,postinc0
   514   001AF0  50E5               	movf	postdec1,w,c
   515   001AF2  50E1               	movf	fsr1l,w,c
   516   001AF4  E1FA               	bnz	copy_data1
   517                           
   518                           ; Clear objects allocated to BANK0 (28 bytes)
   519   001AF6  EE00  F083         	lfsr	0,__pbssBANK0
   520   001AFA  0E1C               	movlw	28
   521   001AFC                     clear_0:
   522   001AFC  6AEE               	clrf	postinc0,c
   523   001AFE  06E8               	decf	wreg,f,c
   524   001B00  E1FD               	bnz	clear_0
   525                           
   526                           ; Clear objects allocated to COMRAM (24 bytes)
   527   001B02  EE00  F03D         	lfsr	0,__pbssCOMRAM
   528   001B06  0E18               	movlw	24
   529   001B08                     clear_1:
   530   001B08  6AEE               	clrf	postinc0,c
   531   001B0A  06E8               	decf	wreg,f,c
   532   001B0C  E1FD               	bnz	clear_1
   533   001B0E                     end_of_initialization:
   534                           	callstack 0
   535   001B0E                     __end_of__initialization:
   536                           	callstack 0
   537   001B0E  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   538   001B10  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   539   001B12  0E00               	movlw	low (__Lmediumconst shr (0+16))
   540   001B14  6EF8               	movwf	tblptru,c
   541   001B16  0100               	movlb	0
   542   001B18  EF78  F009         	goto	_main	;jump to C main() function
   543                           
   544                           	psect	bssCOMRAM
   545   00003D                     __pbssCOMRAM:
   546                           	callstack 0
   547   00003D                     _clock_reg:
   548                           	callstack 0
   549   00003D                     	ds	3
   550   000040                     scrolllog@out:
   551                           	callstack 0
   552   000040                     	ds	2
   553   000042                     _press:
   554                           	callstack 0
   555   000042                     	ds	2
   556   000044                     _compareflag:
   557                           	callstack 0
   558   000044                     	ds	2
   559   000046                     _enterflag:
   560                           	callstack 0
   561   000046                     	ds	2
   562   000048                     _blinkflag:
   563                           	callstack 0
   564   000048                     	ds	2
   565   00004A                     _blink:
   566                           	callstack 0
   567   00004A                     	ds	2
   568   00004C                     isr@count:
   569                           	callstack 0
   570   00004C                     	ds	2
   571   00004E                     scrolllog@longPressActive:
   572                           	callstack 0
   573   00004E                     	ds	1
   574   00004F                     _logg:
   575                           	callstack 0
   576   00004F                     	ds	1
   577   000050                     _i:
   578                           	callstack 0
   579   000050                     	ds	1
   580   000051                     read_switches@uckey:
   581                           	callstack 0
   582   000051                     	ds	1
   583   000052                     gear_monitor@crashflag:
   584                           	callstack 0
   585   000052                     	ds	1
   586   000053                     gear_monitor@signindex:
   587                           	callstack 0
   588   000053                     	ds	1
   589   000054                     _mpos:
   590                           	callstack 0
   591   000054                     	ds	1
   592                           
   593                           	psect	dataCOMRAM
   594   000055                     __pdataCOMRAM:
   595                           	callstack 0
   596   000055                     _tryflag:
   597                           	callstack 0
   598   000055                     	ds	2
   599   000057                     _sec:
   600                           	callstack 0
   601   000057                     	ds	2
   602   000059                     _controlflag:
   603                           	callstack 0
   604   000059                     	ds	2
   605   00005B                     _star:
   606                           	callstack 0
   607   00005B                     	ds	1
   608   00005C                     read_switches@uconce:
   609                           	callstack 0
   610   00005C                     	ds	1
   611                           
   612                           	psect	bssBANK0
   613   000083                     __pbssBANK0:
   614                           	callstack 0
   615   000083                     _wait:
   616                           	callstack 0
   617   000083                     	ds	4
   618   000087                     scrolllog@longPressTimer:
   619                           	callstack 0
   620   000087                     	ds	2
   621   000089                     _p:
   622                           	callstack 0
   623   000089                     	ds	2
   624   00008B                     _k:
   625                           	callstack 0
   626   00008B                     	ds	2
   627   00008D                     _min:
   628                           	callstack 0
   629   00008D                     	ds	2
   630   00008F                     _logout:
   631                           	callstack 0
   632   00008F                     	ds	2
   633   000091                     _time:
   634                           	callstack 0
   635   000091                     	ds	9
   636   00009A                     _uckey:
   637                           	callstack 0
   638   00009A                     	ds	5
   639                           
   640                           	psect	dataBANK0
   641   000060                     __pdataBANK0:
   642                           	callstack 0
   643   000060                     _signature:
   644                           	callstack 0
   645   000060                     	ds	16
   646   000070                     _scrolling:
   647                           	callstack 0
   648   000070                     	ds	10
   649   00007A                     _notpressed:
   650                           	callstack 0
   651   00007A                     	ds	4
   652   00007E                     _pass:
   653                           	callstack 0
   654   00007E                     	ds	5
   655                           
   656                           	psect	cstackCOMRAM
   657   000001                     __pcstackCOMRAM:
   658                           	callstack 0
   659   000001                     ?_read_adc:
   660                           	callstack 0
   661   000001                     ?_mystrcmp:
   662                           	callstack 0
   663   000001                     ?___awdiv:
   664                           	callstack 0
   665   000001                     ?___lwdiv:
   666                           	callstack 0
   667   000001                     clcd_write@control_bit:
   668                           	callstack 0
   669   000001                     read_switches@ucdetection:
   670                           	callstack 0
   671   000001                     i2c_write@data:
   672                           	callstack 0
   673   000001                     mystrcmp@s1:
   674                           	callstack 0
   675   000001                     ___awdiv@dividend:
   676                           	callstack 0
   677   000001                     ___lwdiv@dividend:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x0
   681   000001                     	ds	1
   682   000002                     clcd_write@byte:
   683                           	callstack 0
   684   000002                     write_ds1307@data:
   685                           	callstack 0
   686   000002                     read_ds1307@address:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x1
   690   000002                     	ds	1
   691   000003                     ??_init_clcd:
   692   000003                     ??_read_adc:
   693   000003                     write_ds1307@address:
   694                           	callstack 0
   695   000003                     read_ds1307@data:
   696                           	callstack 0
   697   000003                     clcd_print@data:
   698                           	callstack 0
   699   000003                     mystrcmp@s2:
   700                           	callstack 0
   701   000003                     ___awdiv@divisor:
   702                           	callstack 0
   703   000003                     ___lwdiv@divisor:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x2
   707   000003                     	ds	1
   708   000004                     init_ds1307@dummy:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x3
   712   000004                     	ds	1
   713   000005                     read_adc@channel:
   714                           	callstack 0
   715   000005                     clcd_print@addr:
   716                           	callstack 0
   717   000005                     ___awdiv@counter:
   718                           	callstack 0
   719   000005                     ___lwdiv@quotient:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x4
   723   000005                     	ds	1
   724   000006                     ?___xxtofl:
   725                           	callstack 0
   726   000006                     ___awdiv@sign:
   727                           	callstack 0
   728   000006                     ___xxtofl@val:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x5
   732   000006                     	ds	1
   733   000007                     ___lwdiv@counter:
   734                           	callstack 0
   735   000007                     mystrcmp@i:
   736                           	callstack 0
   737   000007                     ___awdiv@quotient:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x6
   741   000007                     	ds	2
   742   000009                     ?___awmod:
   743                           	callstack 0
   744   000009                     ___awmod@dividend:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x8
   748   000009                     	ds	1
   749   00000A                     ??___xxtofl:
   750                           
   751                           ; 1 bytes @ 0x9
   752   00000A                     	ds	1
   753   00000B                     ___awmod@divisor:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0xA
   757   00000B                     	ds	2
   758   00000D                     ___awmod@counter:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0xC
   762   00000D                     	ds	1
   763   00000E                     ___awmod@sign:
   764                           	callstack 0
   765   00000E                     ___xxtofl@sign:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0xD
   769   00000E                     	ds	1
   770   00000F                     clcd_putch@addr:
   771                           	callstack 0
   772   00000F                     ___xxtofl@exp:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0xE
   776   00000F                     	ds	1
   777   000010                     clcd_putch@data:
   778                           	callstack 0
   779   000010                     ___xxtofl@arg:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0xF
   783   000010                     	ds	1
   784   000011                     ??_gear_monitor:
   785   000011                     scrolllog@keys:
   786                           	callstack 0
   787   000011                     display_speed@usadc:
   788                           	callstack 0
   789   000011                     logscreen@wait:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x10
   793   000011                     	ds	1
   794   000012                     ??_scrolllog:
   795                           
   796                           ; 1 bytes @ 0x11
   797   000012                     	ds	1
   798   000013                     gear_monitor@uckey:
   799                           	callstack 0
   800   000013                     logscreen@key:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x12
   804   000013                     	ds	1
   805   000014                     ?___fldiv:
   806                           	callstack 0
   807   000014                     scrolllog@key:
   808                           	callstack 0
   809   000014                     display_dashboard@usads:
   810                           	callstack 0
   811   000014                     ___fldiv@b:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x13
   815   000014                     	ds	2
   816   000016                     display_dashboard@uckey:
   817                           	callstack 0
   818                           
   819                           ; 1 bytes @ 0x15
   820   000016                     	ds	2
   821   000018                     ___fldiv@a:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x17
   825   000018                     	ds	4
   826   00001C                     ??___fldiv:
   827                           
   828                           ; 1 bytes @ 0x1B
   829   00001C                     	ds	4
   830   000020                     ___fldiv@rem:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x1F
   834   000020                     	ds	4
   835   000024                     ___fldiv@sign:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x23
   839   000024                     	ds	1
   840   000025                     ___fldiv@new_exp:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x24
   844   000025                     	ds	2
   845   000027                     ___fldiv@grs:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x26
   849   000027                     	ds	4
   850   00002B                     ___fldiv@bexp:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x2A
   854   00002B                     	ds	1
   855   00002C                     ___fldiv@aexp:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0x2B
   859   00002C                     	ds	1
   860   00002D                     ?___fltol:
   861                           	callstack 0
   862   00002D                     ___fltol@f1:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0x2C
   866   00002D                     	ds	4
   867   000031                     ??___fltol:
   868                           
   869                           ; 1 bytes @ 0x30
   870   000031                     	ds	4
   871   000035                     ___fltol@sign1:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x34
   875   000035                     	ds	1
   876   000036                     ___fltol@exp1:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x35
   880   000036                     	ds	1
   881   000037                     ??_main:
   882                           
   883                           ; 1 bytes @ 0x36
   884   000037                     	ds	2
   885   000039                     main@usAdc:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x38
   889   000039                     	ds	2
   890   00003B                     main@uc1Key:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x3A
   894   00003B                     	ds	1
   895   00003C                     main@ucKey:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x3B
   899   00003C                     	ds	1
   900                           
   901 ;;
   902 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   903 ;;
   904 ;; *************** function _main *****************
   905 ;; Defined at:
   906 ;;		line 21 in file "main.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  usAdc           2   56[COMRAM] unsigned short 
   911 ;;  ucKey           1   59[COMRAM] unsigned char 
   912 ;;  uc1Key          1   58[COMRAM] unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   922 ;;      Params:         0       0       0       0       0       0       0
   923 ;;      Locals:         4       0       0       0       0       0       0
   924 ;;      Temps:          2       0       0       0       0       0       0
   925 ;;      Totals:         6       0       0       0       0       0       0
   926 ;;Total ram usage:        6 bytes
   927 ;; Hardware stack levels required when called: 8
   928 ;; This function calls:
   929 ;;		___fldiv
   930 ;;		___fltol
   931 ;;		___xxtofl
   932 ;;		_clcd_write
   933 ;;		_display_dashboard
   934 ;;		_init_config
   935 ;;		_logscreen
   936 ;;		_read_adc
   937 ;;		_read_switches
   938 ;;		_scrolllog
   939 ;; This function is called by:
   940 ;;		Startup code after reset
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text0
   945   0012F0                     __ptext0:
   946                           	callstack 0
   947   0012F0                     _main:
   948                           	callstack 23
   949   0012F0                     
   950                           ;main.c: 22:     init_config();
   951   0012F0  EC94  F00E         	call	_init_config	;wreg free
   952   0012F4                     l38:
   953                           
   954                           ;main.c: 26:         usAdc = (unsigned short)(read_adc(4)/10.33);
   955   0012F4  0EAE               	movlw	174
   956   0012F6  6E18               	movwf	___fldiv@a^0,c
   957   0012F8  0E47               	movlw	71
   958   0012FA  6E19               	movwf	(___fldiv@a+1)^0,c
   959   0012FC  0E25               	movlw	37
   960   0012FE  6E1A               	movwf	(___fldiv@a+2)^0,c
   961   001300  0E41               	movlw	65
   962   001302  6E1B               	movwf	(___fldiv@a+3)^0,c
   963   001304  0E04               	movlw	4
   964   001306  EC01  F00E         	call	_read_adc
   965   00130A  C001  F006         	movff	?_read_adc,___xxtofl@val
   966   00130E  C002  F007         	movff	?_read_adc+1,___xxtofl@val+1
   967   001312  6A08               	clrf	(___xxtofl@val+2)^0,c
   968   001314  6A09               	clrf	(___xxtofl@val+3)^0,c
   969   001316  0E00               	movlw	0
   970   001318  EC1B  F008         	call	___xxtofl
   971   00131C  C006  F014         	movff	?___xxtofl,___fldiv@b
   972   001320  C007  F015         	movff	?___xxtofl+1,___fldiv@b+1
   973   001324  C008  F016         	movff	?___xxtofl+2,___fldiv@b+2
   974   001328  C009  F017         	movff	?___xxtofl+3,___fldiv@b+3
   975   00132C  EC71  F003         	call	___fldiv	;wreg free
   976   001330  C014  F02D         	movff	?___fldiv,___fltol@f1
   977   001334  C015  F02E         	movff	?___fldiv+1,___fltol@f1+1
   978   001338  C016  F02F         	movff	?___fldiv+2,___fltol@f1+2
   979   00133C  C017  F030         	movff	?___fldiv+3,___fltol@f1+3
   980   001340  ECF5  F008         	call	___fltol	;wreg free
   981   001344  C02D  F039         	movff	?___fltol,main@usAdc
   982   001348  C02E  F03A         	movff	?___fltol+1,main@usAdc+1
   983                           
   984                           ;main.c: 27:         ucKey = read_switches(1);
   985   00134C  0E01               	movlw	1
   986   00134E  EC7A  F00C         	call	_read_switches
   987   001352  6E3C               	movwf	main@ucKey^0,c
   988                           
   989                           ;main.c: 28:         uc1Key = read_switches(0);
   990   001354  0E00               	movlw	0
   991   001356  EC7A  F00C         	call	_read_switches
   992   00135A  6E3B               	movwf	main@uc1Key^0,c
   993   00135C                     
   994                           ;main.c: 29:         if(ucKey == 10)
   995   00135C  0E0A               	movlw	10
   996   00135E  183C               	xorwf	main@ucKey^0,w,c
   997   001360  A4D8               	btfss	status,2,c
   998   001362  EFB5  F009         	goto	u2241
   999   001366  EFB7  F009         	goto	u2240
  1000   00136A                     u2241:
  1001   00136A  EFD9  F009         	goto	l2932
  1002   00136E                     u2240:
  1003   00136E                     
  1004                           ;main.c: 30:         {;main.c: 31:             controlflag=0;
  1005   00136E  0E00               	movlw	0
  1006   001370  6E5A               	movwf	(_controlflag+1)^0,c
  1007   001372  0E00               	movlw	0
  1008   001374  6E59               	movwf	_controlflag^0,c
  1009   001376                     
  1010                           ;main.c: 32:             clcd_write(0x01, 0);
  1011   001376  0E00               	movlw	0
  1012   001378  6E01               	movwf	clcd_write@control_bit^0,c
  1013   00137A  0E01               	movlw	1
  1014   00137C  EC36  F00E         	call	_clcd_write
  1015   001380  EFD9  F009         	goto	l2932
  1016   001384                     l2920:
  1017                           
  1018                           ;main.c: 37:                 logscreen(ucKey);
  1019   001384  503C               	movf	main@ucKey^0,w,c
  1020   001386  EC3E  F005         	call	_logscreen
  1021   00138A                     l2922:
  1022                           
  1023                           ;main.c: 38:                 mpos=0;
  1024   00138A  0E00               	movlw	0
  1025   00138C  6E54               	movwf	_mpos^0,c
  1026                           
  1027                           ;main.c: 39:                 break;
  1028   00138E  EF7A  F009         	goto	l38
  1029   001392                     l2924:
  1030                           
  1031                           ;main.c: 41:                 display_dashboard(ucKey, usAdc);
  1032   001392  C039  F014         	movff	main@usAdc,display_dashboard@usads
  1033   001396  C03A  F015         	movff	main@usAdc+1,display_dashboard@usads+1
  1034   00139A  503C               	movf	main@ucKey^0,w,c
  1035   00139C  EC1C  F00E         	call	_display_dashboard
  1036   0013A0  EFC5  F009         	goto	l2922
  1037   0013A4                     l2928:
  1038                           
  1039                           ;main.c: 45:                 scrolllog(ucKey, uc1Key);
  1040   0013A4  C03B  F011         	movff	main@uc1Key,scrolllog@keys
  1041   0013A8  503C               	movf	main@ucKey^0,w,c
  1042   0013AA  ECDF  F006         	call	_scrolllog
  1043                           
  1044                           ;main.c: 46:                 break;
  1045   0013AE  EF7A  F009         	goto	l38
  1046   0013B2                     l2932:
  1047   0013B2  C059  F037         	movff	_controlflag,??_main
  1048   0013B6  C05A  F038         	movff	_controlflag+1,??_main+1
  1049                           
  1050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1051                           ; Switch size 1, requested type "simple"
  1052                           ; Number of cases is 1, Range of values is 0 to 0
  1053                           ; switch strategies available:
  1054                           ; Name         Instructions Cycles
  1055                           ; simple_byte            4     3 (average)
  1056                           ;	Chosen strategy is simple_byte
  1057   0013BA  5038               	movf	(??_main+1)^0,w,c
  1058   0013BC  0A00               	xorlw	0	; case 0
  1059   0013BE  B4D8               	btfsc	status,2,c
  1060   0013C0  EFE4  F009         	goto	l2968
  1061   0013C4  EF7A  F009         	goto	l38
  1062   0013C8                     l2968:
  1063                           
  1064                           ; Switch size 1, requested type "simple"
  1065                           ; Number of cases is 4, Range of values is 0 to 4
  1066                           ; switch strategies available:
  1067                           ; Name         Instructions Cycles
  1068                           ; simple_byte           13     7 (average)
  1069                           ;	Chosen strategy is simple_byte
  1070   0013C8  5037               	movf	??_main^0,w,c
  1071   0013CA  0A00               	xorlw	0	; case 0
  1072   0013CC  B4D8               	btfsc	status,2,c
  1073   0013CE  EFC2  F009         	goto	l2920
  1074   0013D2  0A01               	xorlw	1	; case 1
  1075   0013D4  B4D8               	btfsc	status,2,c
  1076   0013D6  EFC9  F009         	goto	l2924
  1077   0013DA  0A02               	xorlw	2	; case 3
  1078   0013DC  B4D8               	btfsc	status,2,c
  1079   0013DE  EFD2  F009         	goto	l2928
  1080   0013E2  0A07               	xorlw	7	; case 4
  1081   0013E4  B4D8               	btfsc	status,2,c
  1082   0013E6  EF7A  F009         	goto	l38
  1083   0013EA  EF7A  F009         	goto	l38
  1084   0013EE  EF07  F000         	goto	start
  1085   0013F2                     __end_of_main:
  1086                           	callstack 0
  1087                           
  1088 ;; *************** function _scrolllog *****************
  1089 ;; Defined at:
  1090 ;;		line 12 in file "scrolldisplay.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  key             1    wreg     unsigned char 
  1093 ;;  keys            1   16[COMRAM] unsigned char 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  key             1   19[COMRAM] unsigned char 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1105 ;;      Params:         1       0       0       0       0       0       0
  1106 ;;      Locals:         1       0       0       0       0       0       0
  1107 ;;      Temps:          2       0       0       0       0       0       0
  1108 ;;      Totals:         4       0       0       0       0       0       0
  1109 ;;Total ram usage:        4 bytes
  1110 ;; Hardware stack levels used: 1
  1111 ;; Hardware stack levels required when called: 3
  1112 ;; This function calls:
  1113 ;;		_clcd_print
  1114 ;;		_clcd_putch
  1115 ;;		_clcd_write
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text1
  1122   000DBE                     __ptext1:
  1123                           	callstack 0
  1124   000DBE                     _scrolllog:
  1125                           	callstack 27
  1126                           
  1127                           ;incstack = 0
  1128                           ;scrolllog@key stored from wreg
  1129   000DBE  6E14               	movwf	scrolllog@key^0,c
  1130   000DC0                     
  1131                           ;scrolldisplay.c: 13:     static unsigned int out = 0;;scrolldisplay.c: 14:     static u
      +                          nsigned int longPressTimer = 0;;scrolldisplay.c: 15:     static char longPressActive = 0
      +                          ;;scrolldisplay.c: 17:     if (keys == 12) {
  1132   000DC0  0E0C               	movlw	12
  1133   000DC2  1811               	xorwf	scrolllog@keys^0,w,c
  1134   000DC4  A4D8               	btfss	status,2,c
  1135   000DC6  EFE7  F006         	goto	u1731
  1136   000DCA  EFE9  F006         	goto	u1730
  1137   000DCE                     u1731:
  1138   000DCE  EF1C  F007         	goto	l2626
  1139   000DD2                     u1730:
  1140   000DD2                     
  1141                           ;scrolldisplay.c: 18:         if (out++ == 4000) {
  1142   000DD2  4A40               	infsnz	scrolllog@out^0,f,c
  1143   000DD4  2A41               	incf	(scrolllog@out+1)^0,f,c
  1144   000DD6  0EA1               	movlw	161
  1145   000DD8  1840               	xorwf	scrolllog@out^0,w,c
  1146   000DDA  E107               	bnz	u1741
  1147   000DDC  0E0F               	movlw	15
  1148   000DDE  1841               	xorwf	(scrolllog@out+1)^0,w,c
  1149   000DE0  A4D8               	btfss	status,2,c
  1150   000DE2  EFF5  F006         	goto	u1741
  1151   000DE6  EFF7  F006         	goto	u1740
  1152   000DEA                     u1741:
  1153   000DEA  EF06  F007         	goto	l2620
  1154   000DEE                     u1740:
  1155   000DEE                     
  1156                           ;scrolldisplay.c: 19:             out = 0;
  1157   000DEE  0E00               	movlw	0
  1158   000DF0  6E41               	movwf	(scrolllog@out+1)^0,c
  1159   000DF2  0E00               	movlw	0
  1160   000DF4  6E40               	movwf	scrolllog@out^0,c
  1161                           
  1162                           ;scrolldisplay.c: 20:             controlflag = 1;
  1163   000DF6  0E00               	movlw	0
  1164   000DF8  6E5A               	movwf	(_controlflag+1)^0,c
  1165   000DFA  0E01               	movlw	1
  1166   000DFC  6E59               	movwf	_controlflag^0,c
  1167   000DFE                     
  1168                           ;scrolldisplay.c: 21:             clcd_write(0x01, 0);
  1169   000DFE  0E00               	movlw	0
  1170   000E00  6E01               	movwf	clcd_write@control_bit^0,c
  1171   000E02  0E01               	movlw	1
  1172   000E04  EC36  F00E         	call	_clcd_write
  1173   000E08  EF1A  F008         	goto	l387
  1174   000E0C                     l2620:
  1175                           
  1176                           ;scrolldisplay.c: 24:         longPressTimer++;
  1177   000E0C  0100               	movlb	0	; () banked
  1178   000E0E  4B87               	infsnz	scrolllog@longPressTimer& (0+255),f,b
  1179   000E10  2B88               	incf	(scrolllog@longPressTimer+1)& (0+255),f,b
  1180   000E12                     
  1181                           ; BSR set to: 0
  1182                           ;scrolldisplay.c: 25:         if (longPressTimer >= 2000) {
  1183   000E12  0ED0               	movlw	208
  1184   000E14  5D87               	subwf	scrolllog@longPressTimer& (0+255),w,b
  1185   000E16  0E07               	movlw	7
  1186   000E18  5988               	subwfb	(scrolllog@longPressTimer+1)& (0+255),w,b
  1187   000E1A  A0D8               	btfss	status,0,c
  1188   000E1C  EF12  F007         	goto	u1751
  1189   000E20  EF14  F007         	goto	u1750
  1190   000E24                     u1751:
  1191   000E24  EF23  F007         	goto	l2628
  1192   000E28                     u1750:
  1193   000E28                     
  1194                           ; BSR set to: 0
  1195                           ;scrolldisplay.c: 26:             longPressActive = 1;
  1196   000E28  0E01               	movlw	1
  1197   000E2A  6E4E               	movwf	scrolllog@longPressActive^0,c
  1198                           
  1199                           ;scrolldisplay.c: 27:             longPressTimer = 0;
  1200   000E2C  0E00               	movlw	0
  1201   000E2E  6F88               	movwf	(scrolllog@longPressTimer+1)& (0+255),b
  1202   000E30  0E00               	movlw	0
  1203   000E32  6F87               	movwf	scrolllog@longPressTimer& (0+255),b
  1204   000E34  EF23  F007         	goto	l2628
  1205   000E38                     l2626:
  1206                           
  1207                           ;scrolldisplay.c: 30:         longPressActive = 0;
  1208   000E38  0E00               	movlw	0
  1209   000E3A  6E4E               	movwf	scrolllog@longPressActive^0,c
  1210                           
  1211                           ;scrolldisplay.c: 31:         longPressTimer = 0;
  1212   000E3C  0E00               	movlw	0
  1213   000E3E  0100               	movlb	0	; () banked
  1214   000E40  6F88               	movwf	(scrolllog@longPressTimer+1)& (0+255),b
  1215   000E42  0E00               	movlw	0
  1216   000E44  6F87               	movwf	scrolllog@longPressTimer& (0+255),b
  1217   000E46                     l2628:
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;scrolldisplay.c: 34:     if (press == 0) {
  1221   000E46  5042               	movf	_press^0,w,c
  1222   000E48  1043               	iorwf	(_press+1)^0,w,c
  1223   000E4A  A4D8               	btfss	status,2,c
  1224   000E4C  EF2A  F007         	goto	u1761
  1225   000E50  EF2C  F007         	goto	u1760
  1226   000E54                     u1761:
  1227   000E54  EF55  F007         	goto	l2636
  1228   000E58                     u1760:
  1229   000E58                     
  1230                           ; BSR set to: 0
  1231                           ;scrolldisplay.c: 35:         clcd_putch('*', (0x80 + (1)));
  1232   000E58  0E81               	movlw	129
  1233   000E5A  6E0F               	movwf	clcd_putch@addr^0,c
  1234   000E5C  0E2A               	movlw	42
  1235   000E5E  ECAE  F00E         	call	_clcd_putch
  1236   000E62                     
  1237                           ;scrolldisplay.c: 36:         clcd_print((unsigned char*) scrolling[logg], (0x80 + (3)))
      +                          ;
  1238   000E62  504F               	movf	_logg^0,w,c
  1239   000E64  0D02               	mullw	2
  1240   000E66  0E70               	movlw	low _scrolling
  1241   000E68  24F3               	addwf	243,w,c
  1242   000E6A  6ED9               	movwf	fsr2l,c
  1243   000E6C  0E00               	movlw	high _scrolling
  1244   000E6E  20F4               	addwfc	prodh,w,c
  1245   000E70  6EDA               	movwf	fsr2h,c
  1246   000E72  CFDE F003          	movff	postinc2,clcd_print@data
  1247   000E76  CFDD F004          	movff	postdec2,clcd_print@data+1
  1248   000E7A  0E83               	movlw	131
  1249   000E7C  6E05               	movwf	clcd_print@addr^0,c
  1250   000E7E  EC25  F00D         	call	_clcd_print	;wreg free
  1251   000E82                     
  1252                           ;scrolldisplay.c: 37:         clcd_print((unsigned char*) scrolling[logg + 1], (0xC0 + (
      +                          3)));
  1253   000E82  504F               	movf	_logg^0,w,c
  1254   000E84  6E12               	movwf	??_scrolllog^0,c
  1255   000E86  6A13               	clrf	(??_scrolllog+1)^0,c
  1256   000E88  90D8               	bcf	status,0,c
  1257   000E8A  3612               	rlcf	??_scrolllog^0,f,c
  1258   000E8C  3613               	rlcf	(??_scrolllog+1)^0,f,c
  1259   000E8E  0E72               	movlw	low (_scrolling+2)
  1260   000E90  2412               	addwf	??_scrolllog^0,w,c
  1261   000E92  6ED9               	movwf	fsr2l,c
  1262   000E94  0E00               	movlw	high (_scrolling+2)
  1263   000E96  2013               	addwfc	(??_scrolllog+1)^0,w,c
  1264   000E98  6EDA               	movwf	fsr2h,c
  1265   000E9A  CFDE F003          	movff	postinc2,clcd_print@data
  1266   000E9E  CFDD F004          	movff	postdec2,clcd_print@data+1
  1267   000EA2  0EC3               	movlw	195
  1268   000EA4  6E05               	movwf	clcd_print@addr^0,c
  1269   000EA6  EC25  F00D         	call	_clcd_print	;wreg free
  1270   000EAA                     l2636:
  1271                           
  1272                           ;scrolldisplay.c: 40:     if ((key == 12) && (logg < 3)) {
  1273   000EAA  0E0C               	movlw	12
  1274   000EAC  1814               	xorwf	scrolllog@key^0,w,c
  1275   000EAE  A4D8               	btfss	status,2,c
  1276   000EB0  EF5C  F007         	goto	u1771
  1277   000EB4  EF5E  F007         	goto	u1770
  1278   000EB8                     u1771:
  1279   000EB8  EF9B  F007         	goto	l2652
  1280   000EBC                     u1770:
  1281   000EBC  0E03               	movlw	3
  1282   000EBE  604F               	cpfslt	_logg^0,c
  1283   000EC0  EF64  F007         	goto	u1781
  1284   000EC4  EF66  F007         	goto	u1780
  1285   000EC8                     u1781:
  1286   000EC8  EF9B  F007         	goto	l2652
  1287   000ECC                     u1780:
  1288   000ECC                     
  1289                           ;scrolldisplay.c: 41:         clcd_write(0x01, 0);
  1290   000ECC  0E00               	movlw	0
  1291   000ECE  6E01               	movwf	clcd_write@control_bit^0,c
  1292   000ED0  0E01               	movlw	1
  1293   000ED2  EC36  F00E         	call	_clcd_write
  1294   000ED6                     
  1295                           ;scrolldisplay.c: 42:         logg++;
  1296   000ED6  2A4F               	incf	_logg^0,f,c
  1297   000ED8                     
  1298                           ;scrolldisplay.c: 43:         press = 1;
  1299   000ED8  0E00               	movlw	0
  1300   000EDA  6E43               	movwf	(_press+1)^0,c
  1301   000EDC  0E01               	movlw	1
  1302   000EDE  6E42               	movwf	_press^0,c
  1303   000EE0                     
  1304                           ;scrolldisplay.c: 44:         clcd_putch('*', (0xC0 + (1)));
  1305   000EE0  0EC1               	movlw	193
  1306   000EE2  6E0F               	movwf	clcd_putch@addr^0,c
  1307   000EE4  0E2A               	movlw	42
  1308   000EE6  ECAE  F00E         	call	_clcd_putch
  1309   000EEA                     
  1310                           ;scrolldisplay.c: 45:         clcd_print((unsigned char*) scrolling[logg - 1], (0x80 + (
      +                          3)));
  1311   000EEA  504F               	movf	_logg^0,w,c
  1312   000EEC  6E12               	movwf	??_scrolllog^0,c
  1313   000EEE  6A13               	clrf	(??_scrolllog+1)^0,c
  1314   000EF0  90D8               	bcf	status,0,c
  1315   000EF2  3612               	rlcf	??_scrolllog^0,f,c
  1316   000EF4  3613               	rlcf	(??_scrolllog+1)^0,f,c
  1317   000EF6  0E6E               	movlw	low (_scrolling+65534)
  1318   000EF8  2412               	addwf	??_scrolllog^0,w,c
  1319   000EFA  6ED9               	movwf	fsr2l,c
  1320   000EFC  0E00               	movlw	high (_scrolling+65534)
  1321   000EFE  2013               	addwfc	(??_scrolllog+1)^0,w,c
  1322   000F00  6EDA               	movwf	fsr2h,c
  1323   000F02  CFDE F003          	movff	postinc2,clcd_print@data
  1324   000F06  CFDD F004          	movff	postdec2,clcd_print@data+1
  1325   000F0A  0E83               	movlw	131
  1326   000F0C  6E05               	movwf	clcd_print@addr^0,c
  1327   000F0E  EC25  F00D         	call	_clcd_print	;wreg free
  1328   000F12                     
  1329                           ;scrolldisplay.c: 46:         clcd_print((unsigned char*) scrolling[logg], (0xC0 + (3)))
      +                          ;
  1330   000F12  504F               	movf	_logg^0,w,c
  1331   000F14  0D02               	mullw	2
  1332   000F16  0E70               	movlw	low _scrolling
  1333   000F18  24F3               	addwf	243,w,c
  1334   000F1A  6ED9               	movwf	fsr2l,c
  1335   000F1C  0E00               	movlw	high _scrolling
  1336   000F1E  20F4               	addwfc	prodh,w,c
  1337   000F20  6EDA               	movwf	fsr2h,c
  1338   000F22  CFDE F003          	movff	postinc2,clcd_print@data
  1339   000F26  CFDD F004          	movff	postdec2,clcd_print@data+1
  1340   000F2A  0EC3               	movlw	195
  1341   000F2C  6E05               	movwf	clcd_print@addr^0,c
  1342   000F2E  EC25  F00D         	call	_clcd_print	;wreg free
  1343                           
  1344                           ;scrolldisplay.c: 47:     } else if ((key == 11) && (logg >= 1)) {
  1345   000F32  EF1A  F008         	goto	l387
  1346   000F36                     l2652:
  1347   000F36  0E0B               	movlw	11
  1348   000F38  1814               	xorwf	scrolllog@key^0,w,c
  1349   000F3A  A4D8               	btfss	status,2,c
  1350   000F3C  EFA2  F007         	goto	u1791
  1351   000F40  EFA4  F007         	goto	u1790
  1352   000F44                     u1791:
  1353   000F44  EFE1  F007         	goto	l2668
  1354   000F48                     u1790:
  1355   000F48  504F               	movf	_logg^0,w,c
  1356   000F4A  B4D8               	btfsc	status,2,c
  1357   000F4C  EFAA  F007         	goto	u1801
  1358   000F50  EFAC  F007         	goto	u1800
  1359   000F54                     u1801:
  1360   000F54  EFE1  F007         	goto	l2668
  1361   000F58                     u1800:
  1362   000F58                     
  1363                           ;scrolldisplay.c: 48:         clcd_write(0x01, 0);
  1364   000F58  0E00               	movlw	0
  1365   000F5A  6E01               	movwf	clcd_write@control_bit^0,c
  1366   000F5C  0E01               	movlw	1
  1367   000F5E  EC36  F00E         	call	_clcd_write
  1368   000F62                     
  1369                           ;scrolldisplay.c: 49:         logg--;
  1370   000F62  064F               	decf	_logg^0,f,c
  1371   000F64                     
  1372                           ;scrolldisplay.c: 50:         press = 1;
  1373   000F64  0E00               	movlw	0
  1374   000F66  6E43               	movwf	(_press+1)^0,c
  1375   000F68  0E01               	movlw	1
  1376   000F6A  6E42               	movwf	_press^0,c
  1377   000F6C                     
  1378                           ;scrolldisplay.c: 51:         clcd_putch('*', (0x80 + (1)));
  1379   000F6C  0E81               	movlw	129
  1380   000F6E  6E0F               	movwf	clcd_putch@addr^0,c
  1381   000F70  0E2A               	movlw	42
  1382   000F72  ECAE  F00E         	call	_clcd_putch
  1383   000F76                     
  1384                           ;scrolldisplay.c: 52:         clcd_print((unsigned char*) scrolling[logg], (0x80 + (3)))
      +                          ;
  1385   000F76  504F               	movf	_logg^0,w,c
  1386   000F78  0D02               	mullw	2
  1387   000F7A  0E70               	movlw	low _scrolling
  1388   000F7C  24F3               	addwf	243,w,c
  1389   000F7E  6ED9               	movwf	fsr2l,c
  1390   000F80  0E00               	movlw	high _scrolling
  1391   000F82  20F4               	addwfc	prodh,w,c
  1392   000F84  6EDA               	movwf	fsr2h,c
  1393   000F86  CFDE F003          	movff	postinc2,clcd_print@data
  1394   000F8A  CFDD F004          	movff	postdec2,clcd_print@data+1
  1395   000F8E  0E83               	movlw	131
  1396   000F90  6E05               	movwf	clcd_print@addr^0,c
  1397   000F92  EC25  F00D         	call	_clcd_print	;wreg free
  1398   000F96                     
  1399                           ;scrolldisplay.c: 53:         clcd_print((unsigned char*) scrolling[logg + 1], (0xC0 + (
      +                          3)));
  1400   000F96  504F               	movf	_logg^0,w,c
  1401   000F98  6E12               	movwf	??_scrolllog^0,c
  1402   000F9A  6A13               	clrf	(??_scrolllog+1)^0,c
  1403   000F9C  90D8               	bcf	status,0,c
  1404   000F9E  3612               	rlcf	??_scrolllog^0,f,c
  1405   000FA0  3613               	rlcf	(??_scrolllog+1)^0,f,c
  1406   000FA2  0E72               	movlw	low (_scrolling+2)
  1407   000FA4  2412               	addwf	??_scrolllog^0,w,c
  1408   000FA6  6ED9               	movwf	fsr2l,c
  1409   000FA8  0E00               	movlw	high (_scrolling+2)
  1410   000FAA  2013               	addwfc	(??_scrolllog+1)^0,w,c
  1411   000FAC  6EDA               	movwf	fsr2h,c
  1412   000FAE  CFDE F003          	movff	postinc2,clcd_print@data
  1413   000FB2  CFDD F004          	movff	postdec2,clcd_print@data+1
  1414   000FB6  0EC3               	movlw	195
  1415   000FB8  6E05               	movwf	clcd_print@addr^0,c
  1416   000FBA  EC25  F00D         	call	_clcd_print	;wreg free
  1417                           
  1418                           ;scrolldisplay.c: 54:     } else if (longPressActive && (key == 11) && (logg == 1)) {
  1419   000FBE  EF1A  F008         	goto	l387
  1420   000FC2                     l2668:
  1421   000FC2  504E               	movf	scrolllog@longPressActive^0,w,c
  1422   000FC4  B4D8               	btfsc	status,2,c
  1423   000FC6  EFE7  F007         	goto	u1811
  1424   000FCA  EFE9  F007         	goto	u1810
  1425   000FCE                     u1811:
  1426   000FCE  EF1A  F008         	goto	l387
  1427   000FD2                     u1810:
  1428   000FD2  0E0B               	movlw	11
  1429   000FD4  1814               	xorwf	scrolllog@key^0,w,c
  1430   000FD6  A4D8               	btfss	status,2,c
  1431   000FD8  EFF0  F007         	goto	u1821
  1432   000FDC  EFF2  F007         	goto	u1820
  1433   000FE0                     u1821:
  1434   000FE0  EF1A  F008         	goto	l387
  1435   000FE4                     u1820:
  1436   000FE4  044F               	decf	_logg^0,w,c
  1437   000FE6  A4D8               	btfss	status,2,c
  1438   000FE8  EFF8  F007         	goto	u1831
  1439   000FEC  EFFA  F007         	goto	u1830
  1440   000FF0                     u1831:
  1441   000FF0  EF1A  F008         	goto	l387
  1442   000FF4                     u1830:
  1443   000FF4                     
  1444                           ;scrolldisplay.c: 55:         clcd_write(0x01, 0);
  1445   000FF4  0E00               	movlw	0
  1446   000FF6  6E01               	movwf	clcd_write@control_bit^0,c
  1447   000FF8  0E01               	movlw	1
  1448   000FFA  EC36  F00E         	call	_clcd_write
  1449   000FFE                     
  1450                           ;scrolldisplay.c: 56:         logg = 0;
  1451   000FFE  0E00               	movlw	0
  1452   001000  6E4F               	movwf	_logg^0,c
  1453   001002                     
  1454                           ;scrolldisplay.c: 57:         press = 1;
  1455   001002  0E00               	movlw	0
  1456   001004  6E43               	movwf	(_press+1)^0,c
  1457   001006  0E01               	movlw	1
  1458   001008  6E42               	movwf	_press^0,c
  1459                           
  1460                           ;scrolldisplay.c: 58:         clcd_putch('*', (0x80 + (1)));
  1461   00100A  0E81               	movlw	129
  1462   00100C  6E0F               	movwf	clcd_putch@addr^0,c
  1463   00100E  0E2A               	movlw	42
  1464   001010  ECAE  F00E         	call	_clcd_putch
  1465   001014                     
  1466                           ;scrolldisplay.c: 59:         clcd_print((unsigned char*) scrolling[logg], (0x80 + (3)))
      +                          ;
  1467   001014  C070  F003         	movff	_scrolling,clcd_print@data
  1468   001018  C071  F004         	movff	_scrolling+1,clcd_print@data+1
  1469   00101C  0E83               	movlw	131
  1470   00101E  6E05               	movwf	clcd_print@addr^0,c
  1471   001020  EC25  F00D         	call	_clcd_print	;wreg free
  1472   001024                     
  1473                           ;scrolldisplay.c: 60:         clcd_print((unsigned char*) scrolling[logg + 1], (0xC0 + (
      +                          3)));
  1474   001024  C072  F003         	movff	_scrolling+2,clcd_print@data
  1475   001028  C073  F004         	movff	_scrolling+3,clcd_print@data+1
  1476   00102C  0EC3               	movlw	195
  1477   00102E  6E05               	movwf	clcd_print@addr^0,c
  1478   001030  EC25  F00D         	call	_clcd_print	;wreg free
  1479   001034                     l387:
  1480   001034  0012               	return		;funcret
  1481   001036                     __end_of_scrolllog:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _read_switches *****************
  1485 ;; Defined at:
  1486 ;;		line 10 in file "matrixkeyboard.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  ucdetection     1    wreg     unsigned char 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  ucdetection     1    0[COMRAM] unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      unsigned char 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2, status,0, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1500 ;;      Params:         0       0       0       0       0       0       0
  1501 ;;      Locals:         1       0       0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0
  1503 ;;      Totals:         1       0       0       0       0       0       0
  1504 ;;Total ram usage:        1 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 2
  1507 ;; This function calls:
  1508 ;;		_scan_key
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text2
  1515   0018F4                     __ptext2:
  1516                           	callstack 0
  1517   0018F4                     _read_switches:
  1518                           	callstack 28
  1519                           
  1520                           ;incstack = 0
  1521                           ;read_switches@ucdetection stored from wreg
  1522   0018F4  6E01               	movwf	read_switches@ucdetection^0,c
  1523   0018F6                     
  1524                           ;matrixkeyboard.c: 10: unsigned char read_switches(unsigned char ucdetection);matrixkeyb
      +                          oard.c: 11: {;matrixkeyboard.c: 12:     static unsigned char uconce=1, uckey;;matrixkeyb
      +                          oard.c: 13:     if(ucdetection ==0 )
  1525   0018F6  5001               	movf	read_switches@ucdetection^0,w,c
  1526   0018F8  A4D8               	btfss	status,2,c
  1527   0018FA  EF81  F00C         	goto	u1531
  1528   0018FE  EF83  F00C         	goto	u1530
  1529   001902                     u1531:
  1530   001902  EF87  F00C         	goto	l2472
  1531   001906                     u1530:
  1532   001906                     
  1533                           ;matrixkeyboard.c: 14:         return scan_key();
  1534   001906  ECF0  F00B         	call	_scan_key	;wreg free
  1535   00190A  EFB4  F00C         	goto	l208
  1536   00190E                     l2472:
  1537   00190E  0401               	decf	read_switches@ucdetection^0,w,c
  1538   001910  A4D8               	btfss	status,2,c
  1539   001912  EF8D  F00C         	goto	u1541
  1540   001916  EF8F  F00C         	goto	u1540
  1541   00191A                     u1541:
  1542   00191A  EFB3  F00C         	goto	l2490
  1543   00191E                     u1540:
  1544   00191E                     
  1545                           ;matrixkeyboard.c: 16:     {;matrixkeyboard.c: 17:         uckey = scan_key();
  1546   00191E  ECF0  F00B         	call	_scan_key	;wreg free
  1547   001922  6E51               	movwf	read_switches@uckey^0,c
  1548   001924                     
  1549                           ;matrixkeyboard.c: 18:         if((uckey != 0xFF) && uconce)
  1550   001924  2851               	incf	read_switches@uckey^0,w,c
  1551   001926  B4D8               	btfsc	status,2,c
  1552   001928  EF98  F00C         	goto	u1551
  1553   00192C  EF9A  F00C         	goto	u1550
  1554   001930                     u1551:
  1555   001930  EFA7  F00C         	goto	l2486
  1556   001934                     u1550:
  1557   001934  505C               	movf	read_switches@uconce^0,w,c
  1558   001936  B4D8               	btfsc	status,2,c
  1559   001938  EFA0  F00C         	goto	u1561
  1560   00193C  EFA2  F00C         	goto	u1560
  1561   001940                     u1561:
  1562   001940  EFA7  F00C         	goto	l2486
  1563   001944                     u1560:
  1564   001944                     
  1565                           ;matrixkeyboard.c: 19:         {;matrixkeyboard.c: 20:             uconce=0;
  1566   001944  0E00               	movlw	0
  1567   001946  6E5C               	movwf	read_switches@uconce^0,c
  1568                           
  1569                           ;matrixkeyboard.c: 21:             return uckey;
  1570   001948  5051               	movf	read_switches@uckey^0,w,c
  1571   00194A  EFB4  F00C         	goto	l208
  1572   00194E                     l2486:
  1573   00194E  2851               	incf	read_switches@uckey^0,w,c
  1574   001950  A4D8               	btfss	status,2,c
  1575   001952  EFAD  F00C         	goto	u1571
  1576   001956  EFAF  F00C         	goto	u1570
  1577   00195A                     u1571:
  1578   00195A  EFB3  F00C         	goto	l210
  1579   00195E                     u1570:
  1580   00195E                     
  1581                           ;matrixkeyboard.c: 24:             uconce = 1;
  1582   00195E  0E01               	movlw	1
  1583   001960  6E5C               	movwf	read_switches@uconce^0,c
  1584   001962  EFB3  F00C         	goto	l2490
  1585   001966                     l210:
  1586   001966                     l2490:
  1587                           
  1588                           ;matrixkeyboard.c: 26:     return 0xFF;
  1589   001966  0EFF               	movlw	255
  1590   001968                     l208:
  1591   001968  0012               	return		;funcret
  1592   00196A                     __end_of_read_switches:
  1593                           	callstack 0
  1594                           
  1595 ;; *************** function _scan_key *****************
  1596 ;; Defined at:
  1597 ;;		line 29 in file "matrixkeyboard.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      unsigned char 
  1604 ;; Registers used:
  1605 ;;		wreg
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1611 ;;      Params:         0       0       0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0
  1614 ;;      Totals:         0       0       0       0       0       0       0
  1615 ;;Total ram usage:        0 bytes
  1616 ;; Hardware stack levels used: 1
  1617 ;; Hardware stack levels required when called: 1
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_read_switches
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text3
  1626   0017E0                     __ptext3:
  1627                           	callstack 0
  1628   0017E0                     _scan_key:
  1629                           	callstack 28
  1630   0017E0                     
  1631                           ;matrixkeyboard.c: 31:     PORTBbits.RB5 = 0, PORTBbits.RB6 = 1, PORTBbits.RB7 = 1;
  1632   0017E0  9A81               	bcf	129,5,c	;volatile
  1633   0017E2  8C81               	bsf	129,6,c	;volatile
  1634   0017E4  8E81               	bsf	129,7,c	;volatile
  1635                           
  1636                           ;matrixkeyboard.c: 32:     if( PORTBbits.RB1 == 0)
  1637   0017E6  B281               	btfsc	129,1,c	;volatile
  1638   0017E8  EFF8  F00B         	goto	u1431
  1639   0017EC  EFFA  F00B         	goto	u1430
  1640   0017F0                     u1431:
  1641   0017F0  EFFD  F00B         	goto	l216
  1642   0017F4                     u1430:
  1643   0017F4                     
  1644                           ;matrixkeyboard.c: 33:         return 1;
  1645   0017F4  0E01               	movlw	1
  1646   0017F6  EF37  F00C         	goto	l217
  1647   0017FA                     l216:
  1648   0017FA  B881               	btfsc	129,4,c	;volatile
  1649   0017FC  EF02  F00C         	goto	u1441
  1650   001800  EF04  F00C         	goto	u1440
  1651   001804                     u1441:
  1652   001804  EF07  F00C         	goto	l218
  1653   001808                     u1440:
  1654   001808                     
  1655                           ;matrixkeyboard.c: 39:         return 10;
  1656   001808  0E0A               	movlw	10
  1657   00180A  EF37  F00C         	goto	l217
  1658   00180E                     l218:
  1659                           
  1660                           ;matrixkeyboard.c: 41:     PORTBbits.RB5 = 1, PORTBbits.RB6 = 0, PORTBbits.RB7 = 1;
  1661   00180E  8A81               	bsf	129,5,c	;volatile
  1662   001810  9C81               	bcf	129,6,c	;volatile
  1663   001812  8E81               	bsf	129,7,c	;volatile
  1664                           
  1665                           ;matrixkeyboard.c: 42:     if( PORTBbits.RB1 == 0)
  1666   001814  B281               	btfsc	129,1,c	;volatile
  1667   001816  EF0F  F00C         	goto	u1451
  1668   00181A  EF11  F00C         	goto	u1450
  1669   00181E                     u1451:
  1670   00181E  EF14  F00C         	goto	l220
  1671   001822                     u1450:
  1672   001822                     
  1673                           ;matrixkeyboard.c: 43:         return 2;
  1674   001822  0E02               	movlw	2
  1675   001824  EF37  F00C         	goto	l217
  1676   001828                     l220:
  1677   001828  B881               	btfsc	129,4,c	;volatile
  1678   00182A  EF19  F00C         	goto	u1461
  1679   00182E  EF1B  F00C         	goto	u1460
  1680   001832                     u1461:
  1681   001832  EF1E  F00C         	goto	l221
  1682   001836                     u1460:
  1683   001836                     
  1684                           ;matrixkeyboard.c: 49:         return 11;
  1685   001836  0E0B               	movlw	11
  1686   001838  EF37  F00C         	goto	l217
  1687   00183C                     l221:
  1688                           
  1689                           ;matrixkeyboard.c: 51:     PORTBbits.RB5 = 1, PORTBbits.RB6 = 1, PORTBbits.RB7 = 0, PORT
      +                          Bbits.RB7 = 0;
  1690   00183C  8A81               	bsf	129,5,c	;volatile
  1691   00183E  8C81               	bsf	129,6,c	;volatile
  1692   001840  9E81               	bcf	129,7,c	;volatile
  1693   001842  9E81               	bcf	129,7,c	;volatile
  1694                           
  1695                           ;matrixkeyboard.c: 52:     if( PORTBbits.RB1 == 0)
  1696   001844  B281               	btfsc	129,1,c	;volatile
  1697   001846  EF27  F00C         	goto	u1471
  1698   00184A  EF29  F00C         	goto	u1470
  1699   00184E                     u1471:
  1700   00184E  EF2C  F00C         	goto	l223
  1701   001852                     u1470:
  1702   001852                     
  1703                           ;matrixkeyboard.c: 53:         return 3;
  1704   001852  0E03               	movlw	3
  1705   001854  EF37  F00C         	goto	l217
  1706   001858                     l223:
  1707   001858  B881               	btfsc	129,4,c	;volatile
  1708   00185A  EF31  F00C         	goto	u1481
  1709   00185E  EF33  F00C         	goto	u1480
  1710   001862                     u1481:
  1711   001862  EF36  F00C         	goto	l2408
  1712   001866                     u1480:
  1713   001866                     
  1714                           ;matrixkeyboard.c: 59:         return 12;
  1715   001866  0E0C               	movlw	12
  1716   001868  EF37  F00C         	goto	l217
  1717   00186C                     l2408:
  1718                           
  1719                           ;matrixkeyboard.c: 61:         return 0xFF;
  1720   00186C  0EFF               	movlw	255
  1721   00186E                     l217:
  1722   00186E  0012               	return		;funcret
  1723   001870                     __end_of_scan_key:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function _read_adc *****************
  1727 ;; Defined at:
  1728 ;;		line 12 in file "adc.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  channel         1    wreg     unsigned char 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  channel         1    4[COMRAM] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  2    0[COMRAM] unsigned short 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1742 ;;      Params:         2       0       0       0       0       0       0
  1743 ;;      Locals:         1       0       0       0       0       0       0
  1744 ;;      Temps:          2       0       0       0       0       0       0
  1745 ;;      Totals:         5       0       0       0       0       0       0
  1746 ;;Total ram usage:        5 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; Hardware stack levels required when called: 1
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text4
  1757   001C02                     __ptext4:
  1758                           	callstack 0
  1759   001C02                     _read_adc:
  1760                           	callstack 29
  1761                           
  1762                           ;incstack = 0
  1763                           ;read_adc@channel stored from wreg
  1764   001C02  6E05               	movwf	read_adc@channel^0,c
  1765   001C04                     
  1766                           ;adc.c: 12: unsigned short read_adc(unsigned char channel);adc.c: 13: {;adc.c: 14:     A
      +                          DCON0=(ADCON0 & 0xC3) |(unsigned char)(channel<<2);
  1767   001C04  C005  F003         	movff	read_adc@channel,??_read_adc
  1768   001C08  90D8               	bcf	status,0,c
  1769   001C0A  3603               	rlcf	??_read_adc^0,f,c
  1770   001C0C  90D8               	bcf	status,0,c
  1771   001C0E  3603               	rlcf	??_read_adc^0,f,c
  1772   001C10  50C2               	movf	194,w,c	;volatile
  1773   001C12  0BC3               	andlw	195
  1774   001C14  1003               	iorwf	??_read_adc^0,w,c
  1775   001C16  6EC2               	movwf	194,c	;volatile
  1776   001C18                     
  1777                           ;adc.c: 15:     GO=1;
  1778   001C18  82C2               	bsf	4034,1,c	;volatile
  1779   001C1A                     l90:
  1780   001C1A  B2C2               	btfsc	4034,1,c	;volatile
  1781   001C1C  EF12  F00E         	goto	u1521
  1782   001C20  EF14  F00E         	goto	u1520
  1783   001C24                     u1521:
  1784   001C24  EF0D  F00E         	goto	l90
  1785   001C28                     u1520:
  1786   001C28                     
  1787                           ;adc.c: 17:     return (unsigned short) ADRESL | (unsigned short)((ADRESH & 0x03) << 8);
  1788   001C28  50C4               	movf	196,w,c	;volatile
  1789   001C2A  0B03               	andlw	3
  1790   001C2C  6E03               	movwf	??_read_adc^0,c
  1791   001C2E  50C3               	movf	195,w,c	;volatile
  1792   001C30  6E01               	movwf	?_read_adc^0,c
  1793   001C32  C003  F002         	movff	??_read_adc,?_read_adc+1
  1794   001C36  0012               	return		;funcret
  1795   001C38                     __end_of_read_adc:
  1796                           	callstack 0
  1797                           
  1798 ;; *************** function _logscreen *****************
  1799 ;; Defined at:
  1800 ;;		line 11 in file "password.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  key             1    wreg     unsigned char 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  key             1   18[COMRAM] unsigned char 
  1805 ;;  wait            2   16[COMRAM] unsigned int 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1815 ;;      Params:         0       0       0       0       0       0       0
  1816 ;;      Locals:         3       0       0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0
  1818 ;;      Totals:         3       0       0       0       0       0       0
  1819 ;;Total ram usage:        3 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 4
  1822 ;; This function calls:
  1823 ;;		_clcd_print
  1824 ;;		_clcd_putch
  1825 ;;		_clcd_write
  1826 ;;		_mystrcmp
  1827 ;;		_timeleft
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text5
  1834   000A7C                     __ptext5:
  1835                           	callstack 0
  1836   000A7C                     _logscreen:
  1837                           	callstack 26
  1838                           
  1839                           ;incstack = 0
  1840                           ;logscreen@key stored from wreg
  1841   000A7C  6E13               	movwf	logscreen@key^0,c
  1842   000A7E                     
  1843                           ;password.c: 11: void logscreen(unsigned char key);password.c: 12: {;password.c: 13:    
      +                               uckey[4]='\0';
  1844   000A7E  0E00               	movlw	0
  1845   000A80  0100               	movlb	0	; () banked
  1846   000A82  6F9E               	movwf	(_uckey+4)& (0+255),b
  1847   000A84                     
  1848                           ; BSR set to: 0
  1849                           ;password.c: 14:         if(enterflag==0)
  1850   000A84  5046               	movf	_enterflag^0,w,c
  1851   000A86  1047               	iorwf	(_enterflag+1)^0,w,c
  1852   000A88  A4D8               	btfss	status,2,c
  1853   000A8A  EF49  F005         	goto	u1581
  1854   000A8E  EF4B  F005         	goto	u1580
  1855   000A92                     u1581:
  1856   000A92  EF53  F005         	goto	l2500
  1857   000A96                     u1580:
  1858   000A96                     
  1859                           ; BSR set to: 0
  1860                           ;password.c: 15:             clcd_print( (unsigned char*) " Enter Password ", (0x80 + (0
      +                          )));
  1861   000A96  0E34               	movlw	low STR_10
  1862   000A98  6E03               	movwf	clcd_print@data^0,c
  1863   000A9A  0E06               	movlw	high STR_10
  1864   000A9C  6E04               	movwf	(clcd_print@data+1)^0,c
  1865   000A9E  0E80               	movlw	128
  1866   000AA0  6E05               	movwf	clcd_print@addr^0,c
  1867   000AA2  EC25  F00D         	call	_clcd_print	;wreg free
  1868   000AA6                     l2500:
  1869                           
  1870                           ;password.c: 16:         if(tryflag>0)
  1871   000AA6  5055               	movf	_tryflag^0,w,c
  1872   000AA8  1056               	iorwf	(_tryflag+1)^0,w,c
  1873   000AAA  B4D8               	btfsc	status,2,c
  1874   000AAC  EF5A  F005         	goto	u1591
  1875   000AB0  EF5C  F005         	goto	u1590
  1876   000AB4                     u1591:
  1877   000AB4  EFBF  F006         	goto	l2584
  1878   000AB8                     u1590:
  1879   000AB8                     
  1880                           ;password.c: 17:         {;password.c: 18:              if(i<4)
  1881   000AB8  0E04               	movlw	4
  1882   000ABA  6050               	cpfslt	_i^0,c
  1883   000ABC  EF62  F005         	goto	u1601
  1884   000AC0  EF64  F005         	goto	u1600
  1885   000AC4                     u1601:
  1886   000AC4  EF00  F006         	goto	l2540
  1887   000AC8                     u1600:
  1888   000AC8                     
  1889                           ;password.c: 19:              {;password.c: 20:                  if(!(notpressed--))
  1890   000AC8  0100               	movlb	0	; () banked
  1891   000ACA  077A               	decf	_notpressed& (0+255),f,b
  1892   000ACC  0E00               	movlw	0
  1893   000ACE  5B7B               	subwfb	(_notpressed+1)& (0+255),f,b
  1894   000AD0  5B7C               	subwfb	(_notpressed+2)& (0+255),f,b
  1895   000AD2  5B7D               	subwfb	(_notpressed+3)& (0+255),f,b
  1896   000AD4  297A               	incf	_notpressed& (0+255),w,b
  1897   000AD6  E10A               	bnz	u1611
  1898   000AD8  297B               	incf	(_notpressed+1)& (0+255),w,b
  1899   000ADA  E108               	bnz	u1611
  1900   000ADC  297C               	incf	(_notpressed+2)& (0+255),w,b
  1901   000ADE  E106               	bnz	u1611
  1902   000AE0  297D               	incf	(_notpressed+3)& (0+255),w,b
  1903   000AE2  A4D8               	btfss	status,2,c
  1904   000AE4  EF76  F005         	goto	u1611
  1905   000AE8  EF78  F005         	goto	u1610
  1906   000AEC                     u1611:
  1907   000AEC  EF8C  F005         	goto	l2510
  1908   000AF0                     u1610:
  1909   000AF0                     
  1910                           ; BSR set to: 0
  1911                           ;password.c: 21:                  {;password.c: 22:                      notpressed=1000
      +                          0;
  1912   000AF0  0E10               	movlw	16
  1913   000AF2  6F7A               	movwf	_notpressed& (0+255),b
  1914   000AF4  0E27               	movlw	39
  1915   000AF6  6F7B               	movwf	(_notpressed+1)& (0+255),b
  1916   000AF8  0E00               	movlw	0
  1917   000AFA  6F7C               	movwf	(_notpressed+2)& (0+255),b
  1918   000AFC  0E00               	movlw	0
  1919   000AFE  6F7D               	movwf	(_notpressed+3)& (0+255),b
  1920                           
  1921                           ;password.c: 23:                      i=0, tryflag=0;
  1922   000B00  0E00               	movlw	0
  1923   000B02  6E50               	movwf	_i^0,c
  1924   000B04  0E00               	movlw	0
  1925   000B06  6E56               	movwf	(_tryflag+1)^0,c
  1926   000B08  0E00               	movlw	0
  1927   000B0A  6E55               	movwf	_tryflag^0,c
  1928                           
  1929                           ;password.c: 24:                      controlflag=1;
  1930   000B0C  0E00               	movlw	0
  1931   000B0E  6E5A               	movwf	(_controlflag+1)^0,c
  1932   000B10  0E01               	movlw	1
  1933   000B12  6E59               	movwf	_controlflag^0,c
  1934   000B14  EFDE  F006         	goto	l285
  1935   000B18                     l2510:
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;password.c: 27:                 compareflag=0;
  1939   000B18  0E00               	movlw	0
  1940   000B1A  6E45               	movwf	(_compareflag+1)^0,c
  1941   000B1C  0E00               	movlw	0
  1942   000B1E  6E44               	movwf	_compareflag^0,c
  1943   000B20                     
  1944                           ; BSR set to: 0
  1945                           ;password.c: 28:                 if ((key != 0xFF) && key != 10)
  1946   000B20  2813               	incf	logscreen@key^0,w,c
  1947   000B22  B4D8               	btfsc	status,2,c
  1948   000B24  EF96  F005         	goto	u1621
  1949   000B28  EF98  F005         	goto	u1620
  1950   000B2C                     u1621:
  1951   000B2C  EFBB  F005         	goto	l2524
  1952   000B30                     u1620:
  1953   000B30                     
  1954                           ; BSR set to: 0
  1955   000B30  0E0A               	movlw	10
  1956   000B32  1813               	xorwf	logscreen@key^0,w,c
  1957   000B34  B4D8               	btfsc	status,2,c
  1958   000B36  EF9F  F005         	goto	u1631
  1959   000B3A  EFA1  F005         	goto	u1630
  1960   000B3E                     u1631:
  1961   000B3E  EFBB  F005         	goto	l2524
  1962   000B42                     u1630:
  1963   000B42                     
  1964                           ; BSR set to: 0
  1965                           ;password.c: 29:                 {;password.c: 30:                     notpressed=10000;
  1966   000B42  0E10               	movlw	16
  1967   000B44  6F7A               	movwf	_notpressed& (0+255),b
  1968   000B46  0E27               	movlw	39
  1969   000B48  6F7B               	movwf	(_notpressed+1)& (0+255),b
  1970   000B4A  0E00               	movlw	0
  1971   000B4C  6F7C               	movwf	(_notpressed+2)& (0+255),b
  1972   000B4E  0E00               	movlw	0
  1973   000B50  6F7D               	movwf	(_notpressed+3)& (0+255),b
  1974   000B52                     
  1975                           ; BSR set to: 0
  1976                           ;password.c: 31:                     uckey[i]=key-11+48;
  1977   000B52  0E9A               	movlw	low _uckey
  1978   000B54  2450               	addwf	_i^0,w,c
  1979   000B56  6ED9               	movwf	fsr2l,c
  1980   000B58  6ADA               	clrf	fsr2h,c
  1981   000B5A  0E00               	movlw	high _uckey
  1982   000B5C  22DA               	addwfc	fsr2h,f,c
  1983   000B5E  5013               	movf	logscreen@key^0,w,c
  1984   000B60  0F25               	addlw	37
  1985   000B62  6EDF               	movwf	indf2,c
  1986   000B64                     
  1987                           ; BSR set to: 0
  1988                           ;password.c: 32:                     clcd_putch('*', (0xC0 + (i+5)));
  1989   000B64  5050               	movf	_i^0,w,c
  1990   000B66  0FC5               	addlw	197
  1991   000B68  6E0F               	movwf	clcd_putch@addr^0,c
  1992   000B6A  0E2A               	movlw	42
  1993   000B6C  ECAE  F00E         	call	_clcd_putch
  1994   000B70                     
  1995                           ;password.c: 33:                     i++;
  1996   000B70  2A50               	incf	_i^0,f,c
  1997                           
  1998                           ;password.c: 34:                 }
  1999   000B72  EF06  F006         	goto	l2542
  2000   000B76                     l2524:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;password.c: 36:                 {;password.c: 37:                     if(blinkflag == 0
      +                          )
  2004   000B76  5048               	movf	_blinkflag^0,w,c
  2005   000B78  1049               	iorwf	(_blinkflag+1)^0,w,c
  2006   000B7A  A4D8               	btfss	status,2,c
  2007   000B7C  EFC2  F005         	goto	u1641
  2008   000B80  EFC4  F005         	goto	u1640
  2009   000B84                     u1641:
  2010   000B84  EF06  F006         	goto	l2542
  2011   000B88                     u1640:
  2012   000B88                     
  2013                           ; BSR set to: 0
  2014                           ;password.c: 38:                     {;password.c: 39:                         blink++;
  2015   000B88  4A4A               	infsnz	_blink^0,f,c
  2016   000B8A  2A4B               	incf	(_blink+1)^0,f,c
  2017   000B8C                     
  2018                           ; BSR set to: 0
  2019                           ;password.c: 40:                         if(blink == 1600)
  2020   000B8C  0E40               	movlw	64
  2021   000B8E  184A               	xorwf	_blink^0,w,c
  2022   000B90  E107               	bnz	u1651
  2023   000B92  0E06               	movlw	6
  2024   000B94  184B               	xorwf	(_blink+1)^0,w,c
  2025   000B96  A4D8               	btfss	status,2,c
  2026   000B98  EFD0  F005         	goto	u1651
  2027   000B9C  EFD2  F005         	goto	u1650
  2028   000BA0                     u1651:
  2029   000BA0  EFD8  F005         	goto	l2532
  2030   000BA4                     u1650:
  2031   000BA4                     
  2032                           ; BSR set to: 0
  2033                           ;password.c: 41:                             blink=0;
  2034   000BA4  0E00               	movlw	0
  2035   000BA6  6E4B               	movwf	(_blink+1)^0,c
  2036   000BA8  0E00               	movlw	0
  2037   000BAA  6E4A               	movwf	_blink^0,c
  2038   000BAC  EF06  F006         	goto	l2542
  2039   000BB0                     l2532:
  2040                           
  2041                           ; BSR set to: 0
  2042   000BB0  0E20               	movlw	32
  2043   000BB2  5C4A               	subwf	_blink^0,w,c
  2044   000BB4  0E03               	movlw	3
  2045   000BB6  584B               	subwfb	(_blink+1)^0,w,c
  2046   000BB8  B0D8               	btfsc	status,0,c
  2047   000BBA  EFE1  F005         	goto	u1661
  2048   000BBE  EFE3  F005         	goto	u1660
  2049   000BC2                     u1661:
  2050   000BC2  EFEB  F005         	goto	l2536
  2051   000BC6                     u1660:
  2052   000BC6                     
  2053                           ; BSR set to: 0
  2054                           ;password.c: 43:                         {;password.c: 44:                             c
      +                          lcd_putch('_', (0xC0 + (i+5)));
  2055   000BC6  5050               	movf	_i^0,w,c
  2056   000BC8  0FC5               	addlw	197
  2057   000BCA  6E0F               	movwf	clcd_putch@addr^0,c
  2058   000BCC  0E5F               	movlw	95
  2059   000BCE  ECAE  F00E         	call	_clcd_putch
  2060                           
  2061                           ;password.c: 45:                         }
  2062   000BD2  EF06  F006         	goto	l2542
  2063   000BD6                     l2536:
  2064                           
  2065                           ; BSR set to: 0
  2066   000BD6  0E20               	movlw	32
  2067   000BD8  5C4A               	subwf	_blink^0,w,c
  2068   000BDA  0E03               	movlw	3
  2069   000BDC  584B               	subwfb	(_blink+1)^0,w,c
  2070   000BDE  A0D8               	btfss	status,0,c
  2071   000BE0  EFF4  F005         	goto	u1671
  2072   000BE4  EFF6  F005         	goto	u1670
  2073   000BE8                     u1671:
  2074   000BE8  EFFE  F005         	goto	l288
  2075   000BEC                     u1670:
  2076   000BEC                     
  2077                           ; BSR set to: 0
  2078                           ;password.c: 47:                         {;password.c: 48:                             c
      +                          lcd_putch(' ', (0xC0 + (i+5)));
  2079   000BEC  5050               	movf	_i^0,w,c
  2080   000BEE  0FC5               	addlw	197
  2081   000BF0  6E0F               	movwf	clcd_putch@addr^0,c
  2082   000BF2  0E20               	movlw	32
  2083   000BF4  ECAE  F00E         	call	_clcd_putch
  2084   000BF8  EF06  F006         	goto	l2542
  2085   000BFC                     l288:
  2086                           
  2087                           ; BSR set to: 0
  2088   000BFC  EF06  F006         	goto	l2542
  2089   000C00                     l2540:
  2090                           
  2091                           ;password.c: 54:               {;password.c: 55:                 compareflag=1;
  2092   000C00  0E00               	movlw	0
  2093   000C02  6E45               	movwf	(_compareflag+1)^0,c
  2094   000C04  0E01               	movlw	1
  2095   000C06  6E44               	movwf	_compareflag^0,c
  2096                           
  2097                           ;password.c: 56:                 i=0;
  2098   000C08  0E00               	movlw	0
  2099   000C0A  6E50               	movwf	_i^0,c
  2100   000C0C                     l2542:
  2101                           
  2102                           ;password.c: 58:               if(compareflag == 1)
  2103   000C0C  0444               	decf	_compareflag^0,w,c
  2104   000C0E  1045               	iorwf	(_compareflag+1)^0,w,c
  2105   000C10  A4D8               	btfss	status,2,c
  2106   000C12  EF0D  F006         	goto	u1681
  2107   000C16  EF0F  F006         	goto	u1680
  2108   000C1A                     u1681:
  2109   000C1A  EFDE  F006         	goto	l285
  2110   000C1E                     u1680:
  2111   000C1E                     
  2112                           ;password.c: 59:               {;password.c: 60:                 if(!mystrcmp(uckey, pas
      +                          s))
  2113   000C1E  0E9A               	movlw	low _uckey
  2114   000C20  6E01               	movwf	mystrcmp@s1^0,c
  2115   000C22  0E00               	movlw	high _uckey
  2116   000C24  6E02               	movwf	(mystrcmp@s1+1)^0,c
  2117   000C26  0E7E               	movlw	low _pass
  2118   000C28  6E03               	movwf	mystrcmp@s2^0,c
  2119   000C2A  0E00               	movlw	high _pass
  2120   000C2C  6E04               	movwf	(mystrcmp@s2+1)^0,c
  2121   000C2E  ECEF  F00C         	call	_mystrcmp	;wreg free
  2122   000C32  5001               	movf	?_mystrcmp^0,w,c
  2123   000C34  1002               	iorwf	(?_mystrcmp+1)^0,w,c
  2124   000C36  A4D8               	btfss	status,2,c
  2125   000C38  EF20  F006         	goto	u1691
  2126   000C3C  EF22  F006         	goto	u1690
  2127   000C40                     u1691:
  2128   000C40  EF76  F006         	goto	l2566
  2129   000C44                     u1690:
  2130   000C44                     
  2131                           ;password.c: 61:                 {;password.c: 62:                     enterflag=1;
  2132   000C44  0E00               	movlw	0
  2133   000C46  6E47               	movwf	(_enterflag+1)^0,c
  2134   000C48  0E01               	movlw	1
  2135   000C4A  6E46               	movwf	_enterflag^0,c
  2136                           
  2137                           ;password.c: 63:                     blinkflag=1;
  2138   000C4C  0E00               	movlw	0
  2139   000C4E  6E49               	movwf	(_blinkflag+1)^0,c
  2140   000C50  0E01               	movlw	1
  2141   000C52  6E48               	movwf	_blinkflag^0,c
  2142                           
  2143                           ;password.c: 64:                     for(unsigned int wait=50000; wait--;);
  2144   000C54  0EC3               	movlw	195
  2145   000C56  6E12               	movwf	(logscreen@wait+1)^0,c
  2146   000C58  0E50               	movlw	80
  2147   000C5A  6E11               	movwf	logscreen@wait^0,c
  2148   000C5C                     l2548:
  2149   000C5C  0611               	decf	logscreen@wait^0,f,c
  2150   000C5E  A0D8               	btfss	status,0,c
  2151   000C60  0612               	decf	(logscreen@wait+1)^0,f,c
  2152   000C62  2811               	incf	logscreen@wait^0,w,c
  2153   000C64  E106               	bnz	u1701
  2154   000C66  2812               	incf	(logscreen@wait+1)^0,w,c
  2155   000C68  A4D8               	btfss	status,2,c
  2156   000C6A  EF39  F006         	goto	u1701
  2157   000C6E  EF3B  F006         	goto	u1700
  2158   000C72                     u1701:
  2159   000C72  EF2E  F006         	goto	l2548
  2160   000C76                     u1700:
  2161   000C76                     
  2162                           ;password.c: 65:                     clcd_print( (unsigned char*) "  Code Passed   ", (0
      +                          x80 + (0)));
  2163   000C76  0E01               	movlw	low STR_11
  2164   000C78  6E03               	movwf	clcd_print@data^0,c
  2165   000C7A  0E06               	movlw	high STR_11
  2166   000C7C  6E04               	movwf	(clcd_print@data+1)^0,c
  2167   000C7E  0E80               	movlw	128
  2168   000C80  6E05               	movwf	clcd_print@addr^0,c
  2169   000C82  EC25  F00D         	call	_clcd_print	;wreg free
  2170                           
  2171                           ;password.c: 66:                     clcd_print( (unsigned char*) " Car Black Box  ", (0
      +                          xC0 + (0)));
  2172   000C86  0E12               	movlw	low STR_12
  2173   000C88  6E03               	movwf	clcd_print@data^0,c
  2174   000C8A  0E06               	movlw	high STR_12
  2175   000C8C  6E04               	movwf	(clcd_print@data+1)^0,c
  2176   000C8E  0EC0               	movlw	192
  2177   000C90  6E05               	movwf	clcd_print@addr^0,c
  2178   000C92  EC25  F00D         	call	_clcd_print	;wreg free
  2179   000C96                     
  2180                           ;password.c: 67:                     for(wait=1000000; wait--;);
  2181   000C96  0E40               	movlw	64
  2182   000C98  0100               	movlb	0	; () banked
  2183   000C9A  6F83               	movwf	_wait& (0+255),b
  2184   000C9C  0E42               	movlw	66
  2185   000C9E  6F84               	movwf	(_wait+1)& (0+255),b
  2186   000CA0  0E0F               	movlw	15
  2187   000CA2  6F85               	movwf	(_wait+2)& (0+255),b
  2188   000CA4  0E00               	movlw	0
  2189   000CA6  6F86               	movwf	(_wait+3)& (0+255),b
  2190   000CA8                     l2554:
  2191                           
  2192                           ; BSR set to: 0
  2193   000CA8  0783               	decf	_wait& (0+255),f,b
  2194   000CAA  0E00               	movlw	0
  2195   000CAC  5B84               	subwfb	(_wait+1)& (0+255),f,b
  2196   000CAE  5B85               	subwfb	(_wait+2)& (0+255),f,b
  2197   000CB0  5B86               	subwfb	(_wait+3)& (0+255),f,b
  2198   000CB2  2983               	incf	_wait& (0+255),w,b
  2199   000CB4  E10A               	bnz	u1711
  2200   000CB6  2984               	incf	(_wait+1)& (0+255),w,b
  2201   000CB8  E108               	bnz	u1711
  2202   000CBA  2985               	incf	(_wait+2)& (0+255),w,b
  2203   000CBC  E106               	bnz	u1711
  2204   000CBE  2986               	incf	(_wait+3)& (0+255),w,b
  2205   000CC0  A4D8               	btfss	status,2,c
  2206   000CC2  EF65  F006         	goto	u1711
  2207   000CC6  EF67  F006         	goto	u1710
  2208   000CCA                     u1711:
  2209   000CCA  EF54  F006         	goto	l2554
  2210   000CCE                     u1710:
  2211   000CCE                     
  2212                           ; BSR set to: 0
  2213                           ;password.c: 68:                     clcd_write(0x01, 0);
  2214   000CCE  0E00               	movlw	0
  2215   000CD0  6E01               	movwf	clcd_write@control_bit^0,c
  2216   000CD2  0E01               	movlw	1
  2217   000CD4  EC36  F00E         	call	_clcd_write
  2218   000CD8                     
  2219                           ;password.c: 69:                     controlflag=3;
  2220   000CD8  0E00               	movlw	0
  2221   000CDA  6E5A               	movwf	(_controlflag+1)^0,c
  2222   000CDC  0E03               	movlw	3
  2223   000CDE  6E59               	movwf	_controlflag^0,c
  2224   000CE0                     l2560:
  2225                           
  2226                           ;password.c: 70:                     enterflag=0;
  2227   000CE0  0E00               	movlw	0
  2228   000CE2  6E47               	movwf	(_enterflag+1)^0,c
  2229   000CE4  0E00               	movlw	0
  2230   000CE6  6E46               	movwf	_enterflag^0,c
  2231   000CE8  EFDE  F006         	goto	l285
  2232   000CEC                     l2566:
  2233                           
  2234                           ;password.c: 74:                 {;password.c: 75:                     notpressed=10000;
  2235   000CEC  0E10               	movlw	16
  2236   000CEE  0100               	movlb	0	; () banked
  2237   000CF0  6F7A               	movwf	_notpressed& (0+255),b
  2238   000CF2  0E27               	movlw	39
  2239   000CF4  6F7B               	movwf	(_notpressed+1)& (0+255),b
  2240   000CF6  0E00               	movlw	0
  2241   000CF8  6F7C               	movwf	(_notpressed+2)& (0+255),b
  2242   000CFA  0E00               	movlw	0
  2243   000CFC  6F7D               	movwf	(_notpressed+3)& (0+255),b
  2244                           
  2245                           ;password.c: 76:                     enterflag=1;
  2246   000CFE  0E00               	movlw	0
  2247   000D00  6E47               	movwf	(_enterflag+1)^0,c
  2248   000D02  0E01               	movlw	1
  2249   000D04  6E46               	movwf	_enterflag^0,c
  2250   000D06                     
  2251                           ; BSR set to: 0
  2252                           ;password.c: 77:                      clcd_print( (unsigned char*) " Wrong Password ", (
      +                          0x80 + (0)));
  2253   000D06  0E23               	movlw	low STR_13
  2254   000D08  6E03               	movwf	clcd_print@data^0,c
  2255   000D0A  0E06               	movlw	high STR_13
  2256   000D0C  6E04               	movwf	(clcd_print@data+1)^0,c
  2257   000D0E  0E80               	movlw	128
  2258   000D10  6E05               	movwf	clcd_print@addr^0,c
  2259   000D12  EC25  F00D         	call	_clcd_print	;wreg free
  2260   000D16                     
  2261                           ;password.c: 78:                      clcd_print( (unsigned char*) " attempt Remains", (
      +                          0xC0 + (1)));
  2262   000D16  0E45               	movlw	low STR_14
  2263   000D18  6E03               	movwf	clcd_print@data^0,c
  2264   000D1A  0E06               	movlw	high STR_14
  2265   000D1C  6E04               	movwf	(clcd_print@data+1)^0,c
  2266   000D1E  0EC1               	movlw	193
  2267   000D20  6E05               	movwf	clcd_print@addr^0,c
  2268   000D22  EC25  F00D         	call	_clcd_print	;wreg free
  2269   000D26                     
  2270                           ;password.c: 79:                      tryflag--;
  2271   000D26  0655               	decf	_tryflag^0,f,c
  2272   000D28  A0D8               	btfss	status,0,c
  2273   000D2A  0656               	decf	(_tryflag+1)^0,f,c
  2274   000D2C                     
  2275                           ;password.c: 80:                      clcd_putch((unsigned char)tryflag+48, (0xC0 + (0))
      +                          );
  2276   000D2C  0EC0               	movlw	192
  2277   000D2E  6E0F               	movwf	clcd_putch@addr^0,c
  2278   000D30  5055               	movf	_tryflag^0,w,c
  2279   000D32  0F30               	addlw	48
  2280   000D34  ECAE  F00E         	call	_clcd_putch
  2281   000D38                     
  2282                           ;password.c: 81:                      for(wait=1000000; wait--;);
  2283   000D38  0E40               	movlw	64
  2284   000D3A  0100               	movlb	0	; () banked
  2285   000D3C  6F83               	movwf	_wait& (0+255),b
  2286   000D3E  0E42               	movlw	66
  2287   000D40  6F84               	movwf	(_wait+1)& (0+255),b
  2288   000D42  0E0F               	movlw	15
  2289   000D44  6F85               	movwf	(_wait+2)& (0+255),b
  2290   000D46  0E00               	movlw	0
  2291   000D48  6F86               	movwf	(_wait+3)& (0+255),b
  2292   000D4A                     l2578:
  2293                           
  2294                           ; BSR set to: 0
  2295   000D4A  0783               	decf	_wait& (0+255),f,b
  2296   000D4C  0E00               	movlw	0
  2297   000D4E  5B84               	subwfb	(_wait+1)& (0+255),f,b
  2298   000D50  5B85               	subwfb	(_wait+2)& (0+255),f,b
  2299   000D52  5B86               	subwfb	(_wait+3)& (0+255),f,b
  2300   000D54  2983               	incf	_wait& (0+255),w,b
  2301   000D56  E10A               	bnz	u1721
  2302   000D58  2984               	incf	(_wait+1)& (0+255),w,b
  2303   000D5A  E108               	bnz	u1721
  2304   000D5C  2985               	incf	(_wait+2)& (0+255),w,b
  2305   000D5E  E106               	bnz	u1721
  2306   000D60  2986               	incf	(_wait+3)& (0+255),w,b
  2307   000D62  A4D8               	btfss	status,2,c
  2308   000D64  EFB6  F006         	goto	u1721
  2309   000D68  EFB8  F006         	goto	u1720
  2310   000D6C                     u1721:
  2311   000D6C  EFA5  F006         	goto	l2578
  2312   000D70                     u1720:
  2313   000D70                     
  2314                           ; BSR set to: 0
  2315                           ;password.c: 82:                      clcd_write(0x01, 0);
  2316   000D70  0E00               	movlw	0
  2317   000D72  6E01               	movwf	clcd_write@control_bit^0,c
  2318   000D74  0E01               	movlw	1
  2319   000D76  EC36  F00E         	call	_clcd_write
  2320   000D7A  EF70  F006         	goto	l2560
  2321   000D7E                     l2584:
  2322                           
  2323                           ;password.c: 88:        {;password.c: 89:               enterflag=1;
  2324   000D7E  0E00               	movlw	0
  2325   000D80  6E47               	movwf	(_enterflag+1)^0,c
  2326   000D82  0E01               	movlw	1
  2327   000D84  6E46               	movwf	_enterflag^0,c
  2328   000D86                     
  2329                           ;password.c: 90:               clcd_write(0x01, 0);
  2330   000D86  0E00               	movlw	0
  2331   000D88  6E01               	movwf	clcd_write@control_bit^0,c
  2332   000D8A  0E01               	movlw	1
  2333   000D8C  EC36  F00E         	call	_clcd_write
  2334   000D90                     
  2335                           ;password.c: 93:               timeleft();
  2336   000D90  EC74  F00A         	call	_timeleft	;wreg free
  2337   000D94                     
  2338                           ;password.c: 94:               blink=0, tryflag=3, enterflag=0, compareflag=0,blinkflag=
      +                          0;
  2339   000D94  0E00               	movlw	0
  2340   000D96  6E4B               	movwf	(_blink+1)^0,c
  2341   000D98  0E00               	movlw	0
  2342   000D9A  6E4A               	movwf	_blink^0,c
  2343   000D9C  0E00               	movlw	0
  2344   000D9E  6E56               	movwf	(_tryflag+1)^0,c
  2345   000DA0  0E03               	movlw	3
  2346   000DA2  6E55               	movwf	_tryflag^0,c
  2347   000DA4  0E00               	movlw	0
  2348   000DA6  6E47               	movwf	(_enterflag+1)^0,c
  2349   000DA8  0E00               	movlw	0
  2350   000DAA  6E46               	movwf	_enterflag^0,c
  2351   000DAC  0E00               	movlw	0
  2352   000DAE  6E45               	movwf	(_compareflag+1)^0,c
  2353   000DB0  0E00               	movlw	0
  2354   000DB2  6E44               	movwf	_compareflag^0,c
  2355   000DB4  0E00               	movlw	0
  2356   000DB6  6E49               	movwf	(_blinkflag+1)^0,c
  2357   000DB8  0E00               	movlw	0
  2358   000DBA  6E48               	movwf	_blinkflag^0,c
  2359   000DBC                     l285:
  2360   000DBC  0012               	return		;funcret
  2361   000DBE                     __end_of_logscreen:
  2362                           	callstack 0
  2363                           
  2364 ;; *************** function _timeleft *****************
  2365 ;; Defined at:
  2366 ;;		line 97 in file "password.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2380 ;;      Params:         0       0       0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0
  2383 ;;      Totals:         0       0       0       0       0       0       0
  2384 ;;Total ram usage:        0 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 3
  2387 ;; This function calls:
  2388 ;;		___awdiv
  2389 ;;		___awmod
  2390 ;;		_clcd_print
  2391 ;;		_clcd_putch
  2392 ;;		_clcd_write
  2393 ;; This function is called by:
  2394 ;;		_logscreen
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text6
  2399   0014E8                     __ptext6:
  2400                           	callstack 0
  2401   0014E8                     _timeleft:
  2402                           	callstack 26
  2403   0014E8                     
  2404                           ;password.c: 99:     clcd_write(0x01, 0);
  2405   0014E8  0E00               	movlw	0
  2406   0014EA  6E01               	movwf	clcd_write@control_bit^0,c
  2407   0014EC  0E01               	movlw	1
  2408   0014EE  EC36  F00E         	call	_clcd_write
  2409   0014F2                     
  2410                           ;password.c: 100:     min=0;
  2411   0014F2  0E00               	movlw	0
  2412   0014F4  0100               	movlb	0	; () banked
  2413   0014F6  6F8E               	movwf	(_min+1)& (0+255),b
  2414   0014F8  0E00               	movlw	0
  2415   0014FA  6F8D               	movwf	_min& (0+255),b
  2416   0014FC                     
  2417                           ; BSR set to: 0
  2418                           ;password.c: 101:     TMR0ON=1;
  2419   0014FC  8ED5               	bsf	4053,7,c	;volatile
  2420                           
  2421                           ;password.c: 102:     while(sec!=0)
  2422   0014FE  EFC3  F00A         	goto	l2440
  2423   001502                     l2434:
  2424                           
  2425                           ;password.c: 103:     {;password.c: 104:         clcd_print( (unsigned char*) "Try Again
      +                           left" , (0x80 + (0)));
  2426   001502  0E66               	movlw	low STR_15
  2427   001504  6E03               	movwf	clcd_print@data^0,c
  2428   001506  0E06               	movlw	high STR_15
  2429   001508  6E04               	movwf	(clcd_print@data+1)^0,c
  2430   00150A  0E80               	movlw	128
  2431   00150C  6E05               	movwf	clcd_print@addr^0,c
  2432   00150E  EC25  F00D         	call	_clcd_print	;wreg free
  2433                           
  2434                           ;password.c: 105:         clcd_print( (unsigned char*) "Wait for", (0xC0 + (0)));
  2435   001512  0EBB               	movlw	low STR_16
  2436   001514  6E03               	movwf	clcd_print@data^0,c
  2437   001516  0E06               	movlw	high STR_16
  2438   001518  6E04               	movwf	(clcd_print@data+1)^0,c
  2439   00151A  0EC0               	movlw	192
  2440   00151C  6E05               	movwf	clcd_print@addr^0,c
  2441   00151E  EC25  F00D         	call	_clcd_print	;wreg free
  2442                           
  2443                           ;password.c: 106:         clcd_print( (unsigned char*) " s  ", (0xC0 + (11)));
  2444   001522  0EC4               	movlw	low STR_17
  2445   001524  6E03               	movwf	clcd_print@data^0,c
  2446   001526  0E06               	movlw	high STR_17
  2447   001528  6E04               	movwf	(clcd_print@data+1)^0,c
  2448   00152A  0ECB               	movlw	203
  2449   00152C  6E05               	movwf	clcd_print@addr^0,c
  2450   00152E  EC25  F00D         	call	_clcd_print	;wreg free
  2451   001532                     
  2452                           ;password.c: 108:         clcd_putch(sec%10+48, (0xC0 + (10)));
  2453   001532  0ECA               	movlw	202
  2454   001534  6E0F               	movwf	clcd_putch@addr^0,c
  2455   001536  C057  F009         	movff	_sec,___awmod@dividend
  2456   00153A  C058  F00A         	movff	_sec+1,___awmod@dividend+1
  2457   00153E  0E00               	movlw	0
  2458   001540  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2459   001542  0E0A               	movlw	10
  2460   001544  6E0B               	movwf	___awmod@divisor^0,c
  2461   001546  EC98  F00B         	call	___awmod	;wreg free
  2462   00154A  5009               	movf	?___awmod^0,w,c
  2463   00154C  0F30               	addlw	48
  2464   00154E  ECAE  F00E         	call	_clcd_putch
  2465   001552                     
  2466                           ;password.c: 109:         clcd_putch(((sec/10)%10)+48, (0xC0 + (9)));
  2467   001552  0EC9               	movlw	201
  2468   001554  6E0F               	movwf	clcd_putch@addr^0,c
  2469   001556  0E00               	movlw	0
  2470   001558  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2471   00155A  0E0A               	movlw	10
  2472   00155C  6E03               	movwf	___awdiv@divisor^0,c
  2473   00155E  C057  F001         	movff	_sec,___awdiv@dividend
  2474   001562  C058  F002         	movff	_sec+1,___awdiv@dividend+1
  2475   001566  ECD7  F00A         	call	___awdiv	;wreg free
  2476   00156A  C001  F009         	movff	?___awdiv,___awmod@dividend
  2477   00156E  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2478   001572  0E00               	movlw	0
  2479   001574  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2480   001576  0E0A               	movlw	10
  2481   001578  6E0B               	movwf	___awmod@divisor^0,c
  2482   00157A  EC98  F00B         	call	___awmod	;wreg free
  2483   00157E  5009               	movf	?___awmod^0,w,c
  2484   001580  0F30               	addlw	48
  2485   001582  ECAE  F00E         	call	_clcd_putch
  2486   001586                     l2440:
  2487                           
  2488                           ;password.c: 102:     while(sec!=0)
  2489   001586  5057               	movf	_sec^0,w,c
  2490   001588  1058               	iorwf	(_sec+1)^0,w,c
  2491   00158A  A4D8               	btfss	status,2,c
  2492   00158C  EFCA  F00A         	goto	u1511
  2493   001590  EFCC  F00A         	goto	u1510
  2494   001594                     u1511:
  2495   001594  EF81  F00A         	goto	l2434
  2496   001598                     u1510:
  2497   001598                     
  2498                           ;password.c: 111:     TMR0ON=0;
  2499   001598  9ED5               	bcf	4053,7,c	;volatile
  2500   00159A                     
  2501                           ;password.c: 112:     sec=10;
  2502   00159A  0E00               	movlw	0
  2503   00159C  6E58               	movwf	(_sec+1)^0,c
  2504   00159E  0E0A               	movlw	10
  2505   0015A0  6E57               	movwf	_sec^0,c
  2506   0015A2                     
  2507                           ;password.c: 113:     clcd_write(0x01, 0);
  2508   0015A2  0E00               	movlw	0
  2509   0015A4  6E01               	movwf	clcd_write@control_bit^0,c
  2510   0015A6  0E01               	movlw	1
  2511   0015A8  EC36  F00E         	call	_clcd_write
  2512   0015AC  0012               	return		;funcret
  2513   0015AE                     __end_of_timeleft:
  2514                           	callstack 0
  2515                           
  2516 ;; *************** function ___awdiv *****************
  2517 ;; Defined at:
  2518 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  dividend        2    0[COMRAM] int 
  2521 ;;  divisor         2    2[COMRAM] int 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  quotient        2    6[COMRAM] int 
  2524 ;;  sign            1    5[COMRAM] unsigned char 
  2525 ;;  counter         1    4[COMRAM] unsigned char 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  2    0[COMRAM] int 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2535 ;;      Params:         4       0       0       0       0       0       0
  2536 ;;      Locals:         4       0       0       0       0       0       0
  2537 ;;      Temps:          0       0       0       0       0       0       0
  2538 ;;      Totals:         8       0       0       0       0       0       0
  2539 ;;Total ram usage:        8 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 1
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_timeleft
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text7
  2550   0015AE                     __ptext7:
  2551                           	callstack 0
  2552   0015AE                     ___awdiv:
  2553                           	callstack 27
  2554   0015AE  0E00               	movlw	0
  2555   0015B0  6E06               	movwf	___awdiv@sign^0,c
  2556   0015B2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2557   0015B4  EFE0  F00A         	goto	u1210
  2558   0015B8  EFDE  F00A         	goto	u1211
  2559   0015BC                     u1211:
  2560   0015BC  EFE6  F00A         	goto	l2172
  2561   0015C0                     u1210:
  2562   0015C0  6C03               	negf	___awdiv@divisor^0,c
  2563   0015C2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2564   0015C4  B0D8               	btfsc	status,0,c
  2565   0015C6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2566   0015C8  0E01               	movlw	1
  2567   0015CA  6E06               	movwf	___awdiv@sign^0,c
  2568   0015CC                     l2172:
  2569   0015CC  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2570   0015CE  EFED  F00A         	goto	u1220
  2571   0015D2  EFEB  F00A         	goto	u1221
  2572   0015D6                     u1221:
  2573   0015D6  EFF3  F00A         	goto	l2178
  2574   0015DA                     u1220:
  2575   0015DA  6C01               	negf	___awdiv@dividend^0,c
  2576   0015DC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2577   0015DE  B0D8               	btfsc	status,0,c
  2578   0015E0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2579   0015E2  0E01               	movlw	1
  2580   0015E4  1A06               	xorwf	___awdiv@sign^0,f,c
  2581   0015E6                     l2178:
  2582   0015E6  0E00               	movlw	0
  2583   0015E8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2584   0015EA  0E00               	movlw	0
  2585   0015EC  6E07               	movwf	___awdiv@quotient^0,c
  2586   0015EE  5003               	movf	___awdiv@divisor^0,w,c
  2587   0015F0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2588   0015F2  B4D8               	btfsc	status,2,c
  2589   0015F4  EFFE  F00A         	goto	u1231
  2590   0015F8  EF00  F00B         	goto	u1230
  2591   0015FC                     u1231:
  2592   0015FC  EF28  F00B         	goto	l2200
  2593   001600                     u1230:
  2594   001600  0E01               	movlw	1
  2595   001602  6E05               	movwf	___awdiv@counter^0,c
  2596   001604  EF08  F00B         	goto	l2186
  2597   001608                     l2184:
  2598   001608  90D8               	bcf	status,0,c
  2599   00160A  3603               	rlcf	___awdiv@divisor^0,f,c
  2600   00160C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2601   00160E  2A05               	incf	___awdiv@counter^0,f,c
  2602   001610                     l2186:
  2603   001610  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2604   001612  EF0D  F00B         	goto	u1241
  2605   001616  EF0F  F00B         	goto	u1240
  2606   00161A                     u1241:
  2607   00161A  EF04  F00B         	goto	l2184
  2608   00161E                     u1240:
  2609   00161E                     l2188:
  2610   00161E  90D8               	bcf	status,0,c
  2611   001620  3607               	rlcf	___awdiv@quotient^0,f,c
  2612   001622  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2613   001624  5003               	movf	___awdiv@divisor^0,w,c
  2614   001626  5C01               	subwf	___awdiv@dividend^0,w,c
  2615   001628  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2616   00162A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2617   00162C  A0D8               	btfss	status,0,c
  2618   00162E  EF1B  F00B         	goto	u1251
  2619   001632  EF1D  F00B         	goto	u1250
  2620   001636                     u1251:
  2621   001636  EF22  F00B         	goto	l2196
  2622   00163A                     u1250:
  2623   00163A  5003               	movf	___awdiv@divisor^0,w,c
  2624   00163C  5E01               	subwf	___awdiv@dividend^0,f,c
  2625   00163E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2626   001640  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2627   001642  8007               	bsf	___awdiv@quotient^0,0,c
  2628   001644                     l2196:
  2629   001644  90D8               	bcf	status,0,c
  2630   001646  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2631   001648  3203               	rrcf	___awdiv@divisor^0,f,c
  2632   00164A  2E05               	decfsz	___awdiv@counter^0,f,c
  2633   00164C  EF0F  F00B         	goto	l2188
  2634   001650                     l2200:
  2635   001650  5006               	movf	___awdiv@sign^0,w,c
  2636   001652  B4D8               	btfsc	status,2,c
  2637   001654  EF2E  F00B         	goto	u1261
  2638   001658  EF30  F00B         	goto	u1260
  2639   00165C                     u1261:
  2640   00165C  EF34  F00B         	goto	l2204
  2641   001660                     u1260:
  2642   001660  6C07               	negf	___awdiv@quotient^0,c
  2643   001662  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2644   001664  B0D8               	btfsc	status,0,c
  2645   001666  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2646   001668                     l2204:
  2647   001668  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2648   00166C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2649   001670  0012               	return		;funcret
  2650   001672                     __end_of___awdiv:
  2651                           	callstack 0
  2652                           
  2653 ;; *************** function _mystrcmp *****************
  2654 ;; Defined at:
  2655 ;;		line 115 in file "password.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  s1              2    0[COMRAM] PTR unsigned char 
  2658 ;;		 -> uckey(5), 
  2659 ;;  s2              2    2[COMRAM] PTR unsigned char 
  2660 ;;		 -> pass(5), 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  i               2    6[COMRAM] int 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  2    0[COMRAM] int 
  2665 ;; Registers used:
  2666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2672 ;;      Params:         4       0       0       0       0       0       0
  2673 ;;      Locals:         2       0       0       0       0       0       0
  2674 ;;      Temps:          2       0       0       0       0       0       0
  2675 ;;      Totals:         8       0       0       0       0       0       0
  2676 ;;Total ram usage:        8 bytes
  2677 ;; Hardware stack levels used: 1
  2678 ;; Hardware stack levels required when called: 1
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_logscreen
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text8
  2687   0019DE                     __ptext8:
  2688                           	callstack 0
  2689   0019DE                     _mystrcmp:
  2690                           	callstack 28
  2691   0019DE                     
  2692                           ;password.c: 115: int mystrcmp(char*s1, char *s2);password.c: 116: {;password.c: 117:   
      +                            int i=0;
  2693   0019DE  0E00               	movlw	0
  2694   0019E0  6E08               	movwf	(mystrcmp@i+1)^0,c
  2695   0019E2  0E00               	movlw	0
  2696   0019E4  6E07               	movwf	mystrcmp@i^0,c
  2697                           
  2698                           ;password.c: 118:     while(s1[i]!= '\0')
  2699   0019E6  EF12  F00D         	goto	l2422
  2700   0019EA                     l2414:
  2701                           
  2702                           ;password.c: 119:     {;password.c: 120:         if(s1[i]!=s2[i])
  2703   0019EA  5007               	movf	mystrcmp@i^0,w,c
  2704   0019EC  2403               	addwf	mystrcmp@s2^0,w,c
  2705   0019EE  6ED9               	movwf	fsr2l,c
  2706   0019F0  5008               	movf	(mystrcmp@i+1)^0,w,c
  2707   0019F2  2004               	addwfc	(mystrcmp@s2+1)^0,w,c
  2708   0019F4  6EDA               	movwf	fsr2h,c
  2709   0019F6  5007               	movf	mystrcmp@i^0,w,c
  2710   0019F8  2401               	addwf	mystrcmp@s1^0,w,c
  2711   0019FA  6EE1               	movwf	fsr1l,c
  2712   0019FC  5008               	movf	(mystrcmp@i+1)^0,w,c
  2713   0019FE  2002               	addwfc	(mystrcmp@s1+1)^0,w,c
  2714   001A00  6EE2               	movwf	fsr1h,c
  2715   001A02  50DE               	movf	postinc2,w,c
  2716   001A04  18E6               	xorwf	postinc1,w,c
  2717   001A06  B4D8               	btfsc	status,2,c
  2718   001A08  EF08  F00D         	goto	u1491
  2719   001A0C  EF0A  F00D         	goto	u1490
  2720   001A10                     u1491:
  2721   001A10  EF10  F00D         	goto	l2420
  2722   001A14                     u1490:
  2723   001A14                     
  2724                           ;password.c: 121:         {;password.c: 122:             return 1;
  2725   001A14  0E00               	movlw	0
  2726   001A16  6E02               	movwf	(?_mystrcmp+1)^0,c
  2727   001A18  0E01               	movlw	1
  2728   001A1A  6E01               	movwf	?_mystrcmp^0,c
  2729   001A1C  EF24  F00D         	goto	l319
  2730   001A20                     l2420:
  2731                           
  2732                           ;password.c: 124:         i++;
  2733   001A20  4A07               	infsnz	mystrcmp@i^0,f,c
  2734   001A22  2A08               	incf	(mystrcmp@i+1)^0,f,c
  2735   001A24                     l2422:
  2736                           
  2737                           ;password.c: 118:     while(s1[i]!= '\0')
  2738   001A24  5007               	movf	mystrcmp@i^0,w,c
  2739   001A26  2401               	addwf	mystrcmp@s1^0,w,c
  2740   001A28  6ED9               	movwf	fsr2l,c
  2741   001A2A  5008               	movf	(mystrcmp@i+1)^0,w,c
  2742   001A2C  2002               	addwfc	(mystrcmp@s1+1)^0,w,c
  2743   001A2E  6EDA               	movwf	fsr2h,c
  2744   001A30  50DF               	movf	indf2,w,c
  2745   001A32  A4D8               	btfss	status,2,c
  2746   001A34  EF1E  F00D         	goto	u1501
  2747   001A38  EF20  F00D         	goto	u1500
  2748   001A3C                     u1501:
  2749   001A3C  EFF5  F00C         	goto	l2414
  2750   001A40                     u1500:
  2751   001A40                     
  2752                           ;password.c: 126:     return 0;
  2753   001A40  0E00               	movlw	0
  2754   001A42  6E02               	movwf	(?_mystrcmp+1)^0,c
  2755   001A44  0E00               	movlw	0
  2756   001A46  6E01               	movwf	?_mystrcmp^0,c
  2757   001A48                     l319:
  2758   001A48  0012               	return		;funcret
  2759   001A4A                     __end_of_mystrcmp:
  2760                           	callstack 0
  2761                           
  2762 ;; *************** function _init_config *****************
  2763 ;; Defined at:
  2764 ;;		line 9 in file "main.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2778 ;;      Params:         0       0       0       0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0
  2781 ;;      Totals:         0       0       0       0       0       0       0
  2782 ;;Total ram usage:        0 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 6
  2785 ;; This function calls:
  2786 ;;		_init_adc
  2787 ;;		_init_clcd
  2788 ;;		_init_ds1307
  2789 ;;		_init_i2c
  2790 ;;		_init_matrixkeypad
  2791 ;;		_init_timer0
  2792 ;; This function is called by:
  2793 ;;		_main
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text9
  2798   001D28                     __ptext9:
  2799                           	callstack 0
  2800   001D28                     _init_config:
  2801                           	callstack 24
  2802   001D28                     
  2803                           ;main.c: 10:     init_matrixkeypad();
  2804   001D28  ECD7  F00E         	call	_init_matrixkeypad	;wreg free
  2805                           
  2806                           ;main.c: 11:     init_clcd();
  2807   001D2C  EC39  F00B         	call	_init_clcd	;wreg free
  2808   001D30                     
  2809                           ;main.c: 13:     init_adc();
  2810   001D30  EC85  F00E         	call	_init_adc	;wreg free
  2811   001D34                     
  2812                           ;main.c: 14:     init_timer0();
  2813   001D34  ECA1  F00E         	call	_init_timer0	;wreg free
  2814   001D38                     
  2815                           ;main.c: 15:     init_i2c();
  2816   001D38  ECBA  F00E         	call	_init_i2c	;wreg free
  2817   001D3C                     
  2818                           ;main.c: 16:  init_ds1307();
  2819   001D3C  ECDD  F00D         	call	_init_ds1307	;wreg free
  2820   001D40  0012               	return		;funcret
  2821   001D42                     __end_of_init_config:
  2822                           	callstack 0
  2823                           
  2824 ;; *************** function _init_timer0 *****************
  2825 ;; Defined at:
  2826 ;;		line 3 in file "timer0.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;		None
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;		None
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2840 ;;      Params:         0       0       0       0       0       0       0
  2841 ;;      Locals:         0       0       0       0       0       0       0
  2842 ;;      Temps:          0       0       0       0       0       0       0
  2843 ;;      Totals:         0       0       0       0       0       0       0
  2844 ;;Total ram usage:        0 bytes
  2845 ;; Hardware stack levels used: 1
  2846 ;; Hardware stack levels required when called: 1
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_init_config
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           	psect	text10
  2855   001D42                     __ptext10:
  2856                           	callstack 0
  2857   001D42                     _init_timer0:
  2858                           	callstack 28
  2859   001D42                     
  2860                           ;timer0.c: 5:     GIE=1;
  2861   001D42  8EF2               	bsf	4082,7,c	;volatile
  2862                           
  2863                           ;timer0.c: 6:     PEIE=1;
  2864   001D44  8CF2               	bsf	4082,6,c	;volatile
  2865                           
  2866                           ;timer0.c: 7:     TMR0IE=1;
  2867   001D46  8AF2               	bsf	4082,5,c	;volatile
  2868                           
  2869                           ;timer0.c: 8:     TMR0ON=0;
  2870   001D48  9ED5               	bcf	4053,7,c	;volatile
  2871                           
  2872                           ;timer0.c: 9:     TMR0IF=0;
  2873   001D4A  94F2               	bcf	4082,2,c	;volatile
  2874                           
  2875                           ;timer0.c: 11:     T08BIT=1;
  2876   001D4C  8CD5               	bsf	4053,6,c	;volatile
  2877                           
  2878                           ;timer0.c: 12:     T0CS = 0;
  2879   001D4E  9AD5               	bcf	4053,5,c	;volatile
  2880                           
  2881                           ;timer0.c: 13:     PSA = 1;
  2882   001D50  86D5               	bsf	4053,3,c	;volatile
  2883   001D52                     
  2884                           ;timer0.c: 14:     TMR0 = 6;
  2885   001D52  0E00               	movlw	0
  2886   001D54  6ED7               	movwf	215,c	;volatile
  2887   001D56  0E06               	movlw	6
  2888   001D58  6ED6               	movwf	214,c	;volatile
  2889   001D5A  0012               	return		;funcret
  2890   001D5C                     __end_of_init_timer0:
  2891                           	callstack 0
  2892                           
  2893 ;; *************** function _init_matrixkeypad *****************
  2894 ;; Defined at:
  2895 ;;		line 3 in file "matrixkeyboard.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2909 ;;      Params:         0       0       0       0       0       0       0
  2910 ;;      Locals:         0       0       0       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0
  2912 ;;      Totals:         0       0       0       0       0       0       0
  2913 ;;Total ram usage:        0 bytes
  2914 ;; Hardware stack levels used: 1
  2915 ;; Hardware stack levels required when called: 1
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_init_config
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text11
  2924   001DAE                     __ptext11:
  2925                           	callstack 0
  2926   001DAE                     _init_matrixkeypad:
  2927                           	callstack 28
  2928   001DAE                     
  2929                           ;matrixkeyboard.c: 5:     PORTB =0x00;
  2930   001DAE  0E00               	movlw	0
  2931   001DB0  6E81               	movwf	129,c	;volatile
  2932   001DB2                     
  2933                           ;matrixkeyboard.c: 6:     TRISB = TRISB & 0x1E;
  2934   001DB2  5093               	movf	147,w,c	;volatile
  2935   001DB4  0B1E               	andlw	30
  2936   001DB6  6E93               	movwf	147,c	;volatile
  2937   001DB8                     
  2938                           ;matrixkeyboard.c: 7:     RBPU=0;
  2939   001DB8  9EF1               	bcf	4081,7,c	;volatile
  2940   001DBA  0012               	return		;funcret
  2941   001DBC                     __end_of_init_matrixkeypad:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _init_i2c *****************
  2945 ;; Defined at:
  2946 ;;		line 4 in file "i2c.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2960 ;;      Params:         0       0       0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0
  2963 ;;      Totals:         0       0       0       0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 1
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_init_config
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text12
  2975   001D74                     __ptext12:
  2976                           	callstack 0
  2977   001D74                     _init_i2c:
  2978                           	callstack 28
  2979   001D74                     
  2980                           ;i2c.c: 7:  TRISC3 = 1;
  2981   001D74  8694               	bsf	3988,3,c	;volatile
  2982                           
  2983                           ;i2c.c: 8:  TRISC4 = 1;
  2984   001D76  8894               	bsf	3988,4,c	;volatile
  2985   001D78                     
  2986                           ;i2c.c: 10:  SSPCON1 = 0x28;
  2987   001D78  0E28               	movlw	40
  2988   001D7A  6EC6               	movwf	198,c	;volatile
  2989                           
  2990                           ;i2c.c: 12:  SSPADD = 0x31;
  2991   001D7C  0E31               	movlw	49
  2992   001D7E  6EC8               	movwf	200,c	;volatile
  2993   001D80                     
  2994                           ;i2c.c: 14:  CKE = 0;
  2995   001D80  9CC7               	bcf	4039,6,c	;volatile
  2996   001D82                     
  2997                           ;i2c.c: 16:  SMP = 1;
  2998   001D82  8EC7               	bsf	4039,7,c	;volatile
  2999   001D84                     
  3000                           ;i2c.c: 18:  SSPIF = 0;
  3001   001D84  969E               	bcf	3998,3,c	;volatile
  3002   001D86                     
  3003                           ;i2c.c: 20:  BCLIF = 0;
  3004   001D86  96A1               	bcf	4001,3,c	;volatile
  3005   001D88  0012               	return		;funcret
  3006   001D8A                     __end_of_init_i2c:
  3007                           	callstack 0
  3008                           
  3009 ;; *************** function _init_ds1307 *****************
  3010 ;; Defined at:
  3011 ;;		line 13 in file "ds1307.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  dummy           1    3[COMRAM] unsigned char 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3025 ;;      Params:         0       0       0       0       0       0       0
  3026 ;;      Locals:         1       0       0       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0       0       0
  3028 ;;      Totals:         1       0       0       0       0       0       0
  3029 ;;Total ram usage:        1 bytes
  3030 ;; Hardware stack levels used: 1
  3031 ;; Hardware stack levels required when called: 5
  3032 ;; This function calls:
  3033 ;;		_read_ds1307
  3034 ;;		_write_ds1307
  3035 ;; This function is called by:
  3036 ;;		_init_config
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text13
  3041   001BBA                     __ptext13:
  3042                           	callstack 0
  3043   001BBA                     _init_ds1307:
  3044                           	callstack 24
  3045   001BBA                     
  3046                           ;ds1307.c: 15:  unsigned char dummy;;ds1307.c: 18:  dummy = read_ds1307(0x00);
  3047   001BBA  0E00               	movlw	0
  3048   001BBC  EC4F  F00E         	call	_read_ds1307
  3049   001BC0  6E04               	movwf	init_ds1307@dummy^0,c
  3050   001BC2                     
  3051                           ;ds1307.c: 19:  write_ds1307(0x00, dummy | 0x80);
  3052   001BC2  5004               	movf	init_ds1307@dummy^0,w,c
  3053   001BC4  0980               	iorlw	128
  3054   001BC6  6E02               	movwf	write_ds1307@data^0,c
  3055   001BC8  0E00               	movlw	0
  3056   001BCA  EC76  F00E         	call	_write_ds1307
  3057   001BCE                     
  3058                           ;ds1307.c: 22:  dummy = read_ds1307(0x02);
  3059   001BCE  0E02               	movlw	2
  3060   001BD0  EC4F  F00E         	call	_read_ds1307
  3061   001BD4  6E04               	movwf	init_ds1307@dummy^0,c
  3062                           
  3063                           ;ds1307.c: 23:  write_ds1307(0x02, dummy | 0x40);
  3064   001BD6  5004               	movf	init_ds1307@dummy^0,w,c
  3065   001BD8  0940               	iorlw	64
  3066   001BDA  6E02               	movwf	write_ds1307@data^0,c
  3067   001BDC  0E02               	movlw	2
  3068   001BDE  EC76  F00E         	call	_write_ds1307
  3069   001BE2                     
  3070                           ;ds1307.c: 38:  write_ds1307(0x07, 0x93);
  3071   001BE2  0E93               	movlw	147
  3072   001BE4  6E02               	movwf	write_ds1307@data^0,c
  3073   001BE6  0E07               	movlw	7
  3074   001BE8  EC76  F00E         	call	_write_ds1307
  3075   001BEC                     
  3076                           ;ds1307.c: 41:  dummy = read_ds1307(0x00);
  3077   001BEC  0E00               	movlw	0
  3078   001BEE  EC4F  F00E         	call	_read_ds1307
  3079   001BF2  6E04               	movwf	init_ds1307@dummy^0,c
  3080                           
  3081                           ;ds1307.c: 42:  write_ds1307(0x00, dummy & 0x7F);
  3082   001BF4  5004               	movf	init_ds1307@dummy^0,w,c
  3083   001BF6  0B7F               	andlw	127
  3084   001BF8  6E02               	movwf	write_ds1307@data^0,c
  3085   001BFA  0E00               	movlw	0
  3086   001BFC  EC76  F00E         	call	_write_ds1307
  3087   001C00  0012               	return		;funcret
  3088   001C02                     __end_of_init_ds1307:
  3089                           	callstack 0
  3090                           
  3091 ;; *************** function _write_ds1307 *****************
  3092 ;; Defined at:
  3093 ;;		line 46 in file "ds1307.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  address         1    wreg     unsigned char 
  3096 ;;  data            1    1[COMRAM] unsigned char 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  address         1    2[COMRAM] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3108 ;;      Params:         1       0       0       0       0       0       0
  3109 ;;      Locals:         1       0       0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0       0       0
  3111 ;;      Totals:         2       0       0       0       0       0       0
  3112 ;;Total ram usage:        2 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 3
  3115 ;; This function calls:
  3116 ;;		_i2c_start
  3117 ;;		_i2c_stop
  3118 ;;		_i2c_write
  3119 ;; This function is called by:
  3120 ;;		_init_ds1307
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text14
  3125   001CEC                     __ptext14:
  3126                           	callstack 0
  3127   001CEC                     _write_ds1307:
  3128                           	callstack 25
  3129                           
  3130                           ;incstack = 0
  3131                           ;write_ds1307@address stored from wreg
  3132   001CEC  6E03               	movwf	write_ds1307@address^0,c
  3133   001CEE                     
  3134                           ;ds1307.c: 46: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 47
      +                          : {;ds1307.c: 48:  i2c_start();
  3135   001CEE  ECF7  F00E         	call	_i2c_start	;wreg free
  3136   001CF2                     
  3137                           ;ds1307.c: 49:  i2c_write(0xD0);
  3138   001CF2  0ED0               	movlw	208
  3139   001CF4  ECDE  F00E         	call	_i2c_write
  3140   001CF8                     
  3141                           ;ds1307.c: 50:  i2c_write(address);
  3142   001CF8  5003               	movf	write_ds1307@address^0,w,c
  3143   001CFA  ECDE  F00E         	call	_i2c_write
  3144   001CFE                     
  3145                           ;ds1307.c: 51:  i2c_write(data);
  3146   001CFE  5002               	movf	write_ds1307@data^0,w,c
  3147   001D00  ECDE  F00E         	call	_i2c_write
  3148   001D04                     
  3149                           ;ds1307.c: 52:  i2c_stop();
  3150   001D04  ECF3  F00E         	call	_i2c_stop	;wreg free
  3151   001D08  0012               	return		;funcret
  3152   001D0A                     __end_of_write_ds1307:
  3153                           	callstack 0
  3154                           
  3155 ;; *************** function _init_clcd *****************
  3156 ;; Defined at:
  3157 ;;		line 26 in file "clcd.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3171 ;;      Params:         0       0       0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0
  3173 ;;      Temps:          2       0       0       0       0       0       0
  3174 ;;      Totals:         2       0       0       0       0       0       0
  3175 ;;Total ram usage:        2 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 2
  3178 ;; This function calls:
  3179 ;;		_clcd_write
  3180 ;; This function is called by:
  3181 ;;		_init_config
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text15
  3186   001672                     __ptext15:
  3187                           	callstack 0
  3188   001672                     _init_clcd:
  3189                           	callstack 27
  3190   001672                     
  3191                           ;clcd.c: 29:  TRISD = 0x00;
  3192   001672  0E00               	movlw	0
  3193   001674  6E95               	movwf	149,c	;volatile
  3194   001676                     
  3195                           ;clcd.c: 31:  TRISC = TRISC & 0xF8;
  3196   001676  5094               	movf	148,w,c	;volatile
  3197   001678  0BF8               	andlw	248
  3198   00167A  6E94               	movwf	148,c	;volatile
  3199   00167C                     
  3200                           ;clcd.c: 32:    ECCP1CONbits.ECCP1M = 0;
  3201   00167C  0EF0               	movlw	-16
  3202   00167E  16BA               	andwf	186,f,c	;volatile
  3203   001680                     
  3204                           ;clcd.c: 33:     CCP1CON = 0;
  3205   001680  0E00               	movlw	0
  3206   001682  6EBD               	movwf	189,c	;volatile
  3207   001684                     
  3208                           ;clcd.c: 34:     TRISEbits.PSPMODE = 0;
  3209   001684  9896               	bcf	150,4,c	;volatile
  3210   001686                     
  3211                           ;clcd.c: 35:     CMCON = 0x07;
  3212   001686  0E07               	movlw	7
  3213   001688  6EB4               	movwf	180,c	;volatile
  3214   00168A                     
  3215                           ;clcd.c: 36:  PORTCbits.RC0 = 0;
  3216   00168A  9082               	bcf	130,0,c	;volatile
  3217   00168C                     
  3218                           ;clcd.c: 40:     _delay((unsigned long)((40)*(20000000/4000.0)));
  3219   00168C  0E02               	movlw	2
  3220   00168E  6E04               	movwf	(??_init_clcd+1)^0,c
  3221   001690  0E04               	movlw	4
  3222   001692  6E03               	movwf	??_init_clcd^0,c
  3223   001694  0EBA               	movlw	186
  3224   001696                     u2277:
  3225   001696  2EE8               	decfsz	wreg,f,c
  3226   001698  D7FE               	bra	u2277
  3227   00169A  2E03               	decfsz	??_init_clcd^0,f,c
  3228   00169C  D7FC               	bra	u2277
  3229   00169E  2E04               	decfsz	(??_init_clcd+1)^0,f,c
  3230   0016A0  D7FA               	bra	u2277
  3231   0016A2  D000               	nop2	
  3232   0016A4                     
  3233                           ;clcd.c: 43:     clcd_write(0x33, 0 );
  3234   0016A4  0E00               	movlw	0
  3235   0016A6  6E01               	movwf	clcd_write@control_bit^0,c
  3236   0016A8  0E33               	movlw	51
  3237   0016AA  EC36  F00E         	call	_clcd_write
  3238   0016AE                     
  3239                           ;clcd.c: 44:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  3240   0016AE  0E1B               	movlw	27
  3241   0016B0  6E03               	movwf	??_init_clcd^0,c
  3242   0016B2  0E9E               	movlw	158
  3243   0016B4                     u2287:
  3244   0016B4  2EE8               	decfsz	wreg,f,c
  3245   0016B6  D7FE               	bra	u2287
  3246   0016B8  2E03               	decfsz	??_init_clcd^0,f,c
  3247   0016BA  D7FC               	bra	u2287
  3248   0016BC  D000               	nop2	
  3249   0016BE                     
  3250                           ;clcd.c: 45:     clcd_write(0x33, 0 );
  3251   0016BE  0E00               	movlw	0
  3252   0016C0  6E01               	movwf	clcd_write@control_bit^0,c
  3253   0016C2  0E33               	movlw	51
  3254   0016C4  EC36  F00E         	call	_clcd_write
  3255   0016C8                     
  3256                           ;clcd.c: 46:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3257   0016C8  0EA6               	movlw	166
  3258   0016CA                     u2297:
  3259   0016CA  2EE8               	decfsz	wreg,f,c
  3260   0016CC  D7FE               	bra	u2297
  3261   0016CE  D000               	nop2	
  3262   0016D0                     
  3263                           ;clcd.c: 47:     clcd_write(0x33, 0 );
  3264   0016D0  0E00               	movlw	0
  3265   0016D2  6E01               	movwf	clcd_write@control_bit^0,c
  3266   0016D4  0E33               	movlw	51
  3267   0016D6  EC36  F00E         	call	_clcd_write
  3268   0016DA                     
  3269                           ;clcd.c: 48:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  3270   0016DA  D000               	nop2		;2 cycle nop
  3271   0016DC  D000               	nop2		;2 cycle nop
  3272   0016DE  F000               	nop	
  3273   0016E0                     
  3274                           ;clcd.c: 50:     clcd_write(0x02, 0);
  3275   0016E0  0E00               	movlw	0
  3276   0016E2  6E01               	movwf	clcd_write@control_bit^0,c
  3277   0016E4  0E02               	movlw	2
  3278   0016E6  EC36  F00E         	call	_clcd_write
  3279   0016EA                     
  3280                           ;clcd.c: 51:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3281   0016EA  0EA6               	movlw	166
  3282   0016EC                     u2307:
  3283   0016EC  2EE8               	decfsz	wreg,f,c
  3284   0016EE  D7FE               	bra	u2307
  3285   0016F0  D000               	nop2	
  3286   0016F2                     
  3287                           ;clcd.c: 52:     clcd_write(0x38, 0);
  3288   0016F2  0E00               	movlw	0
  3289   0016F4  6E01               	movwf	clcd_write@control_bit^0,c
  3290   0016F6  0E38               	movlw	56
  3291   0016F8  EC36  F00E         	call	_clcd_write
  3292   0016FC                     
  3293                           ;clcd.c: 53:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3294   0016FC  0EA6               	movlw	166
  3295   0016FE                     u2317:
  3296   0016FE  2EE8               	decfsz	wreg,f,c
  3297   001700  D7FE               	bra	u2317
  3298   001702  D000               	nop2	
  3299   001704                     
  3300                           ;clcd.c: 54:     clcd_write(0x01, 0);
  3301   001704  0E00               	movlw	0
  3302   001706  6E01               	movwf	clcd_write@control_bit^0,c
  3303   001708  0E01               	movlw	1
  3304   00170A  EC36  F00E         	call	_clcd_write
  3305   00170E                     
  3306                           ;clcd.c: 55:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  3307   00170E  0E04               	movlw	4
  3308   001710  6E03               	movwf	??_init_clcd^0,c
  3309   001712  0E3E               	movlw	62
  3310   001714                     u2327:
  3311   001714  2EE8               	decfsz	wreg,f,c
  3312   001716  D7FE               	bra	u2327
  3313   001718  2E03               	decfsz	??_init_clcd^0,f,c
  3314   00171A  D7FC               	bra	u2327
  3315   00171C                     
  3316                           ;clcd.c: 56:     clcd_write(0x0C, 0);
  3317   00171C  0E00               	movlw	0
  3318   00171E  6E01               	movwf	clcd_write@control_bit^0,c
  3319   001720  0E0C               	movlw	12
  3320   001722  EC36  F00E         	call	_clcd_write
  3321   001726                     
  3322                           ;clcd.c: 57:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3323   001726  0EA6               	movlw	166
  3324   001728                     u2337:
  3325   001728  2EE8               	decfsz	wreg,f,c
  3326   00172A  D7FE               	bra	u2337
  3327   00172C  D000               	nop2	
  3328   00172E  0012               	return		;funcret
  3329   001730                     __end_of_init_clcd:
  3330                           	callstack 0
  3331                           
  3332 ;; *************** function _init_adc *****************
  3333 ;; Defined at:
  3334 ;;		line 3 in file "adc.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		None
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3348 ;;      Params:         0       0       0       0       0       0       0
  3349 ;;      Locals:         0       0       0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0
  3351 ;;      Totals:         0       0       0       0       0       0       0
  3352 ;;Total ram usage:        0 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; Hardware stack levels required when called: 1
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_init_config
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text16
  3363   001D0A                     __ptext16:
  3364                           	callstack 0
  3365   001D0A                     _init_adc:
  3366                           	callstack 28
  3367   001D0A                     
  3368                           ;adc.c: 5:     ADON=1;
  3369   001D0A  80C2               	bsf	4034,0,c	;volatile
  3370                           
  3371                           ;adc.c: 6:     VCFG1=0, VCFG0=0;
  3372   001D0C  9AC1               	bcf	4033,5,c	;volatile
  3373   001D0E  98C1               	bcf	4033,4,c	;volatile
  3374                           
  3375                           ;adc.c: 7:     PCFG3=1, PCFG2=0, PCFG1=1, PCFG0=0;
  3376   001D10  86C1               	bsf	4033,3,c	;volatile
  3377   001D12  94C1               	bcf	4033,2,c	;volatile
  3378   001D14  82C1               	bsf	4033,1,c	;volatile
  3379   001D16  90C1               	bcf	4033,0,c	;volatile
  3380                           
  3381                           ;adc.c: 8:     ACQT2=1, ACQT1=0, ACQT0=0;
  3382   001D18  8AC0               	bsf	4032,5,c	;volatile
  3383   001D1A  98C0               	bcf	4032,4,c	;volatile
  3384   001D1C  96C0               	bcf	4032,3,c	;volatile
  3385                           
  3386                           ;adc.c: 9:     ADCS2=0, ADCS1=1, ADCS0=0;
  3387   001D1E  94C0               	bcf	4032,2,c	;volatile
  3388   001D20  82C0               	bsf	4032,1,c	;volatile
  3389   001D22  90C0               	bcf	4032,0,c	;volatile
  3390                           
  3391                           ;adc.c: 10:     ADFM=1;
  3392   001D24  8EC0               	bsf	4032,7,c	;volatile
  3393   001D26  0012               	return		;funcret
  3394   001D28                     __end_of_init_adc:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _display_dashboard *****************
  3398 ;; Defined at:
  3399 ;;		line 6 in file "car_black_box.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  uckey           1    wreg     unsigned char 
  3402 ;;  usads           2   19[COMRAM] unsigned short 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  uckey           1   21[COMRAM] unsigned char 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      void 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3414 ;;      Params:         2       0       0       0       0       0       0
  3415 ;;      Locals:         1       0       0       0       0       0       0
  3416 ;;      Temps:          0       0       0       0       0       0       0
  3417 ;;      Totals:         3       0       0       0       0       0       0
  3418 ;;Total ram usage:        3 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 7
  3421 ;; This function calls:
  3422 ;;		_clcd_print
  3423 ;;		_clcd_putch
  3424 ;;		_display_speed
  3425 ;;		_display_time
  3426 ;;		_gear_monitor
  3427 ;; This function is called by:
  3428 ;;		_main
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text17
  3433   001C38                     __ptext17:
  3434                           	callstack 0
  3435   001C38                     _display_dashboard:
  3436                           	callstack 23
  3437                           
  3438                           ;incstack = 0
  3439                           ;display_dashboard@uckey stored from wreg
  3440   001C38  6E16               	movwf	display_dashboard@uckey^0,c
  3441   001C3A                     
  3442                           ;car_black_box.c: 6: void display_dashboard(unsigned char uckey, unsigned short usads);c
      +                          ar_black_box.c: 7: {;car_black_box.c: 8:     clcd_print( (unsigned char*) "   Time    E 
      +                           S" , (0x80 + (0)));
  3443   001C3A  0E56               	movlw	low STR_9
  3444   001C3C  6E03               	movwf	clcd_print@data^0,c
  3445   001C3E  0E06               	movlw	high STR_9
  3446   001C40  6E04               	movwf	(clcd_print@data+1)^0,c
  3447   001C42  0E80               	movlw	128
  3448   001C44  6E05               	movwf	clcd_print@addr^0,c
  3449   001C46  EC25  F00D         	call	_clcd_print	;wreg free
  3450   001C4A                     
  3451                           ;car_black_box.c: 10:     clcd_putch(0x70,(0x80 + (15)));
  3452   001C4A  0E8F               	movlw	143
  3453   001C4C  6E0F               	movwf	clcd_putch@addr^0,c
  3454   001C4E  0E70               	movlw	112
  3455   001C50  ECAE  F00E         	call	_clcd_putch
  3456   001C54                     
  3457                           ;car_black_box.c: 11:     display_time();
  3458   001C54  ECEA  F00E         	call	_display_time	;wreg free
  3459   001C58                     
  3460                           ;car_black_box.c: 12:     gear_monitor(uckey);
  3461   001C58  5016               	movf	display_dashboard@uckey^0,w,c
  3462   001C5A  ECF9  F009         	call	_gear_monitor
  3463   001C5E                     
  3464                           ;car_black_box.c: 13:     display_speed(usads);
  3465   001C5E  C014  F011         	movff	display_dashboard@usads,display_speed@usadc
  3466   001C62  C015  F012         	movff	display_dashboard@usads+1,display_speed@usadc+1
  3467   001C66  EC8E  F00D         	call	_display_speed	;wreg free
  3468   001C6A  0012               	return		;funcret
  3469   001C6C                     __end_of_display_dashboard:
  3470                           	callstack 0
  3471                           
  3472 ;; *************** function _gear_monitor *****************
  3473 ;; Defined at:
  3474 ;;		line 49 in file "car_black_box.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  uckey           1    wreg     unsigned char 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  uckey           1   18[COMRAM] unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3488 ;;      Params:         0       0       0       0       0       0       0
  3489 ;;      Locals:         1       0       0       0       0       0       0
  3490 ;;      Temps:          2       0       0       0       0       0       0
  3491 ;;      Totals:         3       0       0       0       0       0       0
  3492 ;;Total ram usage:        3 bytes
  3493 ;; Hardware stack levels used: 1
  3494 ;; Hardware stack levels required when called: 3
  3495 ;; This function calls:
  3496 ;;		_clcd_putch
  3497 ;; This function is called by:
  3498 ;;		_display_dashboard
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text18
  3503   0013F2                     __ptext18:
  3504                           	callstack 0
  3505   0013F2                     _gear_monitor:
  3506                           	callstack 26
  3507                           
  3508                           ;incstack = 0
  3509                           ;gear_monitor@uckey stored from wreg
  3510   0013F2  6E13               	movwf	gear_monitor@uckey^0,c
  3511   0013F4                     
  3512                           ;car_black_box.c: 50:     static char signindex=0, crashflag=0;;car_black_box.c: 51:    
      +                           if(uckey == 1)
  3513   0013F4  0413               	decf	gear_monitor@uckey^0,w,c
  3514   0013F6  A4D8               	btfss	status,2,c
  3515   0013F8  EF00  F00A         	goto	u1361
  3516   0013FC  EF02  F00A         	goto	u1360
  3517   001400                     u1361:
  3518   001400  EF08  F00A         	goto	l2352
  3519   001404                     u1360:
  3520   001404                     
  3521                           ;car_black_box.c: 52:     {;car_black_box.c: 53:         crashflag=1;
  3522   001404  0E01               	movlw	1
  3523   001406  6E52               	movwf	gear_monitor@crashflag^0,c
  3524                           
  3525                           ;car_black_box.c: 54:         signindex=7;
  3526   001408  0E07               	movlw	7
  3527   00140A  6E53               	movwf	gear_monitor@signindex^0,c
  3528                           
  3529                           ;car_black_box.c: 55:     }
  3530   00140C  EF47  F00A         	goto	l2370
  3531   001410                     l2352:
  3532   001410  0E02               	movlw	2
  3533   001412  1813               	xorwf	gear_monitor@uckey^0,w,c
  3534   001414  A4D8               	btfss	status,2,c
  3535   001416  EF0F  F00A         	goto	u1371
  3536   00141A  EF11  F00A         	goto	u1370
  3537   00141E                     u1371:
  3538   00141E  EF2B  F00A         	goto	l2362
  3539   001422                     u1370:
  3540   001422                     
  3541                           ;car_black_box.c: 57:     {;car_black_box.c: 58:         if(signindex < 6)
  3542   001422  0E06               	movlw	6
  3543   001424  6053               	cpfslt	gear_monitor@signindex^0,c
  3544   001426  EF17  F00A         	goto	u1381
  3545   00142A  EF19  F00A         	goto	u1380
  3546   00142E                     u1381:
  3547   00142E  EF1C  F00A         	goto	l2358
  3548   001432                     u1380:
  3549   001432                     
  3550                           ;car_black_box.c: 59:             signindex++;
  3551   001432  2A53               	incf	gear_monitor@signindex^0,f,c
  3552   001434  EF47  F00A         	goto	l2370
  3553   001438                     l2358:
  3554   001438  0E07               	movlw	7
  3555   00143A  1853               	xorwf	gear_monitor@signindex^0,w,c
  3556   00143C  A4D8               	btfss	status,2,c
  3557   00143E  EF23  F00A         	goto	u1391
  3558   001442  EF25  F00A         	goto	u1390
  3559   001446                     u1391:
  3560   001446  EF47  F00A         	goto	l142
  3561   00144A                     u1390:
  3562   00144A                     
  3563                           ;car_black_box.c: 61:         {;car_black_box.c: 62:             signindex=1;
  3564   00144A  0E01               	movlw	1
  3565   00144C  6E53               	movwf	gear_monitor@signindex^0,c
  3566                           
  3567                           ;car_black_box.c: 63:             crashflag=0;
  3568   00144E  0E00               	movlw	0
  3569   001450  6E52               	movwf	gear_monitor@crashflag^0,c
  3570   001452  EF47  F00A         	goto	l2370
  3571   001456                     l2362:
  3572   001456  0E03               	movlw	3
  3573   001458  1813               	xorwf	gear_monitor@uckey^0,w,c
  3574   00145A  A4D8               	btfss	status,2,c
  3575   00145C  EF32  F00A         	goto	u1401
  3576   001460  EF34  F00A         	goto	u1400
  3577   001464                     u1401:
  3578   001464  EF47  F00A         	goto	l2370
  3579   001468                     u1400:
  3580   001468                     
  3581                           ;car_black_box.c: 67:     {;car_black_box.c: 68:           if(crashflag ==0 && signindex
      +                           > 1)
  3582   001468  5052               	movf	gear_monitor@crashflag^0,w,c
  3583   00146A  A4D8               	btfss	status,2,c
  3584   00146C  EF3A  F00A         	goto	u1411
  3585   001470  EF3C  F00A         	goto	u1410
  3586   001474                     u1411:
  3587   001474  EF47  F00A         	goto	l142
  3588   001478                     u1410:
  3589   001478  0E01               	movlw	1
  3590   00147A  6453               	cpfsgt	gear_monitor@signindex^0,c
  3591   00147C  EF42  F00A         	goto	u1421
  3592   001480  EF44  F00A         	goto	u1420
  3593   001484                     u1421:
  3594   001484  EF47  F00A         	goto	l142
  3595   001488                     u1420:
  3596   001488                     
  3597                           ;car_black_box.c: 69:               signindex--;
  3598   001488  0653               	decf	gear_monitor@signindex^0,f,c
  3599   00148A  EF47  F00A         	goto	l2370
  3600   00148E                     l142:
  3601   00148E                     l2370:
  3602                           
  3603                           ;car_black_box.c: 71:     clcd_putch(signature[signindex][0], (0xC0 + (11)));
  3604   00148E  0ECB               	movlw	203
  3605   001490  6E0F               	movwf	clcd_putch@addr^0,c
  3606   001492  5053               	movf	gear_monitor@signindex^0,w,c
  3607   001494  0D02               	mullw	2
  3608   001496  0E60               	movlw	low _signature
  3609   001498  24F3               	addwf	243,w,c
  3610   00149A  6ED9               	movwf	fsr2l,c
  3611   00149C  0E00               	movlw	high _signature
  3612   00149E  20F4               	addwfc	prodh,w,c
  3613   0014A0  6EDA               	movwf	fsr2h,c
  3614   0014A2  CFDE FFF6          	movff	postinc2,tblptrl
  3615   0014A6  CFDD FFF7          	movff	postdec2,tblptrh
  3616   0014AA                     	if	0	;tblptru may be non-zero
  3617   0014AA                     	endif
  3618   0014AA                     	if	0	;tblptru may be non-zero
  3619   0014AA                     	endif
  3620   0014AA  0008               	tblrd		*
  3621   0014AC  50F5               	movf	tablat,w,c
  3622   0014AE  ECAE  F00E         	call	_clcd_putch
  3623   0014B2                     
  3624                           ;car_black_box.c: 72:     clcd_putch(signature[signindex][1], (0xC0 + (12)));
  3625   0014B2  0ECC               	movlw	204
  3626   0014B4  6E0F               	movwf	clcd_putch@addr^0,c
  3627   0014B6  5053               	movf	gear_monitor@signindex^0,w,c
  3628   0014B8  0D02               	mullw	2
  3629   0014BA  0E60               	movlw	low _signature
  3630   0014BC  24F3               	addwf	243,w,c
  3631   0014BE  6ED9               	movwf	fsr2l,c
  3632   0014C0  0E00               	movlw	high _signature
  3633   0014C2  20F4               	addwfc	prodh,w,c
  3634   0014C4  6EDA               	movwf	fsr2h,c
  3635   0014C6  CFDE F011          	movff	postinc2,??_gear_monitor
  3636   0014CA  CFDD F012          	movff	postdec2,??_gear_monitor+1
  3637   0014CE  0E01               	movlw	1
  3638   0014D0  2611               	addwf	??_gear_monitor^0,f,c
  3639   0014D2  0E00               	movlw	0
  3640   0014D4  2212               	addwfc	(??_gear_monitor+1)^0,f,c
  3641   0014D6  C011  FFF6         	movff	??_gear_monitor,tblptrl
  3642   0014DA  C012  FFF7         	movff	??_gear_monitor+1,tblptrh
  3643   0014DE                     	if	0	;tblptru may be non-zero
  3644   0014DE                     	endif
  3645   0014DE                     	if	0	;tblptru may be non-zero
  3646   0014DE                     	endif
  3647   0014DE  0008               	tblrd		*
  3648   0014E0  50F5               	movf	tablat,w,c
  3649   0014E2  ECAE  F00E         	call	_clcd_putch
  3650   0014E6  0012               	return		;funcret
  3651   0014E8                     __end_of_gear_monitor:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _display_time *****************
  3655 ;; Defined at:
  3656 ;;		line 15 in file "car_black_box.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3670 ;;      Params:         0       0       0       0       0       0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0
  3672 ;;      Temps:          0       0       0       0       0       0       0
  3673 ;;      Totals:         0       0       0       0       0       0       0
  3674 ;;Total ram usage:        0 bytes
  3675 ;; Hardware stack levels used: 1
  3676 ;; Hardware stack levels required when called: 6
  3677 ;; This function calls:
  3678 ;;		_display_times
  3679 ;;		_get_time
  3680 ;; This function is called by:
  3681 ;;		_display_dashboard
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           	psect	text19
  3686   001DD4                     __ptext19:
  3687                           	callstack 0
  3688   001DD4                     _display_time:
  3689                           	callstack 23
  3690   001DD4                     
  3691                           ;car_black_box.c: 17:      get_time();
  3692   001DD4  EC38  F00C         	call	_get_time	;wreg free
  3693   001DD8                     
  3694                           ;car_black_box.c: 18:   display_times();
  3695   001DD8  ECCE  F00E         	call	_display_times	;wreg free
  3696   001DDC  0012               	return		;funcret
  3697   001DDE                     __end_of_display_time:
  3698                           	callstack 0
  3699                           
  3700 ;; *************** function _get_time *****************
  3701 ;; Defined at:
  3702 ;;		line 25 in file "car_black_box.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3716 ;;      Params:         0       0       0       0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0
  3719 ;;      Totals:         0       0       0       0       0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; Hardware stack levels required when called: 5
  3723 ;; This function calls:
  3724 ;;		_read_ds1307
  3725 ;; This function is called by:
  3726 ;;		_display_time
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text20
  3731   001870                     __ptext20:
  3732                           	callstack 0
  3733   001870                     _get_time:
  3734                           	callstack 23
  3735   001870                     
  3736                           ;car_black_box.c: 27:  clock_reg[0] = read_ds1307(0x02);
  3737   001870  0E02               	movlw	2
  3738   001872  EC4F  F00E         	call	_read_ds1307
  3739   001876  6E3D               	movwf	_clock_reg^0,c
  3740                           
  3741                           ;car_black_box.c: 28:  clock_reg[1] = read_ds1307(0x01);
  3742   001878  0E01               	movlw	1
  3743   00187A  EC4F  F00E         	call	_read_ds1307
  3744   00187E  6E3E               	movwf	(_clock_reg+1)^0,c
  3745                           
  3746                           ;car_black_box.c: 29:  clock_reg[2] = read_ds1307(0x00);
  3747   001880  0E00               	movlw	0
  3748   001882  EC4F  F00E         	call	_read_ds1307
  3749   001886  6E3F               	movwf	(_clock_reg+2)^0,c
  3750   001888                     
  3751                           ;car_black_box.c: 31:  if (clock_reg[0] & 0x40)
  3752   001888  AC3D               	btfss	_clock_reg^0,6,c
  3753   00188A  EF49  F00C         	goto	u1201
  3754   00188E  EF4B  F00C         	goto	u1200
  3755   001892                     u1201:
  3756   001892  EF57  F00C         	goto	l2140
  3757   001896                     u1200:
  3758   001896                     
  3759                           ;car_black_box.c: 32:  {;car_black_box.c: 33:   time[0] = '0' + ((clock_reg[0] >> 4) & 0
      +                          x01);
  3760   001896  383D               	swapf	_clock_reg^0,w,c
  3761   001898  0B0F               	andlw	15
  3762   00189A  0B01               	andlw	1
  3763   00189C  0F30               	addlw	48
  3764   00189E  0100               	movlb	0	; () banked
  3765   0018A0  6F91               	movwf	_time& (0+255),b
  3766                           
  3767                           ;car_black_box.c: 34:   time[1] = '0' + (clock_reg[0] & 0x0F);
  3768   0018A2  503D               	movf	_clock_reg^0,w,c
  3769   0018A4  0B0F               	andlw	15
  3770   0018A6  0F30               	addlw	48
  3771   0018A8  6F92               	movwf	(_time+1)& (0+255),b
  3772                           
  3773                           ;car_black_box.c: 35:  }
  3774   0018AA  EF61  F00C         	goto	l2142
  3775   0018AE                     l2140:
  3776                           
  3777                           ;car_black_box.c: 37:  {;car_black_box.c: 38:   time[0] = '0' + ((clock_reg[0] >> 4) & 0
      +                          x03);
  3778   0018AE  383D               	swapf	_clock_reg^0,w,c
  3779   0018B0  0B0F               	andlw	15
  3780   0018B2  0B03               	andlw	3
  3781   0018B4  0F30               	addlw	48
  3782   0018B6  0100               	movlb	0	; () banked
  3783   0018B8  6F91               	movwf	_time& (0+255),b
  3784                           
  3785                           ;car_black_box.c: 39:   time[1] = '0' + (clock_reg[0] & 0x0F);
  3786   0018BA  503D               	movf	_clock_reg^0,w,c
  3787   0018BC  0B0F               	andlw	15
  3788   0018BE  0F30               	addlw	48
  3789   0018C0  6F92               	movwf	(_time+1)& (0+255),b
  3790   0018C2                     l2142:
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;car_black_box.c: 41:  time[2] = ':';
  3794   0018C2  0E3A               	movlw	58
  3795   0018C4  6F93               	movwf	(_time+2)& (0+255),b
  3796   0018C6                     
  3797                           ; BSR set to: 0
  3798                           ;car_black_box.c: 42:  time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  3799   0018C6  383E               	swapf	(_clock_reg+1)^0,w,c
  3800   0018C8  0B0F               	andlw	15
  3801   0018CA  0B0F               	andlw	15
  3802   0018CC  0F30               	addlw	48
  3803   0018CE  6F94               	movwf	(_time+3)& (0+255),b
  3804   0018D0                     
  3805                           ; BSR set to: 0
  3806                           ;car_black_box.c: 43:  time[4] = '0' + (clock_reg[1] & 0x0F);
  3807   0018D0  503E               	movf	(_clock_reg+1)^0,w,c
  3808   0018D2  0B0F               	andlw	15
  3809   0018D4  0F30               	addlw	48
  3810   0018D6  6F95               	movwf	(_time+4)& (0+255),b
  3811   0018D8                     
  3812                           ; BSR set to: 0
  3813                           ;car_black_box.c: 44:  time[5] = ':';
  3814   0018D8  0E3A               	movlw	58
  3815   0018DA  6F96               	movwf	(_time+5)& (0+255),b
  3816                           
  3817                           ;car_black_box.c: 45:  time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  3818   0018DC  383F               	swapf	(_clock_reg+2)^0,w,c
  3819   0018DE  0B0F               	andlw	15
  3820   0018E0  0B0F               	andlw	15
  3821   0018E2  0F30               	addlw	48
  3822   0018E4  6F97               	movwf	(_time+6)& (0+255),b
  3823                           
  3824                           ;car_black_box.c: 46:  time[7] = '0' + (clock_reg[2] & 0x0F);
  3825   0018E6  503F               	movf	(_clock_reg+2)^0,w,c
  3826   0018E8  0B0F               	andlw	15
  3827   0018EA  0F30               	addlw	48
  3828   0018EC  6F98               	movwf	(_time+7)& (0+255),b
  3829   0018EE                     
  3830                           ; BSR set to: 0
  3831                           ;car_black_box.c: 47:  time[8] = '\0';
  3832   0018EE  0E00               	movlw	0
  3833   0018F0  6F99               	movwf	(_time+8)& (0+255),b
  3834   0018F2                     
  3835                           ; BSR set to: 0
  3836   0018F2  0012               	return		;funcret
  3837   0018F4                     __end_of_get_time:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _read_ds1307 *****************
  3841 ;; Defined at:
  3842 ;;		line 55 in file "ds1307.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  address         1    wreg     unsigned char 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  address         1    1[COMRAM] unsigned char 
  3847 ;;  data            1    2[COMRAM] unsigned char 
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      unsigned char 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2, cstack
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3857 ;;      Params:         0       0       0       0       0       0       0
  3858 ;;      Locals:         2       0       0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0       0       0
  3860 ;;      Totals:         2       0       0       0       0       0       0
  3861 ;;Total ram usage:        2 bytes
  3862 ;; Hardware stack levels used: 1
  3863 ;; Hardware stack levels required when called: 4
  3864 ;; This function calls:
  3865 ;;		_i2c_read
  3866 ;;		_i2c_rep_start
  3867 ;;		_i2c_start
  3868 ;;		_i2c_stop
  3869 ;;		_i2c_write
  3870 ;; This function is called by:
  3871 ;;		_get_time
  3872 ;;		_init_ds1307
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text21
  3877   001C9E                     __ptext21:
  3878                           	callstack 0
  3879   001C9E                     _read_ds1307:
  3880                           	callstack 24
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;incstack = 0
  3884                           ;read_ds1307@address stored from wreg
  3885   001C9E  6E02               	movwf	read_ds1307@address^0,c
  3886   001CA0                     
  3887                           ;ds1307.c: 55: unsigned char read_ds1307(unsigned char address);ds1307.c: 56: {;ds1307.c
      +                          : 57:  unsigned char data;;ds1307.c: 59:  i2c_start();
  3888   001CA0  ECF7  F00E         	call	_i2c_start	;wreg free
  3889   001CA4                     
  3890                           ;ds1307.c: 60:  i2c_write(0xD0);
  3891   001CA4  0ED0               	movlw	208
  3892   001CA6  ECDE  F00E         	call	_i2c_write
  3893   001CAA                     
  3894                           ;ds1307.c: 61:  i2c_write(address);
  3895   001CAA  5002               	movf	read_ds1307@address^0,w,c
  3896   001CAC  ECDE  F00E         	call	_i2c_write
  3897   001CB0                     
  3898                           ;ds1307.c: 62:  i2c_rep_start();
  3899   001CB0  ECFB  F00E         	call	_i2c_rep_start	;wreg free
  3900   001CB4                     
  3901                           ;ds1307.c: 63:  i2c_write(0xD1);
  3902   001CB4  0ED1               	movlw	209
  3903   001CB6  ECDE  F00E         	call	_i2c_write
  3904                           
  3905                           ;ds1307.c: 64:  data = i2c_read();
  3906   001CBA  ECE4  F00E         	call	_i2c_read	;wreg free
  3907   001CBE  6E03               	movwf	read_ds1307@data^0,c
  3908   001CC0                     
  3909                           ;ds1307.c: 65:  i2c_stop();
  3910   001CC0  ECF3  F00E         	call	_i2c_stop	;wreg free
  3911                           
  3912                           ;ds1307.c: 67:  return data;
  3913   001CC4  5003               	movf	read_ds1307@data^0,w,c
  3914   001CC6  0012               	return		;funcret
  3915   001CC8                     __end_of_read_ds1307:
  3916                           	callstack 0
  3917                           
  3918 ;; *************** function _i2c_write *****************
  3919 ;; Defined at:
  3920 ;;		line 55 in file "i2c.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  data            1    wreg     unsigned char 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  data            1    0[COMRAM] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3934 ;;      Params:         0       0       0       0       0       0       0
  3935 ;;      Locals:         1       0       0       0       0       0       0
  3936 ;;      Temps:          0       0       0       0       0       0       0
  3937 ;;      Totals:         1       0       0       0       0       0       0
  3938 ;;Total ram usage:        1 bytes
  3939 ;; Hardware stack levels used: 1
  3940 ;; Hardware stack levels required when called: 2
  3941 ;; This function calls:
  3942 ;;		_i2c_idle
  3943 ;; This function is called by:
  3944 ;;		_write_ds1307
  3945 ;;		_read_ds1307
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text22
  3950   001DBC                     __ptext22:
  3951                           	callstack 0
  3952   001DBC                     _i2c_write:
  3953                           	callstack 25
  3954                           
  3955                           ;incstack = 0
  3956                           ;i2c_write@data stored from wreg
  3957   001DBC  6E01               	movwf	i2c_write@data^0,c
  3958   001DBE                     
  3959                           ;i2c.c: 55: void i2c_write(unsigned char data);i2c.c: 56: {;i2c.c: 57:  SSPBUF = data;
  3960   001DBE  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  3961   001DC2                     
  3962                           ;i2c.c: 58:  i2c_idle();
  3963   001DC2  ECC5  F00E         	call	_i2c_idle	;wreg free
  3964   001DC6  0012               	return		;funcret
  3965   001DC8                     __end_of_i2c_write:
  3966                           	callstack 0
  3967                           
  3968 ;; *************** function _i2c_stop *****************
  3969 ;; Defined at:
  3970 ;;		line 43 in file "i2c.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3984 ;;      Params:         0       0       0       0       0       0       0
  3985 ;;      Locals:         0       0       0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0
  3987 ;;      Totals:         0       0       0       0       0       0       0
  3988 ;;Total ram usage:        0 bytes
  3989 ;; Hardware stack levels used: 1
  3990 ;; Hardware stack levels required when called: 2
  3991 ;; This function calls:
  3992 ;;		_i2c_idle
  3993 ;; This function is called by:
  3994 ;;		_write_ds1307
  3995 ;;		_read_ds1307
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text23
  4000   001DE6                     __ptext23:
  4001                           	callstack 0
  4002   001DE6                     _i2c_stop:
  4003                           	callstack 25
  4004   001DE6                     
  4005                           ;i2c.c: 45:  PEN = 1;
  4006   001DE6  84C5               	bsf	4037,2,c	;volatile
  4007   001DE8                     
  4008                           ;i2c.c: 46:  i2c_idle();
  4009   001DE8  ECC5  F00E         	call	_i2c_idle	;wreg free
  4010   001DEC  0012               	return		;funcret
  4011   001DEE                     __end_of_i2c_stop:
  4012                           	callstack 0
  4013                           
  4014 ;; *************** function _i2c_start *****************
  4015 ;; Defined at:
  4016 ;;		line 37 in file "i2c.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;		None
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4030 ;;      Params:         0       0       0       0       0       0       0
  4031 ;;      Locals:         0       0       0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0
  4033 ;;      Totals:         0       0       0       0       0       0       0
  4034 ;;Total ram usage:        0 bytes
  4035 ;; Hardware stack levels used: 1
  4036 ;; Hardware stack levels required when called: 2
  4037 ;; This function calls:
  4038 ;;		_i2c_idle
  4039 ;; This function is called by:
  4040 ;;		_write_ds1307
  4041 ;;		_read_ds1307
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text24
  4046   001DEE                     __ptext24:
  4047                           	callstack 0
  4048   001DEE                     _i2c_start:
  4049                           	callstack 25
  4050   001DEE                     
  4051                           ;i2c.c: 39:  SEN = 1;
  4052   001DEE  80C5               	bsf	4037,0,c	;volatile
  4053   001DF0                     
  4054                           ;i2c.c: 40:  i2c_idle();
  4055   001DF0  ECC5  F00E         	call	_i2c_idle	;wreg free
  4056   001DF4  0012               	return		;funcret
  4057   001DF6                     __end_of_i2c_start:
  4058                           	callstack 0
  4059                           
  4060 ;; *************** function _i2c_rep_start *****************
  4061 ;; Defined at:
  4062 ;;		line 49 in file "i2c.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4076 ;;      Params:         0       0       0       0       0       0       0
  4077 ;;      Locals:         0       0       0       0       0       0       0
  4078 ;;      Temps:          0       0       0       0       0       0       0
  4079 ;;      Totals:         0       0       0       0       0       0       0
  4080 ;;Total ram usage:        0 bytes
  4081 ;; Hardware stack levels used: 1
  4082 ;; Hardware stack levels required when called: 2
  4083 ;; This function calls:
  4084 ;;		_i2c_idle
  4085 ;; This function is called by:
  4086 ;;		_read_ds1307
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text25
  4091   001DF6                     __ptext25:
  4092                           	callstack 0
  4093   001DF6                     _i2c_rep_start:
  4094                           	callstack 25
  4095   001DF6                     
  4096                           ;i2c.c: 51: 
  4097   001DF6  82C5               	bsf	4037,1,c	;volatile
  4098   001DF8                     
  4099                           ;i2c.c: 52:  i2c_idle();
  4100   001DF8  ECC5  F00E         	call	_i2c_idle	;wreg free
  4101   001DFC  0012               	return		;funcret
  4102   001DFE                     __end_of_i2c_rep_start:
  4103                           	callstack 0
  4104                           
  4105 ;; *************** function _i2c_read *****************
  4106 ;; Defined at:
  4107 ;;		line 73 in file "i2c.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;		None
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;		None
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  1    wreg      unsigned char 
  4114 ;; Registers used:
  4115 ;;		wreg, status,2, cstack
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4121 ;;      Params:         0       0       0       0       0       0       0
  4122 ;;      Locals:         0       0       0       0       0       0       0
  4123 ;;      Temps:          0       0       0       0       0       0       0
  4124 ;;      Totals:         0       0       0       0       0       0       0
  4125 ;;Total ram usage:        0 bytes
  4126 ;; Hardware stack levels used: 1
  4127 ;; Hardware stack levels required when called: 3
  4128 ;; This function calls:
  4129 ;;		_i2c_no_ack
  4130 ;;		_i2c_rx_mode
  4131 ;; This function is called by:
  4132 ;;		_read_ds1307
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text26
  4137   001DC8                     __ptext26:
  4138                           	callstack 0
  4139   001DC8                     _i2c_read:
  4140                           	callstack 24
  4141   001DC8                     
  4142                           ;i2c.c: 75:  i2c_rx_mode();
  4143   001DC8  ECFF  F00E         	call	_i2c_rx_mode	;wreg free
  4144                           
  4145                           ;i2c.c: 76:  i2c_no_ack();
  4146   001DCC  EC03  F00F         	call	_i2c_no_ack	;wreg free
  4147   001DD0                     
  4148                           ;i2c.c: 78:  return SSPBUF;
  4149   001DD0  50C9               	movf	201,w,c	;volatile
  4150   001DD2  0012               	return		;funcret
  4151   001DD4                     __end_of_i2c_read:
  4152                           	callstack 0
  4153                           
  4154 ;; *************** function _i2c_rx_mode *****************
  4155 ;; Defined at:
  4156 ;;		line 61 in file "i2c.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4170 ;;      Params:         0       0       0       0       0       0       0
  4171 ;;      Locals:         0       0       0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0
  4173 ;;      Totals:         0       0       0       0       0       0       0
  4174 ;;Total ram usage:        0 bytes
  4175 ;; Hardware stack levels used: 1
  4176 ;; Hardware stack levels required when called: 2
  4177 ;; This function calls:
  4178 ;;		_i2c_idle
  4179 ;; This function is called by:
  4180 ;;		_i2c_read
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text27
  4185   001DFE                     __ptext27:
  4186                           	callstack 0
  4187   001DFE                     _i2c_rx_mode:
  4188                           	callstack 24
  4189   001DFE                     
  4190                           ;i2c.c: 63:  RCEN = 1;
  4191   001DFE  86C5               	bsf	4037,3,c	;volatile
  4192   001E00                     
  4193                           ;i2c.c: 64:  i2c_idle();
  4194   001E00  ECC5  F00E         	call	_i2c_idle	;wreg free
  4195   001E04  0012               	return		;funcret
  4196   001E06                     __end_of_i2c_rx_mode:
  4197                           	callstack 0
  4198                           
  4199 ;; *************** function _i2c_idle *****************
  4200 ;; Defined at:
  4201 ;;		line 23 in file "i2c.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;		None
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;		None
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  1    wreg      void 
  4208 ;; Registers used:
  4209 ;;		None
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4215 ;;      Params:         0       0       0       0       0       0       0
  4216 ;;      Locals:         0       0       0       0       0       0       0
  4217 ;;      Temps:          0       0       0       0       0       0       0
  4218 ;;      Totals:         0       0       0       0       0       0       0
  4219 ;;Total ram usage:        0 bytes
  4220 ;; Hardware stack levels used: 1
  4221 ;; Hardware stack levels required when called: 1
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_i2c_start
  4226 ;;		_i2c_stop
  4227 ;;		_i2c_rep_start
  4228 ;;		_i2c_write
  4229 ;;		_i2c_rx_mode
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233                           	psect	text28
  4234   001D8A                     __ptext28:
  4235                           	callstack 0
  4236   001D8A                     _i2c_idle:
  4237                           	callstack 25
  4238   001D8A                     l456:
  4239   001D8A  A69E               	btfss	3998,3,c	;volatile
  4240   001D8C  EFCA  F00E         	goto	u1141
  4241   001D90  EFCC  F00E         	goto	u1140
  4242   001D94                     u1141:
  4243   001D94  EFC5  F00E         	goto	l456
  4244   001D98                     u1140:
  4245   001D98                     
  4246                           ;i2c.c: 26:  SSPIF = 0;
  4247   001D98  969E               	bcf	3998,3,c	;volatile
  4248   001D9A  0012               	return		;funcret
  4249   001D9C                     __end_of_i2c_idle:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function _i2c_no_ack *****************
  4253 ;; Defined at:
  4254 ;;		line 67 in file "i2c.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		None
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4268 ;;      Params:         0       0       0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0
  4271 ;;      Totals:         0       0       0       0       0       0       0
  4272 ;;Total ram usage:        0 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 1
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_i2c_read
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text29
  4283   001E06                     __ptext29:
  4284                           	callstack 0
  4285   001E06                     _i2c_no_ack:
  4286                           	callstack 25
  4287   001E06                     
  4288                           ;i2c.c: 69:  ACKDT = 1;
  4289   001E06  8AC5               	bsf	4037,5,c	;volatile
  4290                           
  4291                           ;i2c.c: 70:  ACKEN = 1;
  4292   001E08  88C5               	bsf	4037,4,c	;volatile
  4293   001E0A  0012               	return		;funcret
  4294   001E0C                     __end_of_i2c_no_ack:
  4295                           	callstack 0
  4296                           
  4297 ;; *************** function _display_times *****************
  4298 ;; Defined at:
  4299 ;;		line 20 in file "car_black_box.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4313 ;;      Params:         0       0       0       0       0       0       0
  4314 ;;      Locals:         0       0       0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0
  4316 ;;      Totals:         0       0       0       0       0       0       0
  4317 ;;Total ram usage:        0 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 3
  4320 ;; This function calls:
  4321 ;;		_clcd_print
  4322 ;; This function is called by:
  4323 ;;		_display_time
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text30
  4328   001D9C                     __ptext30:
  4329                           	callstack 0
  4330   001D9C                     _display_times:
  4331                           	callstack 25
  4332   001D9C                     
  4333                           ;car_black_box.c: 22:  clcd_print(time, (0xC0 + (2)));
  4334   001D9C  0E91               	movlw	low _time
  4335   001D9E  6E03               	movwf	clcd_print@data^0,c
  4336   001DA0  0E00               	movlw	high _time
  4337   001DA2  6E04               	movwf	(clcd_print@data+1)^0,c
  4338   001DA4  0EC2               	movlw	194
  4339   001DA6  6E05               	movwf	clcd_print@addr^0,c
  4340   001DA8  EC25  F00D         	call	_clcd_print	;wreg free
  4341   001DAC  0012               	return		;funcret
  4342   001DAE                     __end_of_display_times:
  4343                           	callstack 0
  4344                           
  4345 ;; *************** function _clcd_print *****************
  4346 ;; Defined at:
  4347 ;;		line 60 in file "clcd.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  data            2    2[COMRAM] PTR const unsigned char 
  4350 ;;		 -> STR_22(14), STR_21(14), STR_20(14), STR_19(14), 
  4351 ;;		 -> STR_18(14), STR_17(5), STR_16(9), STR_15(15), 
  4352 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(17), 
  4353 ;;		 -> STR_10(17), time(9), STR_9(16), 
  4354 ;;  addr            1    4[COMRAM] unsigned char 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4366 ;;      Params:         3       0       0       0       0       0       0
  4367 ;;      Locals:         0       0       0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0
  4369 ;;      Totals:         3       0       0       0       0       0       0
  4370 ;;Total ram usage:        3 bytes
  4371 ;; Hardware stack levels used: 1
  4372 ;; Hardware stack levels required when called: 2
  4373 ;; This function calls:
  4374 ;;		_clcd_write
  4375 ;; This function is called by:
  4376 ;;		_display_dashboard
  4377 ;;		_display_times
  4378 ;;		_logscreen
  4379 ;;		_timeleft
  4380 ;;		_scrolllog
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text31
  4385   001A4A                     __ptext31:
  4386                           	callstack 0
  4387   001A4A                     _clcd_print:
  4388                           	callstack 27
  4389   001A4A                     
  4390                           ;clcd.c: 60: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 61: 
      +                          {;clcd.c: 62:  clcd_write(addr, 0);
  4391   001A4A  0E00               	movlw	0
  4392   001A4C  6E01               	movwf	clcd_write@control_bit^0,c
  4393   001A4E  5005               	movf	clcd_print@addr^0,w,c
  4394   001A50  EC36  F00E         	call	_clcd_write
  4395                           
  4396                           ;clcd.c: 63:  while (*data != '\0')
  4397   001A54  EF42  F00D         	goto	l2116
  4398   001A58                     l2112:
  4399                           
  4400                           ;clcd.c: 64:  {;clcd.c: 65:   clcd_write(*data++, 1);
  4401   001A58  0E01               	movlw	1
  4402   001A5A  6E01               	movwf	clcd_write@control_bit^0,c
  4403   001A5C  C003  FFF6         	movff	clcd_print@data,tblptrl
  4404   001A60  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  4405   001A64  6AF8               	clrf	tblptru,c
  4406   001A66  0E05               	movlw	(high __ramtop+-1)
  4407   001A68  64F7               	cpfsgt	tblptrh,c
  4408   001A6A  D003               	bra	u1177
  4409   001A6C  0008               	tblrd		*
  4410   001A6E  50F5               	movf	tablat,w,c
  4411   001A70  D005               	bra	u1170
  4412   001A72                     u1177:
  4413   001A72  CFF6 FFE9          	movff	tblptrl,fsr0l
  4414   001A76  CFF7 FFEA          	movff	tblptrh,fsr0h
  4415   001A7A  50EF               	movf	indf0,w,c
  4416   001A7C                     u1170:
  4417   001A7C  EC36  F00E         	call	_clcd_write
  4418   001A80  4A03               	infsnz	clcd_print@data^0,f,c
  4419   001A82  2A04               	incf	(clcd_print@data+1)^0,f,c
  4420   001A84                     l2116:
  4421                           
  4422                           ;clcd.c: 63:  while (*data != '\0')
  4423   001A84  C003  FFF6         	movff	clcd_print@data,tblptrl
  4424   001A88  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  4425   001A8C  6AF8               	clrf	tblptru,c
  4426   001A8E  0E05               	movlw	(high __ramtop+-1)
  4427   001A90  64F7               	cpfsgt	tblptrh,c
  4428   001A92  D003               	bra	u1187
  4429   001A94  0008               	tblrd		*
  4430   001A96  50F5               	movf	tablat,w,c
  4431   001A98  D005               	bra	u1180
  4432   001A9A                     u1187:
  4433   001A9A  CFF6 FFE9          	movff	tblptrl,fsr0l
  4434   001A9E  CFF7 FFEA          	movff	tblptrh,fsr0h
  4435   001AA2  50EF               	movf	indf0,w,c
  4436   001AA4                     u1180:
  4437   001AA4  0900               	iorlw	0
  4438   001AA6  A4D8               	btfss	status,2,c
  4439   001AA8  EF58  F00D         	goto	u1191
  4440   001AAC  EF5A  F00D         	goto	u1190
  4441   001AB0                     u1191:
  4442   001AB0  EF2C  F00D         	goto	l2112
  4443   001AB4                     u1190:
  4444   001AB4  0012               	return		;funcret
  4445   001AB6                     __end_of_clcd_print:
  4446                           	callstack 0
  4447                           
  4448 ;; *************** function _display_speed *****************
  4449 ;; Defined at:
  4450 ;;		line 74 in file "car_black_box.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;  usadc           2   16[COMRAM] unsigned short 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;		None
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      void 
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4464 ;;      Params:         2       0       0       0       0       0       0
  4465 ;;      Locals:         0       0       0       0       0       0       0
  4466 ;;      Temps:          0       0       0       0       0       0       0
  4467 ;;      Totals:         2       0       0       0       0       0       0
  4468 ;;Total ram usage:        2 bytes
  4469 ;; Hardware stack levels used: 1
  4470 ;; Hardware stack levels required when called: 3
  4471 ;; This function calls:
  4472 ;;		___awmod
  4473 ;;		___lwdiv
  4474 ;;		_clcd_putch
  4475 ;; This function is called by:
  4476 ;;		_display_dashboard
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text32
  4481   001B1C                     __ptext32:
  4482                           	callstack 0
  4483   001B1C                     _display_speed:
  4484                           	callstack 26
  4485   001B1C                     
  4486                           ;car_black_box.c: 75:         clcd_putch((unsigned char)(usadc/10)%10+48, (0xC0 + (14)))
      +                          ;
  4487   001B1C  0ECE               	movlw	206
  4488   001B1E  6E0F               	movwf	clcd_putch@addr^0,c
  4489   001B20  0E00               	movlw	0
  4490   001B22  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  4491   001B24  0E0A               	movlw	10
  4492   001B26  6E03               	movwf	___lwdiv@divisor^0,c
  4493   001B28  C011  F001         	movff	display_speed@usadc,___lwdiv@dividend
  4494   001B2C  C012  F002         	movff	display_speed@usadc+1,___lwdiv@dividend+1
  4495   001B30  ECB5  F00C         	call	___lwdiv	;wreg free
  4496   001B34  5001               	movf	?___lwdiv^0,w,c
  4497   001B36  6E09               	movwf	___awmod@dividend^0,c
  4498   001B38  6A0A               	clrf	(___awmod@dividend+1)^0,c
  4499   001B3A  0E00               	movlw	0
  4500   001B3C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4501   001B3E  0E0A               	movlw	10
  4502   001B40  6E0B               	movwf	___awmod@divisor^0,c
  4503   001B42  EC98  F00B         	call	___awmod	;wreg free
  4504   001B46  5009               	movf	?___awmod^0,w,c
  4505   001B48  0F30               	addlw	48
  4506   001B4A  ECAE  F00E         	call	_clcd_putch
  4507                           
  4508                           ;car_black_box.c: 76:         clcd_putch((unsigned char)usadc%10+48, (0xC0 + (15)));
  4509   001B4E  0ECF               	movlw	207
  4510   001B50  6E0F               	movwf	clcd_putch@addr^0,c
  4511   001B52  C011  F009         	movff	display_speed@usadc,___awmod@dividend
  4512   001B56  6A0A               	clrf	(___awmod@dividend+1)^0,c
  4513   001B58  0E00               	movlw	0
  4514   001B5A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4515   001B5C  0E0A               	movlw	10
  4516   001B5E  6E0B               	movwf	___awmod@divisor^0,c
  4517   001B60  EC98  F00B         	call	___awmod	;wreg free
  4518   001B64  5009               	movf	?___awmod^0,w,c
  4519   001B66  0F30               	addlw	48
  4520   001B68  ECAE  F00E         	call	_clcd_putch
  4521   001B6C  0012               	return		;funcret
  4522   001B6E                     __end_of_display_speed:
  4523                           	callstack 0
  4524                           
  4525 ;; *************** function _clcd_putch *****************
  4526 ;; Defined at:
  4527 ;;		line 69 in file "clcd.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  data            1    wreg     const unsigned char 
  4530 ;;  addr            1   14[COMRAM] unsigned char 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  data            1   15[COMRAM] const unsigned char 
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, cstack
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4542 ;;      Params:         1       0       0       0       0       0       0
  4543 ;;      Locals:         1       0       0       0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0
  4545 ;;      Totals:         2       0       0       0       0       0       0
  4546 ;;Total ram usage:        2 bytes
  4547 ;; Hardware stack levels used: 1
  4548 ;; Hardware stack levels required when called: 2
  4549 ;; This function calls:
  4550 ;;		_clcd_write
  4551 ;; This function is called by:
  4552 ;;		_display_dashboard
  4553 ;;		_gear_monitor
  4554 ;;		_display_speed
  4555 ;;		_logscreen
  4556 ;;		_timeleft
  4557 ;;		_scrolllog
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text33
  4562   001D5C                     __ptext33:
  4563                           	callstack 0
  4564   001D5C                     _clcd_putch:
  4565                           	callstack 27
  4566                           
  4567                           ;incstack = 0
  4568                           ;clcd_putch@data stored from wreg
  4569   001D5C  6E10               	movwf	clcd_putch@data^0,c
  4570   001D5E                     
  4571                           ;clcd.c: 69: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 70: {
      +                          ;clcd.c: 71:  clcd_write(addr, 0);
  4572   001D5E  0E00               	movlw	0
  4573   001D60  6E01               	movwf	clcd_write@control_bit^0,c
  4574   001D62  500F               	movf	clcd_putch@addr^0,w,c
  4575   001D64  EC36  F00E         	call	_clcd_write
  4576                           
  4577                           ;clcd.c: 72:  clcd_write(data, 1);
  4578   001D68  0E01               	movlw	1
  4579   001D6A  6E01               	movwf	clcd_write@control_bit^0,c
  4580   001D6C  5010               	movf	clcd_putch@data^0,w,c
  4581   001D6E  EC36  F00E         	call	_clcd_write
  4582   001D72  0012               	return		;funcret
  4583   001D74                     __end_of_clcd_putch:
  4584                           	callstack 0
  4585                           
  4586 ;; *************** function _clcd_write *****************
  4587 ;; Defined at:
  4588 ;;		line 3 in file "clcd.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  byte            1    wreg     unsigned char 
  4591 ;;  control_bit     1    0[COMRAM] unsigned char 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  byte            1    1[COMRAM] unsigned char 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4603 ;;      Params:         1       0       0       0       0       0       0
  4604 ;;      Locals:         1       0       0       0       0       0       0
  4605 ;;      Temps:          0       0       0       0       0       0       0
  4606 ;;      Totals:         2       0       0       0       0       0       0
  4607 ;;Total ram usage:        2 bytes
  4608 ;; Hardware stack levels used: 1
  4609 ;; Hardware stack levels required when called: 1
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_main
  4614 ;;		_init_clcd
  4615 ;;		_clcd_print
  4616 ;;		_clcd_putch
  4617 ;;		_logscreen
  4618 ;;		_timeleft
  4619 ;;		_scrolllog
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text34
  4624   001C6C                     __ptext34:
  4625                           	callstack 0
  4626   001C6C                     _clcd_write:
  4627                           	callstack 28
  4628                           
  4629                           ;incstack = 0
  4630                           ;clcd_write@byte stored from wreg
  4631   001C6C  6E02               	movwf	clcd_write@byte^0,c
  4632   001C6E                     
  4633                           ;clcd.c: 3: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 4: {;
      +                          clcd.c: 5:  PORTCbits.RC1 = control_bit;
  4634   001C6E  B001               	btfsc	clcd_write@control_bit^0,0,c
  4635   001C70  D002               	bra	u1155
  4636   001C72  9282               	bcf	130,1,c	;volatile
  4637   001C74  D001               	bra	u1156
  4638   001C76                     u1155:
  4639   001C76  8282               	bsf	130,1,c	;volatile
  4640   001C78                     u1156:
  4641   001C78                     
  4642                           ;clcd.c: 6:  PORTD = byte;
  4643   001C78  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  4644   001C7C                     
  4645                           ;clcd.c: 9:  PORTCbits.RC2 = 1;
  4646   001C7C  8482               	bsf	130,2,c	;volatile
  4647   001C7E                     
  4648                           ;clcd.c: 10:  PORTCbits.RC2 = 0;
  4649   001C7E  9482               	bcf	130,2,c	;volatile
  4650   001C80                     
  4651                           ;clcd.c: 12:  TRISD7 = 1;
  4652   001C80  8E95               	bsf	3989,7,c	;volatile
  4653   001C82                     
  4654                           ;clcd.c: 13:  PORTCbits.RC0 = 1;
  4655   001C82  8082               	bsf	130,0,c	;volatile
  4656   001C84                     
  4657                           ;clcd.c: 14:  PORTCbits.RC1 = 0;
  4658   001C84  9282               	bcf	130,1,c	;volatile
  4659   001C86                     l2082:
  4660                           
  4661                           ;clcd.c: 17:  {;clcd.c: 18:   PORTCbits.RC2 = 1;
  4662   001C86  8482               	bsf	130,2,c	;volatile
  4663   001C88                     
  4664                           ;clcd.c: 19:   PORTCbits.RC2 = 0;
  4665   001C88  9482               	bcf	130,2,c	;volatile
  4666   001C8A                     
  4667                           ;clcd.c: 20:  } while (PORTDbits.RD7);
  4668   001C8A  BE83               	btfsc	131,7,c	;volatile
  4669   001C8C  EF4A  F00E         	goto	u1161
  4670   001C90  EF4C  F00E         	goto	u1160
  4671   001C94                     u1161:
  4672   001C94  EF43  F00E         	goto	l2082
  4673   001C98                     u1160:
  4674   001C98                     
  4675                           ;clcd.c: 22:  PORTCbits.RC0 = 0;
  4676   001C98  9082               	bcf	130,0,c	;volatile
  4677                           
  4678                           ;clcd.c: 23:  TRISD7 = 0x00;
  4679   001C9A  9E95               	bcf	3989,7,c	;volatile
  4680   001C9C  0012               	return		;funcret
  4681   001C9E                     __end_of_clcd_write:
  4682                           	callstack 0
  4683                           
  4684 ;; *************** function ___lwdiv *****************
  4685 ;; Defined at:
  4686 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  dividend        2    0[COMRAM] unsigned int 
  4689 ;;  divisor         2    2[COMRAM] unsigned int 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  quotient        2    4[COMRAM] unsigned int 
  4692 ;;  counter         1    6[COMRAM] unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  2    0[COMRAM] unsigned int 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4702 ;;      Params:         4       0       0       0       0       0       0
  4703 ;;      Locals:         3       0       0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0
  4705 ;;      Totals:         7       0       0       0       0       0       0
  4706 ;;Total ram usage:        7 bytes
  4707 ;; Hardware stack levels used: 1
  4708 ;; Hardware stack levels required when called: 1
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_display_speed
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text35
  4717   00196A                     __ptext35:
  4718                           	callstack 0
  4719   00196A                     ___lwdiv:
  4720                           	callstack 27
  4721   00196A  0E00               	movlw	0
  4722   00196C  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  4723   00196E  0E00               	movlw	0
  4724   001970  6E05               	movwf	___lwdiv@quotient^0,c
  4725   001972  5003               	movf	___lwdiv@divisor^0,w,c
  4726   001974  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4727   001976  B4D8               	btfsc	status,2,c
  4728   001978  EFC0  F00C         	goto	u1331
  4729   00197C  EFC2  F00C         	goto	u1330
  4730   001980                     u1331:
  4731   001980  EFEA  F00C         	goto	l978
  4732   001984                     u1330:
  4733   001984  0E01               	movlw	1
  4734   001986  6E07               	movwf	___lwdiv@counter^0,c
  4735   001988  EFCA  F00C         	goto	l2252
  4736   00198C                     l2250:
  4737   00198C  90D8               	bcf	status,0,c
  4738   00198E  3603               	rlcf	___lwdiv@divisor^0,f,c
  4739   001990  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4740   001992  2A07               	incf	___lwdiv@counter^0,f,c
  4741   001994                     l2252:
  4742   001994  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4743   001996  EFCF  F00C         	goto	u1341
  4744   00199A  EFD1  F00C         	goto	u1340
  4745   00199E                     u1341:
  4746   00199E  EFC6  F00C         	goto	l2250
  4747   0019A2                     u1340:
  4748   0019A2                     l2254:
  4749   0019A2  90D8               	bcf	status,0,c
  4750   0019A4  3605               	rlcf	___lwdiv@quotient^0,f,c
  4751   0019A6  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4752   0019A8  5003               	movf	___lwdiv@divisor^0,w,c
  4753   0019AA  5C01               	subwf	___lwdiv@dividend^0,w,c
  4754   0019AC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4755   0019AE  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4756   0019B0  A0D8               	btfss	status,0,c
  4757   0019B2  EFDD  F00C         	goto	u1351
  4758   0019B6  EFDF  F00C         	goto	u1350
  4759   0019BA                     u1351:
  4760   0019BA  EFE4  F00C         	goto	l2262
  4761   0019BE                     u1350:
  4762   0019BE  5003               	movf	___lwdiv@divisor^0,w,c
  4763   0019C0  5E01               	subwf	___lwdiv@dividend^0,f,c
  4764   0019C2  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4765   0019C4  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4766   0019C6  8005               	bsf	___lwdiv@quotient^0,0,c
  4767   0019C8                     l2262:
  4768   0019C8  90D8               	bcf	status,0,c
  4769   0019CA  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4770   0019CC  3203               	rrcf	___lwdiv@divisor^0,f,c
  4771   0019CE  2E07               	decfsz	___lwdiv@counter^0,f,c
  4772   0019D0  EFD1  F00C         	goto	l2254
  4773   0019D4                     l978:
  4774   0019D4  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4775   0019D8  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4776   0019DC  0012               	return		;funcret
  4777   0019DE                     __end_of___lwdiv:
  4778                           	callstack 0
  4779                           
  4780 ;; *************** function ___awmod *****************
  4781 ;; Defined at:
  4782 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  dividend        2    8[COMRAM] int 
  4785 ;;  divisor         2   10[COMRAM] int 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  sign            1   13[COMRAM] unsigned char 
  4788 ;;  counter         1   12[COMRAM] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  2    8[COMRAM] int 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4798 ;;      Params:         4       0       0       0       0       0       0
  4799 ;;      Locals:         2       0       0       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0
  4801 ;;      Totals:         6       0       0       0       0       0       0
  4802 ;;Total ram usage:        6 bytes
  4803 ;; Hardware stack levels used: 1
  4804 ;; Hardware stack levels required when called: 1
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_display_speed
  4809 ;;		_timeleft
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text36
  4814   001730                     __ptext36:
  4815                           	callstack 0
  4816   001730                     ___awmod:
  4817                           	callstack 27
  4818   001730  0E00               	movlw	0
  4819   001732  6E0E               	movwf	___awmod@sign^0,c
  4820   001734  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4821   001736  EFA1  F00B         	goto	u1270
  4822   00173A  EF9F  F00B         	goto	u1271
  4823   00173E                     u1271:
  4824   00173E  EFA7  F00B         	goto	l2216
  4825   001742                     u1270:
  4826   001742  6C09               	negf	___awmod@dividend^0,c
  4827   001744  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4828   001746  B0D8               	btfsc	status,0,c
  4829   001748  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4830   00174A  0E01               	movlw	1
  4831   00174C  6E0E               	movwf	___awmod@sign^0,c
  4832   00174E                     l2216:
  4833   00174E  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4834   001750  EFAE  F00B         	goto	u1280
  4835   001754  EFAC  F00B         	goto	u1281
  4836   001758                     u1281:
  4837   001758  EFB2  F00B         	goto	l2220
  4838   00175C                     u1280:
  4839   00175C  6C0B               	negf	___awmod@divisor^0,c
  4840   00175E  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4841   001760  B0D8               	btfsc	status,0,c
  4842   001762  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4843   001764                     l2220:
  4844   001764  500B               	movf	___awmod@divisor^0,w,c
  4845   001766  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4846   001768  B4D8               	btfsc	status,2,c
  4847   00176A  EFB9  F00B         	goto	u1291
  4848   00176E  EFBB  F00B         	goto	u1290
  4849   001772                     u1291:
  4850   001772  EFDF  F00B         	goto	l2236
  4851   001776                     u1290:
  4852   001776  0E01               	movlw	1
  4853   001778  6E0D               	movwf	___awmod@counter^0,c
  4854   00177A  EFC3  F00B         	goto	l2226
  4855   00177E                     l2224:
  4856   00177E  90D8               	bcf	status,0,c
  4857   001780  360B               	rlcf	___awmod@divisor^0,f,c
  4858   001782  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4859   001784  2A0D               	incf	___awmod@counter^0,f,c
  4860   001786                     l2226:
  4861   001786  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4862   001788  EFC8  F00B         	goto	u1301
  4863   00178C  EFCA  F00B         	goto	u1300
  4864   001790                     u1301:
  4865   001790  EFBF  F00B         	goto	l2224
  4866   001794                     u1300:
  4867   001794                     l2228:
  4868   001794  500B               	movf	___awmod@divisor^0,w,c
  4869   001796  5C09               	subwf	___awmod@dividend^0,w,c
  4870   001798  500C               	movf	(___awmod@divisor+1)^0,w,c
  4871   00179A  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4872   00179C  A0D8               	btfss	status,0,c
  4873   00179E  EFD3  F00B         	goto	u1311
  4874   0017A2  EFD5  F00B         	goto	u1310
  4875   0017A6                     u1311:
  4876   0017A6  EFD9  F00B         	goto	l2232
  4877   0017AA                     u1310:
  4878   0017AA  500B               	movf	___awmod@divisor^0,w,c
  4879   0017AC  5E09               	subwf	___awmod@dividend^0,f,c
  4880   0017AE  500C               	movf	(___awmod@divisor+1)^0,w,c
  4881   0017B0  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4882   0017B2                     l2232:
  4883   0017B2  90D8               	bcf	status,0,c
  4884   0017B4  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4885   0017B6  320B               	rrcf	___awmod@divisor^0,f,c
  4886   0017B8  2E0D               	decfsz	___awmod@counter^0,f,c
  4887   0017BA  EFCA  F00B         	goto	l2228
  4888   0017BE                     l2236:
  4889   0017BE  500E               	movf	___awmod@sign^0,w,c
  4890   0017C0  B4D8               	btfsc	status,2,c
  4891   0017C2  EFE5  F00B         	goto	u1321
  4892   0017C6  EFE7  F00B         	goto	u1320
  4893   0017CA                     u1321:
  4894   0017CA  EFEB  F00B         	goto	l2240
  4895   0017CE                     u1320:
  4896   0017CE  6C09               	negf	___awmod@dividend^0,c
  4897   0017D0  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4898   0017D2  B0D8               	btfsc	status,0,c
  4899   0017D4  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4900   0017D6                     l2240:
  4901   0017D6  C009  F009         	movff	___awmod@dividend,?___awmod
  4902   0017DA  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4903   0017DE  0012               	return		;funcret
  4904   0017E0                     __end_of___awmod:
  4905                           	callstack 0
  4906                           
  4907 ;; *************** function ___xxtofl *****************
  4908 ;; Defined at:
  4909 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  sign            1    wreg     unsigned char 
  4912 ;;  val             4    5[COMRAM] long 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;  sign            1   13[COMRAM] unsigned char 
  4915 ;;  arg             4   15[COMRAM] unsigned long 
  4916 ;;  exp             1   14[COMRAM] unsigned char 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  4    5[COMRAM] unsigned char 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4926 ;;      Params:         4       0       0       0       0       0       0
  4927 ;;      Locals:         6       0       0       0       0       0       0
  4928 ;;      Temps:          4       0       0       0       0       0       0
  4929 ;;      Totals:        14       0       0       0       0       0       0
  4930 ;;Total ram usage:       14 bytes
  4931 ;; Hardware stack levels used: 1
  4932 ;; Hardware stack levels required when called: 1
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_main
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text37
  4941   001036                     __ptext37:
  4942                           	callstack 0
  4943   001036                     ___xxtofl:
  4944                           	callstack 29
  4945                           
  4946                           ;incstack = 0
  4947                           ;___xxtofl@sign stored from wreg
  4948   001036  6E0E               	movwf	___xxtofl@sign^0,c
  4949   001038  500E               	movf	___xxtofl@sign^0,w,c
  4950   00103A  B4D8               	btfsc	status,2,c
  4951   00103C  EF22  F008         	goto	u2141
  4952   001040  EF24  F008         	goto	u2140
  4953   001044                     u2141:
  4954   001044  EF46  F008         	goto	l1142
  4955   001048                     u2140:
  4956   001048  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  4957   00104A  EF2B  F008         	goto	u2150
  4958   00104E  EF29  F008         	goto	u2151
  4959   001052                     u2151:
  4960   001052  EF46  F008         	goto	l1142
  4961   001056                     u2150:
  4962   001056  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  4963   00105A  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  4964   00105E  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  4965   001062  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  4966   001066  1E0A               	comf	??___xxtofl^0,f,c
  4967   001068  1E0B               	comf	(??___xxtofl+1)^0,f,c
  4968   00106A  1E0C               	comf	(??___xxtofl+2)^0,f,c
  4969   00106C  1E0D               	comf	(??___xxtofl+3)^0,f,c
  4970   00106E  2A0A               	incf	??___xxtofl^0,f,c
  4971   001070  0E00               	movlw	0
  4972   001072  220B               	addwfc	(??___xxtofl+1)^0,f,c
  4973   001074  220C               	addwfc	(??___xxtofl+2)^0,f,c
  4974   001076  220D               	addwfc	(??___xxtofl+3)^0,f,c
  4975   001078  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  4976   00107C  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  4977   001080  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  4978   001084  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  4979   001088  EF4E  F008         	goto	l2872
  4980   00108C                     l1142:
  4981   00108C  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  4982   001090  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4983   001094  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4984   001098  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4985   00109C                     l2872:
  4986   00109C  5006               	movf	___xxtofl@val^0,w,c
  4987   00109E  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  4988   0010A0  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  4989   0010A2  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  4990   0010A4  A4D8               	btfss	status,2,c
  4991   0010A6  EF57  F008         	goto	u2161
  4992   0010AA  EF59  F008         	goto	u2160
  4993   0010AE                     u2161:
  4994   0010AE  EF63  F008         	goto	l2878
  4995   0010B2                     u2160:
  4996   0010B2  0E00               	movlw	0
  4997   0010B4  6E06               	movwf	?___xxtofl^0,c
  4998   0010B6  0E00               	movlw	0
  4999   0010B8  6E07               	movwf	(?___xxtofl+1)^0,c
  5000   0010BA  0E00               	movlw	0
  5001   0010BC  6E08               	movwf	(?___xxtofl+2)^0,c
  5002   0010BE  0E00               	movlw	0
  5003   0010C0  6E09               	movwf	(?___xxtofl+3)^0,c
  5004   0010C2  EFF4  F008         	goto	l1145
  5005   0010C6                     l2878:
  5006   0010C6  0E96               	movlw	150
  5007   0010C8  6E0F               	movwf	___xxtofl@exp^0,c
  5008   0010CA  EF6D  F008         	goto	l2882
  5009   0010CE                     l2880:
  5010   0010CE  2A0F               	incf	___xxtofl@exp^0,f,c
  5011   0010D0  90D8               	bcf	status,0,c
  5012   0010D2  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5013   0010D4  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5014   0010D6  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5015   0010D8  3210               	rrcf	___xxtofl@arg^0,f,c
  5016   0010DA                     l2882:
  5017   0010DA  0E00               	movlw	0
  5018   0010DC  1410               	andwf	___xxtofl@arg^0,w,c
  5019   0010DE  6E0A               	movwf	??___xxtofl^0,c
  5020   0010E0  0E00               	movlw	0
  5021   0010E2  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5022   0010E4  6E0B               	movwf	(??___xxtofl+1)^0,c
  5023   0010E6  0E00               	movlw	0
  5024   0010E8  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5025   0010EA  6E0C               	movwf	(??___xxtofl+2)^0,c
  5026   0010EC  0EFE               	movlw	254
  5027   0010EE  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5028   0010F0  6E0D               	movwf	(??___xxtofl+3)^0,c
  5029   0010F2  500A               	movf	??___xxtofl^0,w,c
  5030   0010F4  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5031   0010F6  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5032   0010F8  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5033   0010FA  A4D8               	btfss	status,2,c
  5034   0010FC  EF82  F008         	goto	u2171
  5035   001100  EF84  F008         	goto	u2170
  5036   001104                     u2171:
  5037   001104  EF67  F008         	goto	l2880
  5038   001108                     u2170:
  5039   001108  EF92  F008         	goto	l1149
  5040   00110C                     l2884:
  5041   00110C  2A0F               	incf	___xxtofl@exp^0,f,c
  5042   00110E  0E01               	movlw	1
  5043   001110  2610               	addwf	___xxtofl@arg^0,f,c
  5044   001112  0E00               	movlw	0
  5045   001114  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  5046   001116  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  5047   001118  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  5048   00111A  90D8               	bcf	status,0,c
  5049   00111C  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  5050   00111E  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  5051   001120  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  5052   001122  3210               	rrcf	___xxtofl@arg^0,f,c
  5053   001124                     l1149:
  5054   001124  0E00               	movlw	0
  5055   001126  1410               	andwf	___xxtofl@arg^0,w,c
  5056   001128  6E0A               	movwf	??___xxtofl^0,c
  5057   00112A  0E00               	movlw	0
  5058   00112C  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  5059   00112E  6E0B               	movwf	(??___xxtofl+1)^0,c
  5060   001130  0E00               	movlw	0
  5061   001132  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  5062   001134  6E0C               	movwf	(??___xxtofl+2)^0,c
  5063   001136  0EFF               	movlw	255
  5064   001138  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  5065   00113A  6E0D               	movwf	(??___xxtofl+3)^0,c
  5066   00113C  500A               	movf	??___xxtofl^0,w,c
  5067   00113E  100B               	iorwf	(??___xxtofl+1)^0,w,c
  5068   001140  100C               	iorwf	(??___xxtofl+2)^0,w,c
  5069   001142  100D               	iorwf	(??___xxtofl+3)^0,w,c
  5070   001144  A4D8               	btfss	status,2,c
  5071   001146  EFA7  F008         	goto	u2181
  5072   00114A  EFA9  F008         	goto	u2180
  5073   00114E                     u2181:
  5074   00114E  EF86  F008         	goto	l2884
  5075   001152                     u2180:
  5076   001152  EFB1  F008         	goto	l2892
  5077   001156                     l2890:
  5078   001156  060F               	decf	___xxtofl@exp^0,f,c
  5079   001158  90D8               	bcf	status,0,c
  5080   00115A  3610               	rlcf	___xxtofl@arg^0,f,c
  5081   00115C  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  5082   00115E  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  5083   001160  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  5084   001162                     l2892:
  5085   001162  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  5086   001164  EFB6  F008         	goto	u2191
  5087   001168  EFB8  F008         	goto	u2190
  5088   00116C                     u2191:
  5089   00116C  EFC0  F008         	goto	l1156
  5090   001170                     u2190:
  5091   001170  0E02               	movlw	2
  5092   001172  600F               	cpfslt	___xxtofl@exp^0,c
  5093   001174  EFBE  F008         	goto	u2201
  5094   001178  EFC0  F008         	goto	u2200
  5095   00117C                     u2201:
  5096   00117C  EFAB  F008         	goto	l2890
  5097   001180                     u2200:
  5098   001180                     l1156:
  5099   001180  B00F               	btfsc	___xxtofl@exp^0,0,c
  5100   001182  EFC5  F008         	goto	u2211
  5101   001186  EFC7  F008         	goto	u2210
  5102   00118A                     u2211:
  5103   00118A  EFC8  F008         	goto	l2898
  5104   00118E                     u2210:
  5105   00118E  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  5106   001190                     l2898:
  5107   001190  90D8               	bcf	status,0,c
  5108   001192  320F               	rrcf	___xxtofl@exp^0,f,c
  5109   001194  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  5110   001198  6A0B               	clrf	(??___xxtofl+1)^0,c
  5111   00119A  6A0C               	clrf	(??___xxtofl+2)^0,c
  5112   00119C  6A0D               	clrf	(??___xxtofl+3)^0,c
  5113   00119E  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  5114   0011A2  6A0C               	clrf	(??___xxtofl+2)^0,c
  5115   0011A4  6A0B               	clrf	(??___xxtofl+1)^0,c
  5116   0011A6  6A0A               	clrf	??___xxtofl^0,c
  5117   0011A8  500A               	movf	??___xxtofl^0,w,c
  5118   0011AA  1210               	iorwf	___xxtofl@arg^0,f,c
  5119   0011AC  500B               	movf	(??___xxtofl+1)^0,w,c
  5120   0011AE  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  5121   0011B0  500C               	movf	(??___xxtofl+2)^0,w,c
  5122   0011B2  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  5123   0011B4  500D               	movf	(??___xxtofl+3)^0,w,c
  5124   0011B6  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  5125   0011B8  500E               	movf	___xxtofl@sign^0,w,c
  5126   0011BA  B4D8               	btfsc	status,2,c
  5127   0011BC  EFE2  F008         	goto	u2221
  5128   0011C0  EFE4  F008         	goto	u2220
  5129   0011C4                     u2221:
  5130   0011C4  EFEC  F008         	goto	l2908
  5131   0011C8                     u2220:
  5132   0011C8  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  5133   0011CA  EFEB  F008         	goto	u2230
  5134   0011CE  EFE9  F008         	goto	u2231
  5135   0011D2                     u2231:
  5136   0011D2  EFEC  F008         	goto	l2908
  5137   0011D6                     u2230:
  5138   0011D6  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  5139   0011D8                     l2908:
  5140   0011D8  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  5141   0011DC  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  5142   0011E0  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  5143   0011E4  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  5144   0011E8                     l1145:
  5145   0011E8  0012               	return		;funcret
  5146   0011EA                     __end_of___xxtofl:
  5147                           	callstack 0
  5148                           
  5149 ;; *************** function ___fltol *****************
  5150 ;; Defined at:
  5151 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  f1              4   44[COMRAM] unsigned char 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  exp1            1   53[COMRAM] unsigned char 
  5156 ;;  sign1           1   52[COMRAM] unsigned char 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  4   44[COMRAM] long 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5166 ;;      Params:         4       0       0       0       0       0       0
  5167 ;;      Locals:         2       0       0       0       0       0       0
  5168 ;;      Temps:          4       0       0       0       0       0       0
  5169 ;;      Totals:        10       0       0       0       0       0       0
  5170 ;;Total ram usage:       10 bytes
  5171 ;; Hardware stack levels used: 1
  5172 ;; Hardware stack levels required when called: 1
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_main
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text38
  5181   0011EA                     __ptext38:
  5182                           	callstack 0
  5183   0011EA                     ___fltol:
  5184                           	callstack 29
  5185   0011EA  342F               	rlcf	(___fltol@f1+2)^0,w,c
  5186   0011EC  3430               	rlcf	(___fltol@f1+3)^0,w,c
  5187   0011EE  6E36               	movwf	___fltol@exp1^0,c
  5188   0011F0  5036               	movf	___fltol@exp1^0,w,c
  5189   0011F2  A4D8               	btfss	status,2,c
  5190   0011F4  EFFE  F008         	goto	u2071
  5191   0011F8  EF00  F009         	goto	u2070
  5192   0011FC                     u2071:
  5193   0011FC  EF0A  F009         	goto	l2828
  5194   001200                     u2070:
  5195   001200                     l2824:
  5196   001200  0E00               	movlw	0
  5197   001202  6E2D               	movwf	?___fltol^0,c
  5198   001204  0E00               	movlw	0
  5199   001206  6E2E               	movwf	(?___fltol+1)^0,c
  5200   001208  0E00               	movlw	0
  5201   00120A  6E2F               	movwf	(?___fltol+2)^0,c
  5202   00120C  0E00               	movlw	0
  5203   00120E  6E30               	movwf	(?___fltol+3)^0,c
  5204   001210  EF77  F009         	goto	l784
  5205   001214                     l2828:
  5206   001214  C02D  F031         	movff	___fltol@f1,??___fltol
  5207   001218  C02E  F032         	movff	___fltol@f1+1,??___fltol+1
  5208   00121C  C02F  F033         	movff	___fltol@f1+2,??___fltol+2
  5209   001220  C030  F034         	movff	___fltol@f1+3,??___fltol+3
  5210   001224  0E20               	movlw	32
  5211   001226  EF1A  F009         	goto	u2080
  5212   00122A                     u2085:
  5213   00122A  90D8               	bcf	status,0,c
  5214   00122C  3234               	rrcf	(??___fltol+3)^0,f,c
  5215   00122E  3233               	rrcf	(??___fltol+2)^0,f,c
  5216   001230  3232               	rrcf	(??___fltol+1)^0,f,c
  5217   001232  3231               	rrcf	??___fltol^0,f,c
  5218   001234                     u2080:
  5219   001234  2EE8               	decfsz	wreg,f,c
  5220   001236  EF15  F009         	goto	u2085
  5221   00123A  5031               	movf	??___fltol^0,w,c
  5222   00123C  6E35               	movwf	___fltol@sign1^0,c
  5223   00123E  8E2F               	bsf	(___fltol@f1+2)^0,7,c
  5224   001240  0EFF               	movlw	255
  5225   001242  162D               	andwf	___fltol@f1^0,f,c
  5226   001244  0EFF               	movlw	255
  5227   001246  162E               	andwf	(___fltol@f1+1)^0,f,c
  5228   001248  0EFF               	movlw	255
  5229   00124A  162F               	andwf	(___fltol@f1+2)^0,f,c
  5230   00124C  0E00               	movlw	0
  5231   00124E  1630               	andwf	(___fltol@f1+3)^0,f,c
  5232   001250  0E96               	movlw	150
  5233   001252  5E36               	subwf	___fltol@exp1^0,f,c
  5234   001254  BE36               	btfsc	___fltol@exp1^0,7,c
  5235   001256  EF31  F009         	goto	u2090
  5236   00125A  EF2F  F009         	goto	u2091
  5237   00125E                     u2091:
  5238   00125E  EF47  F009         	goto	l2848
  5239   001262                     u2090:
  5240   001262  5036               	movf	___fltol@exp1^0,w,c
  5241   001264  0A80               	xorlw	128
  5242   001266  0F97               	addlw	151
  5243   001268  B0D8               	btfsc	status,0,c
  5244   00126A  EF39  F009         	goto	u2101
  5245   00126E  EF3B  F009         	goto	u2100
  5246   001272                     u2101:
  5247   001272  EF3D  F009         	goto	l2844
  5248   001276                     u2100:
  5249   001276  EF00  F009         	goto	l2824
  5250   00127A                     l2844:
  5251   00127A  90D8               	bcf	status,0,c
  5252   00127C  3230               	rrcf	(___fltol@f1+3)^0,f,c
  5253   00127E  322F               	rrcf	(___fltol@f1+2)^0,f,c
  5254   001280  322E               	rrcf	(___fltol@f1+1)^0,f,c
  5255   001282  322D               	rrcf	___fltol@f1^0,f,c
  5256   001284  3E36               	incfsz	___fltol@exp1^0,f,c
  5257   001286  EF3D  F009         	goto	l2844
  5258   00128A  EF5F  F009         	goto	l2858
  5259   00128E                     l2848:
  5260   00128E  0E1F               	movlw	31
  5261   001290  6436               	cpfsgt	___fltol@exp1^0,c
  5262   001292  EF4D  F009         	goto	u2111
  5263   001296  EF4F  F009         	goto	u2110
  5264   00129A                     u2111:
  5265   00129A  EF57  F009         	goto	l2856
  5266   00129E                     u2110:
  5267   00129E  EF00  F009         	goto	l2824
  5268   0012A2                     l2854:
  5269   0012A2  90D8               	bcf	status,0,c
  5270   0012A4  362D               	rlcf	___fltol@f1^0,f,c
  5271   0012A6  362E               	rlcf	(___fltol@f1+1)^0,f,c
  5272   0012A8  362F               	rlcf	(___fltol@f1+2)^0,f,c
  5273   0012AA  3630               	rlcf	(___fltol@f1+3)^0,f,c
  5274   0012AC  0636               	decf	___fltol@exp1^0,f,c
  5275   0012AE                     l2856:
  5276   0012AE  5036               	movf	___fltol@exp1^0,w,c
  5277   0012B0  A4D8               	btfss	status,2,c
  5278   0012B2  EF5D  F009         	goto	u2121
  5279   0012B6  EF5F  F009         	goto	u2120
  5280   0012BA                     u2121:
  5281   0012BA  EF51  F009         	goto	l2854
  5282   0012BE                     u2120:
  5283   0012BE                     l2858:
  5284   0012BE  5035               	movf	___fltol@sign1^0,w,c
  5285   0012C0  B4D8               	btfsc	status,2,c
  5286   0012C2  EF65  F009         	goto	u2131
  5287   0012C6  EF67  F009         	goto	u2130
  5288   0012CA                     u2131:
  5289   0012CA  EF6F  F009         	goto	l2862
  5290   0012CE                     u2130:
  5291   0012CE  1E30               	comf	(___fltol@f1+3)^0,f,c
  5292   0012D0  1E2F               	comf	(___fltol@f1+2)^0,f,c
  5293   0012D2  1E2E               	comf	(___fltol@f1+1)^0,f,c
  5294   0012D4  6C2D               	negf	___fltol@f1^0,c
  5295   0012D6  0E00               	movlw	0
  5296   0012D8  222E               	addwfc	(___fltol@f1+1)^0,f,c
  5297   0012DA  222F               	addwfc	(___fltol@f1+2)^0,f,c
  5298   0012DC  2230               	addwfc	(___fltol@f1+3)^0,f,c
  5299   0012DE                     l2862:
  5300   0012DE  C02D  F02D         	movff	___fltol@f1,?___fltol
  5301   0012E2  C02E  F02E         	movff	___fltol@f1+1,?___fltol+1
  5302   0012E6  C02F  F02F         	movff	___fltol@f1+2,?___fltol+2
  5303   0012EA  C030  F030         	movff	___fltol@f1+3,?___fltol+3
  5304   0012EE                     l784:
  5305   0012EE  0012               	return		;funcret
  5306   0012F0                     __end_of___fltol:
  5307                           	callstack 0
  5308                           
  5309 ;; *************** function ___fldiv *****************
  5310 ;; Defined at:
  5311 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  b               4   19[COMRAM] long 
  5314 ;;  a               4   23[COMRAM] long 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  grs             4   38[COMRAM] unsigned long 
  5317 ;;  rem             4   31[COMRAM] unsigned long 
  5318 ;;  new_exp         2   36[COMRAM] short 
  5319 ;;  aexp            1   43[COMRAM] unsigned char 
  5320 ;;  bexp            1   42[COMRAM] unsigned char 
  5321 ;;  sign            1   35[COMRAM] unsigned char 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  4   19[COMRAM] unsigned char 
  5324 ;; Registers used:
  5325 ;;		wreg, status,2, status,0
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5331 ;;      Params:         8       0       0       0       0       0       0
  5332 ;;      Locals:        13       0       0       0       0       0       0
  5333 ;;      Temps:          4       0       0       0       0       0       0
  5334 ;;      Totals:        25       0       0       0       0       0       0
  5335 ;;Total ram usage:       25 bytes
  5336 ;; Hardware stack levels used: 1
  5337 ;; Hardware stack levels required when called: 1
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_main
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           	psect	text39
  5346   0006E2                     __ptext39:
  5347                           	callstack 0
  5348   0006E2                     ___fldiv:
  5349                           	callstack 29
  5350   0006E2  5017               	movf	(___fldiv@b+3)^0,w,c
  5351   0006E4  0B80               	andlw	128
  5352   0006E6  6E24               	movwf	___fldiv@sign^0,c
  5353   0006E8  5017               	movf	(___fldiv@b+3)^0,w,c
  5354   0006EA  2417               	addwf	(___fldiv@b+3)^0,w,c
  5355   0006EC  6E2B               	movwf	___fldiv@bexp^0,c
  5356   0006EE  AE16               	btfss	(___fldiv@b+2)^0,7,c
  5357   0006F0  EF7C  F003         	goto	u1841
  5358   0006F4  EF7E  F003         	goto	u1840
  5359   0006F8                     u1841:
  5360   0006F8  EF7F  F003         	goto	l2690
  5361   0006FC                     u1840:
  5362   0006FC  802B               	bsf	___fldiv@bexp^0,0,c
  5363   0006FE                     l2690:
  5364   0006FE  502B               	movf	___fldiv@bexp^0,w,c
  5365   000700  B4D8               	btfsc	status,2,c
  5366   000702  EF85  F003         	goto	u1851
  5367   000706  EF87  F003         	goto	u1850
  5368   00070A                     u1851:
  5369   00070A  EF9C  F003         	goto	l2700
  5370   00070E                     u1850:
  5371   00070E  282B               	incf	___fldiv@bexp^0,w,c
  5372   000710  A4D8               	btfss	status,2,c
  5373   000712  EF8D  F003         	goto	u1861
  5374   000716  EF8F  F003         	goto	u1860
  5375   00071A                     u1861:
  5376   00071A  EF97  F003         	goto	l2696
  5377   00071E                     u1860:
  5378   00071E  0E00               	movlw	0
  5379   000720  6E14               	movwf	___fldiv@b^0,c
  5380   000722  0E00               	movlw	0
  5381   000724  6E15               	movwf	(___fldiv@b+1)^0,c
  5382   000726  0E00               	movlw	0
  5383   000728  6E16               	movwf	(___fldiv@b+2)^0,c
  5384   00072A  0E00               	movlw	0
  5385   00072C  6E17               	movwf	(___fldiv@b+3)^0,c
  5386   00072E                     l2696:
  5387   00072E  8E16               	bsf	(___fldiv@b+2)^0,7,c
  5388   000730  0E00               	movlw	0
  5389   000732  6E17               	movwf	(___fldiv@b+3)^0,c
  5390   000734  EFA4  F003         	goto	l2702
  5391   000738                     l2700:
  5392   000738  0E00               	movlw	0
  5393   00073A  6E14               	movwf	___fldiv@b^0,c
  5394   00073C  0E00               	movlw	0
  5395   00073E  6E15               	movwf	(___fldiv@b+1)^0,c
  5396   000740  0E00               	movlw	0
  5397   000742  6E16               	movwf	(___fldiv@b+2)^0,c
  5398   000744  0E00               	movlw	0
  5399   000746  6E17               	movwf	(___fldiv@b+3)^0,c
  5400   000748                     l2702:
  5401   000748  501B               	movf	(___fldiv@a+3)^0,w,c
  5402   00074A  0B80               	andlw	128
  5403   00074C  1A24               	xorwf	___fldiv@sign^0,f,c
  5404   00074E  501B               	movf	(___fldiv@a+3)^0,w,c
  5405   000750  241B               	addwf	(___fldiv@a+3)^0,w,c
  5406   000752  6E2C               	movwf	___fldiv@aexp^0,c
  5407   000754  AE1A               	btfss	(___fldiv@a+2)^0,7,c
  5408   000756  EFAF  F003         	goto	u1871
  5409   00075A  EFB1  F003         	goto	u1870
  5410   00075E                     u1871:
  5411   00075E  EFB2  F003         	goto	l2710
  5412   000762                     u1870:
  5413   000762  802C               	bsf	___fldiv@aexp^0,0,c
  5414   000764                     l2710:
  5415   000764  502C               	movf	___fldiv@aexp^0,w,c
  5416   000766  B4D8               	btfsc	status,2,c
  5417   000768  EFB8  F003         	goto	u1881
  5418   00076C  EFBA  F003         	goto	u1880
  5419   000770                     u1881:
  5420   000770  EFCF  F003         	goto	l2720
  5421   000774                     u1880:
  5422   000774  282C               	incf	___fldiv@aexp^0,w,c
  5423   000776  A4D8               	btfss	status,2,c
  5424   000778  EFC0  F003         	goto	u1891
  5425   00077C  EFC2  F003         	goto	u1890
  5426   000780                     u1891:
  5427   000780  EFCA  F003         	goto	l2716
  5428   000784                     u1890:
  5429   000784  0E00               	movlw	0
  5430   000786  6E18               	movwf	___fldiv@a^0,c
  5431   000788  0E00               	movlw	0
  5432   00078A  6E19               	movwf	(___fldiv@a+1)^0,c
  5433   00078C  0E00               	movlw	0
  5434   00078E  6E1A               	movwf	(___fldiv@a+2)^0,c
  5435   000790  0E00               	movlw	0
  5436   000792  6E1B               	movwf	(___fldiv@a+3)^0,c
  5437   000794                     l2716:
  5438   000794  8E1A               	bsf	(___fldiv@a+2)^0,7,c
  5439   000796  0E00               	movlw	0
  5440   000798  6E1B               	movwf	(___fldiv@a+3)^0,c
  5441   00079A  EFD7  F003         	goto	l2722
  5442   00079E                     l2720:
  5443   00079E  0E00               	movlw	0
  5444   0007A0  6E18               	movwf	___fldiv@a^0,c
  5445   0007A2  0E00               	movlw	0
  5446   0007A4  6E19               	movwf	(___fldiv@a+1)^0,c
  5447   0007A6  0E00               	movlw	0
  5448   0007A8  6E1A               	movwf	(___fldiv@a+2)^0,c
  5449   0007AA  0E00               	movlw	0
  5450   0007AC  6E1B               	movwf	(___fldiv@a+3)^0,c
  5451   0007AE                     l2722:
  5452   0007AE  5018               	movf	___fldiv@a^0,w,c
  5453   0007B0  1019               	iorwf	(___fldiv@a+1)^0,w,c
  5454   0007B2  101A               	iorwf	(___fldiv@a+2)^0,w,c
  5455   0007B4  101B               	iorwf	(___fldiv@a+3)^0,w,c
  5456   0007B6  A4D8               	btfss	status,2,c
  5457   0007B8  EFE0  F003         	goto	u1901
  5458   0007BC  EFE2  F003         	goto	u1900
  5459   0007C0                     u1901:
  5460   0007C0  EFFA  F003         	goto	l2734
  5461   0007C4                     u1900:
  5462   0007C4  0E00               	movlw	0
  5463   0007C6  6E14               	movwf	___fldiv@b^0,c
  5464   0007C8  0E00               	movlw	0
  5465   0007CA  6E15               	movwf	(___fldiv@b+1)^0,c
  5466   0007CC  0E00               	movlw	0
  5467   0007CE  6E16               	movwf	(___fldiv@b+2)^0,c
  5468   0007D0  0E00               	movlw	0
  5469   0007D2  6E17               	movwf	(___fldiv@b+3)^0,c
  5470   0007D4  0E80               	movlw	128
  5471   0007D6  1216               	iorwf	(___fldiv@b+2)^0,f,c
  5472   0007D8  0E7F               	movlw	127
  5473   0007DA  1217               	iorwf	(___fldiv@b+3)^0,f,c
  5474   0007DC                     l2728:
  5475   0007DC  5024               	movf	___fldiv@sign^0,w,c
  5476   0007DE  1217               	iorwf	(___fldiv@b+3)^0,f,c
  5477   0007E0  C014  F014         	movff	___fldiv@b,?___fldiv
  5478   0007E4  C015  F015         	movff	___fldiv@b+1,?___fldiv+1
  5479   0007E8  C016  F016         	movff	___fldiv@b+2,?___fldiv+2
  5480   0007EC  C017  F017         	movff	___fldiv@b+3,?___fldiv+3
  5481   0007F0  EF3D  F005         	goto	l1069
  5482   0007F4                     l2734:
  5483   0007F4  502B               	movf	___fldiv@bexp^0,w,c
  5484   0007F6  A4D8               	btfss	status,2,c
  5485   0007F8  EF00  F004         	goto	u1911
  5486   0007FC  EF02  F004         	goto	u1910
  5487   000800                     u1911:
  5488   000800  EF0C  F004         	goto	l2742
  5489   000804                     u1910:
  5490   000804  0E00               	movlw	0
  5491   000806  6E14               	movwf	?___fldiv^0,c
  5492   000808  0E00               	movlw	0
  5493   00080A  6E15               	movwf	(?___fldiv+1)^0,c
  5494   00080C  0E00               	movlw	0
  5495   00080E  6E16               	movwf	(?___fldiv+2)^0,c
  5496   000810  0E00               	movlw	0
  5497   000812  6E17               	movwf	(?___fldiv+3)^0,c
  5498   000814  EF3D  F005         	goto	l1069
  5499   000818                     l2742:
  5500   000818  502C               	movf	___fldiv@aexp^0,w,c
  5501   00081A  C02B  F01C         	movff	___fldiv@bexp,??___fldiv
  5502   00081E  6A1D               	clrf	(??___fldiv+1)^0,c
  5503   000820  5E1C               	subwf	??___fldiv^0,f,c
  5504   000822  0E00               	movlw	0
  5505   000824  5A1D               	subwfb	(??___fldiv+1)^0,f,c
  5506   000826  0E7F               	movlw	127
  5507   000828  241C               	addwf	??___fldiv^0,w,c
  5508   00082A  6E25               	movwf	___fldiv@new_exp^0,c
  5509   00082C  0E00               	movlw	0
  5510   00082E  201D               	addwfc	(??___fldiv+1)^0,w,c
  5511   000830  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  5512   000832  C014  F020         	movff	___fldiv@b,___fldiv@rem
  5513   000836  C015  F021         	movff	___fldiv@b+1,___fldiv@rem+1
  5514   00083A  C016  F022         	movff	___fldiv@b+2,___fldiv@rem+2
  5515   00083E  C017  F023         	movff	___fldiv@b+3,___fldiv@rem+3
  5516   000842  0E00               	movlw	0
  5517   000844  6E14               	movwf	___fldiv@b^0,c
  5518   000846  0E00               	movlw	0
  5519   000848  6E15               	movwf	(___fldiv@b+1)^0,c
  5520   00084A  0E00               	movlw	0
  5521   00084C  6E16               	movwf	(___fldiv@b+2)^0,c
  5522   00084E  0E00               	movlw	0
  5523   000850  6E17               	movwf	(___fldiv@b+3)^0,c
  5524   000852  0E00               	movlw	0
  5525   000854  6E27               	movwf	___fldiv@grs^0,c
  5526   000856  0E00               	movlw	0
  5527   000858  6E28               	movwf	(___fldiv@grs+1)^0,c
  5528   00085A  0E00               	movlw	0
  5529   00085C  6E29               	movwf	(___fldiv@grs+2)^0,c
  5530   00085E  0E00               	movlw	0
  5531   000860  6E2A               	movwf	(___fldiv@grs+3)^0,c
  5532   000862  0E00               	movlw	0
  5533   000864  6E2C               	movwf	___fldiv@aexp^0,c
  5534   000866  EF6D  F004         	goto	l1071
  5535   00086A                     l2752:
  5536   00086A  502C               	movf	___fldiv@aexp^0,w,c
  5537   00086C  B4D8               	btfsc	status,2,c
  5538   00086E  EF3B  F004         	goto	u1921
  5539   000872  EF3D  F004         	goto	u1920
  5540   000876                     u1921:
  5541   000876  EF54  F004         	goto	l2760
  5542   00087A                     u1920:
  5543   00087A  90D8               	bcf	status,0,c
  5544   00087C  3620               	rlcf	___fldiv@rem^0,f,c
  5545   00087E  3621               	rlcf	(___fldiv@rem+1)^0,f,c
  5546   000880  3622               	rlcf	(___fldiv@rem+2)^0,f,c
  5547   000882  3623               	rlcf	(___fldiv@rem+3)^0,f,c
  5548   000884  90D8               	bcf	status,0,c
  5549   000886  3614               	rlcf	___fldiv@b^0,f,c
  5550   000888  3615               	rlcf	(___fldiv@b+1)^0,f,c
  5551   00088A  3616               	rlcf	(___fldiv@b+2)^0,f,c
  5552   00088C  3617               	rlcf	(___fldiv@b+3)^0,f,c
  5553   00088E  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  5554   000890  EF4C  F004         	goto	u1931
  5555   000894  EF4E  F004         	goto	u1930
  5556   000898                     u1931:
  5557   000898  EF4F  F004         	goto	l1074
  5558   00089C                     u1930:
  5559   00089C  8014               	bsf	___fldiv@b^0,0,c
  5560   00089E                     l1074:
  5561   00089E  90D8               	bcf	status,0,c
  5562   0008A0  3627               	rlcf	___fldiv@grs^0,f,c
  5563   0008A2  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  5564   0008A4  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  5565   0008A6  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  5566   0008A8                     l2760:
  5567   0008A8  5018               	movf	___fldiv@a^0,w,c
  5568   0008AA  5C20               	subwf	___fldiv@rem^0,w,c
  5569   0008AC  5019               	movf	(___fldiv@a+1)^0,w,c
  5570   0008AE  5821               	subwfb	(___fldiv@rem+1)^0,w,c
  5571   0008B0  501A               	movf	(___fldiv@a+2)^0,w,c
  5572   0008B2  5822               	subwfb	(___fldiv@rem+2)^0,w,c
  5573   0008B4  501B               	movf	(___fldiv@a+3)^0,w,c
  5574   0008B6  5823               	subwfb	(___fldiv@rem+3)^0,w,c
  5575   0008B8  A0D8               	btfss	status,0,c
  5576   0008BA  EF61  F004         	goto	u1941
  5577   0008BE  EF63  F004         	goto	u1940
  5578   0008C2                     u1941:
  5579   0008C2  EF6C  F004         	goto	l2766
  5580   0008C6                     u1940:
  5581   0008C6  8C2A               	bsf	(___fldiv@grs+3)^0,6,c
  5582   0008C8  5018               	movf	___fldiv@a^0,w,c
  5583   0008CA  5E20               	subwf	___fldiv@rem^0,f,c
  5584   0008CC  5019               	movf	(___fldiv@a+1)^0,w,c
  5585   0008CE  5A21               	subwfb	(___fldiv@rem+1)^0,f,c
  5586   0008D0  501A               	movf	(___fldiv@a+2)^0,w,c
  5587   0008D2  5A22               	subwfb	(___fldiv@rem+2)^0,f,c
  5588   0008D4  501B               	movf	(___fldiv@a+3)^0,w,c
  5589   0008D6  5A23               	subwfb	(___fldiv@rem+3)^0,f,c
  5590   0008D8                     l2766:
  5591   0008D8  2A2C               	incf	___fldiv@aexp^0,f,c
  5592   0008DA                     l1071:
  5593   0008DA  0E19               	movlw	25
  5594   0008DC  642C               	cpfsgt	___fldiv@aexp^0,c
  5595   0008DE  EF73  F004         	goto	u1951
  5596   0008E2  EF75  F004         	goto	u1950
  5597   0008E6                     u1951:
  5598   0008E6  EF35  F004         	goto	l2752
  5599   0008EA                     u1950:
  5600   0008EA  5020               	movf	___fldiv@rem^0,w,c
  5601   0008EC  1021               	iorwf	(___fldiv@rem+1)^0,w,c
  5602   0008EE  1022               	iorwf	(___fldiv@rem+2)^0,w,c
  5603   0008F0  1023               	iorwf	(___fldiv@rem+3)^0,w,c
  5604   0008F2  B4D8               	btfsc	status,2,c
  5605   0008F4  EF7E  F004         	goto	u1961
  5606   0008F8  EF80  F004         	goto	u1960
  5607   0008FC                     u1961:
  5608   0008FC  EF98  F004         	goto	l2778
  5609   000900                     u1960:
  5610   000900  8027               	bsf	___fldiv@grs^0,0,c
  5611   000902  EF98  F004         	goto	l2778
  5612   000906                     l2772:
  5613   000906  90D8               	bcf	status,0,c
  5614   000908  3614               	rlcf	___fldiv@b^0,f,c
  5615   00090A  3615               	rlcf	(___fldiv@b+1)^0,f,c
  5616   00090C  3616               	rlcf	(___fldiv@b+2)^0,f,c
  5617   00090E  3617               	rlcf	(___fldiv@b+3)^0,f,c
  5618   000910  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  5619   000912  EF8D  F004         	goto	u1971
  5620   000916  EF8F  F004         	goto	u1970
  5621   00091A                     u1971:
  5622   00091A  EF90  F004         	goto	l1080
  5623   00091E                     u1970:
  5624   00091E  8014               	bsf	___fldiv@b^0,0,c
  5625   000920                     l1080:
  5626   000920  90D8               	bcf	status,0,c
  5627   000922  3627               	rlcf	___fldiv@grs^0,f,c
  5628   000924  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  5629   000926  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  5630   000928  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  5631   00092A  0625               	decf	___fldiv@new_exp^0,f,c
  5632   00092C  A0D8               	btfss	status,0,c
  5633   00092E  0626               	decf	(___fldiv@new_exp+1)^0,f,c
  5634   000930                     l2778:
  5635   000930  AE16               	btfss	(___fldiv@b+2)^0,7,c
  5636   000932  EF9D  F004         	goto	u1981
  5637   000936  EF9F  F004         	goto	u1980
  5638   00093A                     u1981:
  5639   00093A  EF83  F004         	goto	l2772
  5640   00093E                     u1980:
  5641   00093E  0E00               	movlw	0
  5642   000940  6E2C               	movwf	___fldiv@aexp^0,c
  5643   000942  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  5644   000944  EFA6  F004         	goto	u1991
  5645   000948  EFA8  F004         	goto	u1990
  5646   00094C                     u1991:
  5647   00094C  EFCC  F004         	goto	l1082
  5648   000950                     u1990:
  5649   000950  0EFF               	movlw	255
  5650   000952  1427               	andwf	___fldiv@grs^0,w,c
  5651   000954  6E1C               	movwf	??___fldiv^0,c
  5652   000956  0EFF               	movlw	255
  5653   000958  1428               	andwf	(___fldiv@grs+1)^0,w,c
  5654   00095A  6E1D               	movwf	(??___fldiv+1)^0,c
  5655   00095C  0EFF               	movlw	255
  5656   00095E  1429               	andwf	(___fldiv@grs+2)^0,w,c
  5657   000960  6E1E               	movwf	(??___fldiv+2)^0,c
  5658   000962  0E7F               	movlw	127
  5659   000964  142A               	andwf	(___fldiv@grs+3)^0,w,c
  5660   000966  6E1F               	movwf	(??___fldiv+3)^0,c
  5661   000968  501C               	movf	??___fldiv^0,w,c
  5662   00096A  101D               	iorwf	(??___fldiv+1)^0,w,c
  5663   00096C  101E               	iorwf	(??___fldiv+2)^0,w,c
  5664   00096E  101F               	iorwf	(??___fldiv+3)^0,w,c
  5665   000970  B4D8               	btfsc	status,2,c
  5666   000972  EFBD  F004         	goto	u2001
  5667   000976  EFBF  F004         	goto	u2000
  5668   00097A                     u2001:
  5669   00097A  EFC3  F004         	goto	l1083
  5670   00097E                     u2000:
  5671   00097E                     l2786:
  5672   00097E  0E01               	movlw	1
  5673   000980  6E2C               	movwf	___fldiv@aexp^0,c
  5674   000982  EFCC  F004         	goto	l1082
  5675   000986                     l1083:
  5676   000986  A014               	btfss	___fldiv@b^0,0,c
  5677   000988  EFC8  F004         	goto	u2011
  5678   00098C  EFCA  F004         	goto	u2010
  5679   000990                     u2011:
  5680   000990  EFCC  F004         	goto	l1082
  5681   000994                     u2010:
  5682   000994  EFBF  F004         	goto	l2786
  5683   000998                     l1082:
  5684   000998  502C               	movf	___fldiv@aexp^0,w,c
  5685   00099A  B4D8               	btfsc	status,2,c
  5686   00099C  EFD2  F004         	goto	u2021
  5687   0009A0  EFD4  F004         	goto	u2020
  5688   0009A4                     u2021:
  5689   0009A4  EFF8  F004         	goto	l2798
  5690   0009A8                     u2020:
  5691   0009A8  0E01               	movlw	1
  5692   0009AA  2614               	addwf	___fldiv@b^0,f,c
  5693   0009AC  0E00               	movlw	0
  5694   0009AE  2215               	addwfc	(___fldiv@b+1)^0,f,c
  5695   0009B0  2216               	addwfc	(___fldiv@b+2)^0,f,c
  5696   0009B2  2217               	addwfc	(___fldiv@b+3)^0,f,c
  5697   0009B4  A017               	btfss	(___fldiv@b+3)^0,0,c
  5698   0009B6  EFDF  F004         	goto	u2031
  5699   0009BA  EFE1  F004         	goto	u2030
  5700   0009BE                     u2031:
  5701   0009BE  EFF8  F004         	goto	l2798
  5702   0009C2                     u2030:
  5703   0009C2  C014  F01C         	movff	___fldiv@b,??___fldiv
  5704   0009C6  C015  F01D         	movff	___fldiv@b+1,??___fldiv+1
  5705   0009CA  C016  F01E         	movff	___fldiv@b+2,??___fldiv+2
  5706   0009CE  C017  F01F         	movff	___fldiv@b+3,??___fldiv+3
  5707   0009D2  341F               	rlcf	(??___fldiv+3)^0,w,c
  5708   0009D4  321F               	rrcf	(??___fldiv+3)^0,f,c
  5709   0009D6  321E               	rrcf	(??___fldiv+2)^0,f,c
  5710   0009D8  321D               	rrcf	(??___fldiv+1)^0,f,c
  5711   0009DA  321C               	rrcf	??___fldiv^0,f,c
  5712   0009DC  C01C  F014         	movff	??___fldiv,___fldiv@b
  5713   0009E0  C01D  F015         	movff	??___fldiv+1,___fldiv@b+1
  5714   0009E4  C01E  F016         	movff	??___fldiv+2,___fldiv@b+2
  5715   0009E8  C01F  F017         	movff	??___fldiv+3,___fldiv@b+3
  5716   0009EC  4A25               	infsnz	___fldiv@new_exp^0,f,c
  5717   0009EE  2A26               	incf	(___fldiv@new_exp+1)^0,f,c
  5718   0009F0                     l2798:
  5719   0009F0  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5720   0009F2  EF03  F005         	goto	u2041
  5721   0009F6  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  5722   0009F8  E108               	bnz	u2040
  5723   0009FA  2825               	incf	___fldiv@new_exp^0,w,c
  5724   0009FC  A0D8               	btfss	status,0,c
  5725   0009FE  EF03  F005         	goto	u2041
  5726   000A02  EF05  F005         	goto	u2040
  5727   000A06                     u2041:
  5728   000A06  EF10  F005         	goto	l2802
  5729   000A0A                     u2040:
  5730   000A0A  0E00               	movlw	0
  5731   000A0C  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  5732   000A0E  6825               	setf	___fldiv@new_exp^0,c
  5733   000A10  0E00               	movlw	0
  5734   000A12  6E14               	movwf	___fldiv@b^0,c
  5735   000A14  0E00               	movlw	0
  5736   000A16  6E15               	movwf	(___fldiv@b+1)^0,c
  5737   000A18  0E00               	movlw	0
  5738   000A1A  6E16               	movwf	(___fldiv@b+2)^0,c
  5739   000A1C  0E00               	movlw	0
  5740   000A1E  6E17               	movwf	(___fldiv@b+3)^0,c
  5741   000A20                     l2802:
  5742   000A20  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5743   000A22  EF1D  F005         	goto	u2050
  5744   000A26  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  5745   000A28  E106               	bnz	u2051
  5746   000A2A  0425               	decf	___fldiv@new_exp^0,w,c
  5747   000A2C  B0D8               	btfsc	status,0,c
  5748   000A2E  EF1B  F005         	goto	u2051
  5749   000A32  EF1D  F005         	goto	u2050
  5750   000A36                     u2051:
  5751   000A36  EF2B  F005         	goto	l2806
  5752   000A3A                     u2050:
  5753   000A3A  0E00               	movlw	0
  5754   000A3C  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  5755   000A3E  0E00               	movlw	0
  5756   000A40  6E25               	movwf	___fldiv@new_exp^0,c
  5757   000A42  0E00               	movlw	0
  5758   000A44  6E14               	movwf	___fldiv@b^0,c
  5759   000A46  0E00               	movlw	0
  5760   000A48  6E15               	movwf	(___fldiv@b+1)^0,c
  5761   000A4A  0E00               	movlw	0
  5762   000A4C  6E16               	movwf	(___fldiv@b+2)^0,c
  5763   000A4E  0E00               	movlw	0
  5764   000A50  6E17               	movwf	(___fldiv@b+3)^0,c
  5765   000A52  0E00               	movlw	0
  5766   000A54  6E24               	movwf	___fldiv@sign^0,c
  5767   000A56                     l2806:
  5768   000A56  C025  F02B         	movff	___fldiv@new_exp,___fldiv@bexp
  5769   000A5A  A02B               	btfss	___fldiv@bexp^0,0,c
  5770   000A5C  EF32  F005         	goto	u2061
  5771   000A60  EF34  F005         	goto	u2060
  5772   000A64                     u2061:
  5773   000A64  EF37  F005         	goto	l2812
  5774   000A68                     u2060:
  5775   000A68  8E16               	bsf	(___fldiv@b+2)^0,7,c
  5776   000A6A  EF38  F005         	goto	l2814
  5777   000A6E                     l2812:
  5778   000A6E  9E16               	bcf	(___fldiv@b+2)^0,7,c
  5779   000A70                     l2814:
  5780   000A70  90D8               	bcf	status,0,c
  5781   000A72  302B               	rrcf	___fldiv@bexp^0,w,c
  5782   000A74  6E17               	movwf	(___fldiv@b+3)^0,c
  5783   000A76  EFEE  F003         	goto	l2728
  5784   000A7A                     l1069:
  5785   000A7A  0012               	return		;funcret
  5786   000A7C                     __end_of___fldiv:
  5787                           	callstack 0
  5788                           
  5789 ;; *************** function _isr *****************
  5790 ;; Defined at:
  5791 ;;		line 3 in file "isr.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;		None
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;		None
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  1    wreg      void 
  5798 ;; Registers used:
  5799 ;;		wreg, status,2, status,0
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5805 ;;      Params:         0       0       0       0       0       0       0
  5806 ;;      Locals:         0       0       0       0       0       0       0
  5807 ;;      Temps:          0       0       0       0       0       0       0
  5808 ;;      Totals:         0       0       0       0       0       0       0
  5809 ;;Total ram usage:        0 bytes
  5810 ;; Hardware stack levels used: 1
  5811 ;; This function calls:
  5812 ;;		Nothing
  5813 ;; This function is called by:
  5814 ;;		Interrupt level 2
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	intcode
  5819   000008                     __pintcode:
  5820                           	callstack 0
  5821   000008                     _isr:
  5822                           	callstack 23
  5823                           
  5824                           ;incstack = 0
  5825   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5826   00000A  EDB7  F00D         	call	int_func,f	;refresh shadow registers
  5827                           
  5828                           	psect	intcode_body
  5829   001B6E                     __pintcode_body:
  5830                           	callstack 23
  5831   001B6E                     int_func:
  5832                           	callstack 23
  5833   001B6E  0006               	pop		; remove dummy address from shadow register refresh
  5834   001B70                     
  5835                           ;isr.c: 5:     static unsigned int count = 0;;isr.c: 6:     if (TMR0IF == 1)
  5836   001B70  A4F2               	btfss	4082,2,c	;volatile
  5837   001B72  EFBD  F00D         	goto	i2u225_41
  5838   001B76  EFBF  F00D         	goto	i2u225_40
  5839   001B7A                     i2u225_41:
  5840   001B7A  EFDB  F00D         	goto	i2l240
  5841   001B7E                     i2u225_40:
  5842   001B7E                     
  5843                           ;isr.c: 7:     {;isr.c: 8:         TMR0 = TMR0 + 8;
  5844   001B7E  0E08               	movlw	8
  5845   001B80  24D6               	addwf	214,w,c	;volatile
  5846   001B82  6ED6               	movwf	214,c	;volatile
  5847   001B84  0E00               	movlw	0
  5848   001B86  20D7               	addwfc	215,w,c	;volatile
  5849   001B88  6ED7               	movwf	215,c	;volatile
  5850                           
  5851                           ;isr.c: 9:         if (++count == 20000)
  5852   001B8A  4A4C               	infsnz	isr@count^0,f,c
  5853   001B8C  2A4D               	incf	(isr@count+1)^0,f,c
  5854   001B8E  0E20               	movlw	32
  5855   001B90  184C               	xorwf	isr@count^0,w,c
  5856   001B92  E107               	bnz	i2u226_41
  5857   001B94  0E4E               	movlw	78
  5858   001B96  184D               	xorwf	(isr@count+1)^0,w,c
  5859   001B98  A4D8               	btfss	status,2,c
  5860   001B9A  EFD1  F00D         	goto	i2u226_41
  5861   001B9E  EFD3  F00D         	goto	i2u226_40
  5862   001BA2                     i2u226_41:
  5863   001BA2  EFDA  F00D         	goto	i2l2946
  5864   001BA6                     i2u226_40:
  5865   001BA6                     
  5866                           ;isr.c: 10:         {;isr.c: 11:             count=0;
  5867   001BA6  0E00               	movlw	0
  5868   001BA8  6E4D               	movwf	(isr@count+1)^0,c
  5869   001BAA  0E00               	movlw	0
  5870   001BAC  6E4C               	movwf	isr@count^0,c
  5871   001BAE                     
  5872                           ;isr.c: 12:             sec--;
  5873   001BAE  0657               	decf	_sec^0,f,c
  5874   001BB0  A0D8               	btfss	status,0,c
  5875   001BB2  0658               	decf	(_sec+1)^0,f,c
  5876   001BB4                     i2l2946:
  5877                           
  5878                           ;isr.c: 15:         TMR0IF = 0;
  5879   001BB4  94F2               	bcf	4082,2,c	;volatile
  5880   001BB6                     i2l240:
  5881   001BB6  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5882   001BB8  0011               	retfie		f
  5883   001BBA                     __end_of_isr:
  5884                           	callstack 0
  5885                           
  5886                           	psect	rparam
  5887   000000                     
  5888                           	psect	temp
  5889   00005D                     btemp:
  5890                           	callstack 0
  5891   00005D                     	ds	1
  5892   000000                     int$flags	set	btemp
  5893   000000                     wtemp8	set	btemp+1
  5894   000000                     ttemp5	set	btemp+1
  5895   000000                     ttemp6	set	btemp+4
  5896   000000                     ttemp7	set	btemp+8
  5897                           
  5898                           	psect	config
  5899                           
  5900                           ; Padding undefined space
  5901   300000                     	org	3145728
  5902   300000  FF                 	db	255
  5903                           
  5904                           ;Config register CONFIG1H @ 0x300001
  5905                           ;	Oscillator Selection bits
  5906                           ;	OSC = RCIO, External RC oscillator, port function on RA6
  5907                           ;	Fail-Safe Clock Monitor Enable bit
  5908                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5909                           ;	Internal/External Oscillator Switchover bit
  5910                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5911   300001                     	org	3145729
  5912   300001  07                 	db	7
  5913                           
  5914                           ;Config register CONFIG2L @ 0x300002
  5915                           ;	Power-up Timer Enable bit
  5916                           ;	PWRT = OFF, PWRT disabled
  5917                           ;	Brown-out Reset Enable bits
  5918                           ;	BOREN = BOHW, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5919                           ;	Brown-out Reset Voltage bits
  5920                           ;	BORV = 3, VBOR set to 2.1V
  5921   300002                     	org	3145730
  5922   300002  1F                 	db	31
  5923                           
  5924                           ;Config register CONFIG2H @ 0x300003
  5925                           ;	Watchdog Timer Enable bit
  5926                           ;	WDT = ON, WDT enabled
  5927                           ;	Watchdog Timer Postscale Select bits
  5928                           ;	WDTPS = 32768, 1:32768
  5929   300003                     	org	3145731
  5930   300003  1F                 	db	31
  5931                           
  5932                           ; Padding undefined space
  5933   300004                     	org	3145732
  5934   300004  FF                 	db	255
  5935                           
  5936                           ;Config register CONFIG3H @ 0x300005
  5937                           ;	PORTB A/D Enable bit
  5938                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5939                           ;	Low-Power Timer 1 Oscillator Enable bit
  5940                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5941                           ;	MCLR Pin Enable bit
  5942                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5943   300005                     	org	3145733
  5944   300005  82                 	db	130
  5945                           
  5946                           ;Config register CONFIG4L @ 0x300006
  5947                           ;	Stack Full/Underflow Reset Enable bit
  5948                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5949                           ;	Single-Supply ICSP Enable bit
  5950                           ;	LVP = ON, Single-Supply ICSP enabled
  5951                           ;	Boot Block Size Select bit
  5952                           ;	BBSIZ = 1024, 1K words (2K bytes) boot block
  5953                           ;	Extended Instruction Set Enable bit
  5954                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5955                           ;	Background Debugger Enable bit
  5956                           ;	DEBUG = 0x1, unprogrammed default
  5957   300006                     	org	3145734
  5958   300006  85                 	db	133
  5959                           
  5960                           ; Padding undefined space
  5961   300007                     	org	3145735
  5962   300007  FF                 	db	255
  5963                           
  5964                           ;Config register CONFIG5L @ 0x300008
  5965                           ;	Code Protection bit
  5966                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5967                           ;	Code Protection bit
  5968                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5969                           ;	Code Protection bit
  5970                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5971                           ;	Code Protection bit
  5972                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5973   300008                     	org	3145736
  5974   300008  0F                 	db	15
  5975                           
  5976                           ;Config register CONFIG5H @ 0x300009
  5977                           ;	Boot Block Code Protection bit
  5978                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5979                           ;	Data EEPROM Code Protection bit
  5980                           ;	CPD = OFF, Data EEPROM not code-protected
  5981   300009                     	org	3145737
  5982   300009  C0                 	db	192
  5983                           
  5984                           ;Config register CONFIG6L @ 0x30000A
  5985                           ;	Write Protection bit
  5986                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5987                           ;	Write Protection bit
  5988                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5989                           ;	Write Protection bit
  5990                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5991                           ;	Write Protection bit
  5992                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5993   30000A                     	org	3145738
  5994   30000A  0F                 	db	15
  5995                           
  5996                           ;Config register CONFIG6H @ 0x30000B
  5997                           ;	Configuration Register Write Protection bit
  5998                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5999                           ;	Boot Block Write Protection bit
  6000                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  6001                           ;	Data EEPROM Write Protection bit
  6002                           ;	WRTD = OFF, Data EEPROM not write-protected
  6003   30000B                     	org	3145739
  6004   30000B  E0                 	db	224
  6005                           
  6006                           ;Config register CONFIG7L @ 0x30000C
  6007                           ;	Table Read Protection bit
  6008                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6009                           ;	Table Read Protection bit
  6010                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6011                           ;	Table Read Protection bit
  6012                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6013                           ;	Table Read Protection bit
  6014                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6015   30000C                     	org	3145740
  6016   30000C  0F                 	db	15
  6017                           
  6018                           ;Config register CONFIG7H @ 0x30000D
  6019                           ;	Boot Block Table Read Protection bit
  6020                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6021   30000D                     	org	3145741
  6022   30000D  40                 	db	64
  6023                           tosu	equ	0xFFF
  6024                           tosh	equ	0xFFE
  6025                           tosl	equ	0xFFD
  6026                           stkptr	equ	0xFFC
  6027                           pclatu	equ	0xFFB
  6028                           pclath	equ	0xFFA
  6029                           pcl	equ	0xFF9
  6030                           tblptru	equ	0xFF8
  6031                           tblptrh	equ	0xFF7
  6032                           tblptrl	equ	0xFF6
  6033                           tablat	equ	0xFF5
  6034                           prodh	equ	0xFF4
  6035                           prodl	equ	0xFF3
  6036                           indf0	equ	0xFEF
  6037                           postinc0	equ	0xFEE
  6038                           postdec0	equ	0xFED
  6039                           preinc0	equ	0xFEC
  6040                           plusw0	equ	0xFEB
  6041                           fsr0h	equ	0xFEA
  6042                           fsr0l	equ	0xFE9
  6043                           wreg	equ	0xFE8
  6044                           indf1	equ	0xFE7
  6045                           postinc1	equ	0xFE6
  6046                           postdec1	equ	0xFE5
  6047                           preinc1	equ	0xFE4
  6048                           plusw1	equ	0xFE3
  6049                           fsr1h	equ	0xFE2
  6050                           fsr1l	equ	0xFE1
  6051                           bsr	equ	0xFE0
  6052                           indf2	equ	0xFDF
  6053                           postinc2	equ	0xFDE
  6054                           postdec2	equ	0xFDD
  6055                           preinc2	equ	0xFDC
  6056                           plusw2	equ	0xFDB
  6057                           fsr2h	equ	0xFDA
  6058                           fsr2l	equ	0xFD9
  6059                           status	equ	0xFD8

Data Sizes:
    Strings     224
    Constant    0
    Data        43
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      92
    BANK0           160      0      63
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    scrolling	PTR unsigned char [5] size(2) Largest target is 14
		 -> STR_22(CODE[14]), STR_21(CODE[14]), STR_20(CODE[14]), STR_19(CODE[14]), 
		 -> STR_18(CODE[14]), 

    mystrcmp@s2	PTR unsigned char  size(2) Largest target is 5
		 -> pass(BANK0[5]), 

    mystrcmp@s1	PTR unsigned char  size(2) Largest target is 5
		 -> uckey(BANK0[5]), 

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_22(CODE[14]), STR_21(CODE[14]), STR_20(CODE[14]), STR_19(CODE[14]), 
		 -> STR_18(CODE[14]), STR_17(CODE[5]), STR_16(CODE[9]), STR_15(CODE[15]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[17]), time(BANK0[9]), STR_9(CODE[16]), 

    signature	PTR unsigned char [8] size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _scrolllog->_clcd_putch
    _logscreen->_clcd_putch
    _timeleft->_clcd_putch
    _init_config->_init_clcd
    _init_config->_init_ds1307
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _display_dashboard->_gear_monitor
    _gear_monitor->_clcd_putch
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_times->_clcd_print
    _clcd_print->_clcd_write
    _display_speed->_clcd_putch
    _clcd_putch->___awmod
    ___awmod->___awdiv
    ___xxtofl->_read_adc
    ___fltol->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   53654
                                             54 COMRAM     6     6      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                         _clcd_write
                  _display_dashboard
                        _init_config
                          _logscreen
                           _read_adc
                      _read_switches
                          _scrolllog
 ---------------------------------------------------------------------------------
 (1) _scrolllog                                            4     3      1    9071
                                             16 COMRAM     4     3      1
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _logscreen                                            3     3      0   19545
                                             16 COMRAM     3     3      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                           _mystrcmp
                           _timeleft
 ---------------------------------------------------------------------------------
 (2) _timeleft                                             0     0      0   10263
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _mystrcmp                                             8     4      4     286
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    2146
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                  _init_matrixkeypad
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrixkeypad                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     506
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     370
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            2     2      0    1640
                                              2 COMRAM     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_dashboard                                    3     1      2   18949
                                             19 COMRAM     3     1      2
                         _clcd_print
                         _clcd_putch
                      _display_speed
                       _display_time
                       _gear_monitor
 ---------------------------------------------------------------------------------
 (2) _gear_monitor                                         3     3      0    2890
                                             16 COMRAM     3     3      0
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _display_time                                         0     0      0    4510
                      _display_times
                           _get_time
 ---------------------------------------------------------------------------------
 (3) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (5) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _display_times                                        0     0      0    4443
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    4443
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _display_speed                                        2     0      2    4162
                                             16 COMRAM     2     0      2
                            ___awmod
                            ___lwdiv
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    2824
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    1640
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              5 COMRAM    14    10      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             44 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
       _read_adc (ARG)
     _read_adc (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
     _read_adc (ARG)
   ___xxtofl
   _clcd_write
   _display_dashboard
     _clcd_print
       _clcd_write
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
         ___lwdiv (ARG)
       ___lwdiv (ARG)
       _clcd_write (ARG)
     _display_speed
       ___awmod
       ___lwdiv
       _clcd_putch
     _display_time
       _display_times
         _clcd_print
       _get_time
         _read_ds1307
           _i2c_read
             _i2c_no_ack
             _i2c_rx_mode
               _i2c_idle
           _i2c_rep_start
             _i2c_idle
           _i2c_start
             _i2c_idle
           _i2c_stop
             _i2c_idle
           _i2c_write
             _i2c_idle
     _gear_monitor
       _clcd_putch
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrixkeypad
     _init_timer0
   _logscreen
     _clcd_print
     _clcd_putch
     _clcd_write
     _mystrcmp
     _timeleft
       ___awdiv
       ___awmod
       _clcd_print
       _clcd_putch
       _clcd_write
   _read_adc
   _read_switches
     _scan_key
   _scrolllog
     _clcd_print
     _clcd_putch
     _clcd_write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      28        0.0%
BITBIGSFRll        281      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3F       5       39.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      5C       1       97.9%
BITBIGSFRhlh        19      0       0      17        0.0%
BITBIGSFRlhhllh     12      0       0      22        0.0%
BITBIGSFRlhl         F      0       0      25        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRhllh        9      0       0      18        0.0%
BITBIGSFRlhhlll      6      0       0      24        0.0%
BITBIGSFRlhhlh       5      0       0      21        0.0%
BITBIGSFRlhhllh      2      0       0      23        0.0%
BITBIGSFRlhhhh       2      0       0      19        0.0%
BITBIGSFRlhhhl       2      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9B      27        0.0%
DATA                 0      0      9B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Dec 27 13:05:26 2023

             ___fldiv@aexp 002C               ___fldiv@bexp 002B                          _i 0050  
                        _k 008B                          _p 0089               ___fldiv@sign 0024  
           clcd_print@addr 0005             clcd_print@data 0003                         l29 1D40  
                       l38 12F4                         l90 1C1A                         l93 1C36  
                       l87 1D26                         _GO 7E11               ___awdiv@sign 0006  
        _init_matrixkeypad 1DAE                        l200 1DBA                        l121 1DDC  
                      l210 1966                        l124 1DAC                        l220 1828  
                      l221 183C                        l142 148E                        l118 1C6A  
                      l223 1858                        l312 1598                        l216 17FA  
                      l208 1968                        l129 18F2                        l145 14E6  
                      l313 15AC                        l217 186E                        l218 180E  
                      l148 1B6C                        l412 1C00                        l174 1C98  
                      l175 1C9C                        l415 1D08                        l351 1D5A  
                      l319 1A48                        l184 1AB4                        l418 1CC6  
                      l178 172E                        l187 1D72                        l453 1D88  
                      l285 0DBC                        l456 1D8A                        l472 1DFC  
                      l288 0BFC                        l481 1E0A                        l458 1D98  
                      l466 1DF4                        l731 17DE                        l459 1D9A  
                      l475 1DC6                        l387 1034                        l484 1DD2  
                      l469 1DEC                        l478 1E04                        l718 1670  
                      _CKE 7E3E                        l784 12EE                        l985 19DC  
                      l978 19D4                        _GIE 7F97                        _PR2 0FCB  
                      _PEN 7E2A                        _SEN 7E28                        _PSA 7EAB  
                      _SMP 7E3F              ?_display_time 0001         ?_init_matrixkeypad 0001  
                      _min 008D                        _sec 0057                        _isr 0008  
           clcd_putch@addr 000F             clcd_putch@data 0010               ___awmod@sign 000E  
                      prod 0FF3                        wreg 0FE8        ??_init_matrixkeypad 0001  
             ___fltol@exp1 0036                       l2100 1DF6                       l1142 108C  
                     l2110 1A4A                       l2102 1DF8                       l1071 08DA  
                     l1080 0920                       l2112 1A58                       l2104 1DC8  
                     l2120 1CA4                       l2200 1650                       l1145 11E8  
                     l1082 0998                       l1074 089E                       l2210 1734  
                     l2114 1A80                       l2106 1DD0                       l2122 1CAA  
                     l2202 1660                       l1083 0986                       l1156 1180  
                     l2220 1764                       l2212 1742                       l2132 1D5E  
                     l2116 1A84                       l2060 1D8A                       l2124 1CB0  
                     l2140 18AE                       l2300 16E0                       l2204 1668  
                     l1069 0A7A                       l1149 1124                       l2230 17AA  
                     l2222 1776                       l2214 174A                       l2070 1C78  
                     l2062 1DFE                       l2126 1CB4                       l2118 1CA0  
                     l2150 18EE                       l2142 18C2                       l2134 1870  
                     l2310 170E                       l2302 16EA                       l2240 17D6  
                     l2232 17B2                       l2224 177E                       l2216 174E  
                     l2208 1730                       l2080 1C84                       l2072 1C7C  
                     l2152 1D9C                       l2064 1E00                       l2128 1CC0  
                     l2144 18C6                       l2136 1888                       l2312 171C  
                     l2304 16F2                       l2160 1CFE                       l2320 1D52  
                     l2234 17B8                       l2226 1786                       l2218 175C  
                     l2250 198C                       l2082 1C86                       l2074 1C7E  
                     l2066 1E06                       l2090 1DF0                       l2146 18D0  
                     l2138 1896                       l2314 1726                       l2306 16FC  
                     l2162 1D04                       l2154 1CEE                       l2330 1D84  
                     l2322 1D74                       l2170 15C8                       l2228 1794  
                     l2236 17BE                       l2260 19C6                       l2252 1994  
                     l2244 196A                       l2084 1C88                       l2076 1C80  
                     l2068 1C6E                       l2092 1DBE                       l2148 18D8  
                     l2316 1D0A                       l2308 1704                       l2156 1CF2  
                     l2340 1BE2                       l2332 1D86                       l2324 1D78  
                     l2420 1A20                       l2412 19DE                       l2180 15EE  
                     l2172 15CC                       l2164 15AE                       l2500 0AA6  
                     l2404 1866                       l2238 17CE                       l2262 19C8  
                     l2254 19A2                       l2246 1972                       l2086 1C8A  
                     l2078 1C82                       l2094 1DC2                       l2350 1404  
                     l2158 1CF8                       l2342 1BEC                       l2334 1BBA  
                     l2326 1D80                       l2270 1DB8                       l2318 1D42  
                     l2414 19EA                       l2422 1A24                       l2190 1624  
                     l2182 1600                       l2174 15DA                       l2166 15B2  
                     l2430 14F2                       l2510 0B18                       l2502 0AB8  
                     l2264 19CE                       l2256 19A8                       l2248 1984  
                     l2088 1DEE                       l2096 1DE6                       l2344 1DD4  
                     l2360 144A                       l2352 1410                       l2600 1C3A  
                     l2280 1684                       l2272 1672                       l2336 1BC2  
                     l2328 1D82                       l2424 1A40                       l2416 1A14  
                     l2192 163A                       l2184 1608                       l2176 15E2  
                     l2168 15C0                       l2440 1586                       l2432 14FC  
                     l2520 0B64                       l2512 0B20                       l2504 0AC8  
                     l2408 186C                       l2258 19BE                       l2098 1DE8  
                     l2346 1DD8                       l2354 1422                       l2362 1456  
                     l2370 148E                       l2602 1C4A                       l2290 16AE  
                     l2282 1686                       l2274 1676                       l2338 1BCE  
                     l2266 1DAE                       l2450 1D34                       l2194 1642  
                     l2186 1610                       l2178 15E6                       l2442 159A  
                     l2434 1502                       l2530 0BA4                       l2522 0B70  
                     l2514 0B30                       l2506 0AF0                       l2610 0DC0  
                     l2700 0738                       l2372 14B2                       l2364 1468  
                     l2356 1432                       l2348 13F4                       l2604 1C54  
                     l2292 16BE                       l2284 168A                       l2276 167C  
                     l2268 1DB2                       l2452 1D38                       l2196 1644  
                     l2188 161E                       l2444 15A2                       l2436 1532  
                     l2428 14E8                       l2532 0BB0                       l2516 0B42  
                     l2524 0B76                       l2540 0C00                       l2460 1C28  
                     l2620 0E0C                       l2612 0DD2                       l2710 0764  
                     l2702 0748                       l2374 1B1C                       l2366 1478  
                     l2358 1438                       l2606 1C58                       l2294 16C8  
                     l2286 168C                       l2278 1680                       l2454 1D3C  
                     l2446 1D28                       l2198 164A                       l2438 1552  
                     l2550 0C76                       l2534 0BC6                       l2526 0B88  
                     l2542 0C0C                       l2518 0B52                       l2630 0E58  
                     l2622 0E12                       l2614 0DEE                       l2800 0A0A  
                     l2712 0774                       l2720 079E                       l2704 074E  
                     l2368 1488                       l2608 1C5E                       l2296 16D0  
                     l2288 16A4                       l2448 1D30                       l2560 0CE0  
                     l2552 0C96                       l2544 0C1E                       l2536 0BD6  
                     l2528 0B8C                       l2456 1C04                       l2384 1808  
                     l2376 17E0                       l2480 1944                       l2472 190E  
                     l2464 18F6                       l2640 0ECC                       l2632 0E62  
                     l2624 0E28                       l2616 0DFE                       l2810 0A68  
                     l2802 0A20                       l2730 07E0                       l2722 07AE  
                     l2714 0784                       l2706 0754                       l2298 16DA  
                     l2570 0D16                       l2554 0CA8                       l2546 0C44  
                     l2538 0BEC                       l2458 1C18                       l2394 1836  
                     l2378 17F4                       l2474 191E                       l2490 1966  
                     l2466 1906                       l2650 0F12                       l2642 0ED6  
                     l2634 0E82                       l2626 0E38                       l2812 0A6E  
                     l2804 0A3A                       l2724 07C4                       l2716 0794  
                     l2708 0762                       l2900 1194                       l2580 0D70  
                     l2572 0D26                       l2556 0CCE                       l2548 0C5C  
                     l2388 1822                       l2476 1924                       l2660 0F64  
                     l2644 0ED8                       l2652 0F36                       l2636 0EAA  
                     l2628 0E46                       l2814 0A70                       l2806 0A56  
                     l2750 0862                       l2742 0818                       l2726 07D4  
                     l2734 07F4                       l2718 0796                       l2830 123E  
                     l2822 11EA                       l2902 11B8                       l2590 0D94  
                     l2574 0D2C                       l2558 0CD8                       l2566 0CEC  
                     l2494 0A7E                       l2398 1852                       l2478 1934  
                     l2486 194E                       l2670 0FD2                       l2662 0F6C  
                     l2654 0F48                       l2646 0EE0                       l2638 0EBC  
                     l2808 0A5A                       l2760 08A8                       l2752 086A  
                     l2744 0832                       l2736 0804                       l2728 07DC  
                     l2832 1240                       l2824 1200                       l2904 11C8  
                     l2592 0D9C                       l2576 0D38                       l2568 0D06  
                     l2584 0D7E                       l2496 0A84                       l2488 195E  
                     l2680 1014                       l2672 0FE4                       l2664 0F76  
                     l2656 0F58                       l2648 0EEA                       l2920 1384  
                     l2912 12F0                       l2770 0900                       l2762 08C6  
                     l2754 087A                       l2746 0842                       l2738 0804  
                     l2690 06FE                       l2834 1250                       l2906 11D6  
                     l2594 0DA4                       l2586 0D86                       l2578 0D4A  
                     l2498 0A96                       l2682 1024                       l2674 0FF4  
                     l2666 0F96                       l2658 0F62                       l2922 138A  
                     l2914 135C                       l2780 093E                       l2772 0906  
                     l2764 08C8                       l2756 088E                       l2748 0852  
                     l2692 070E                       l2684 06E2                       l2860 12CE  
                     l2844 127A                       l2836 1254                       l2828 1214  
                     l2908 11D8                       l2596 0DAC                       l2588 0D90  
                     l2676 0FFE                       l2668 0FC2                       l2924 1392  
                     l2916 136E                       l2932 13B2                       l2790 09A8  
                     l2782 0942                       l2774 0910                       l2766 08D8  
                     l2758 089C                       l2694 071E                       l2686 06EE  
                     l2862 12DE                       l2854 12A2                       l2846 1284  
                     l2838 1262                       l2870 1056                       l2598 0DB4  
                     l2678 1002                       l2918 1376                       l2792 09B4  
                     l2784 0950                       l2776 091E                       l2768 08EA  
                     l2696 072E                       l2688 06FC                       l2856 12AE  
                     l2848 128E                       l2880 10CE                       l2872 109C  
                     l2928 13A4                       l2794 09C2                       l2786 097E  
                     l2778 0930                       l2698 0730                       l2858 12BE  
                     l2890 1156                       l2882 10DA                       l2874 10B2  
                     l2866 1038                       l2796 09EC                       l2892 1162  
                     l2884 110C                       l2868 1048                       l2798 09F0  
                     l2894 1170                       l2886 110E                       l2878 10C6  
                     l2896 118E                       l2888 111A                       l2968 13C8  
                     l2898 1190                       _ADFM 7E07                       ?_isr 0001  
                     _ADON 7E10                       STR_1 06DB                       STR_2 06D8  
                     STR_3 06CC                       STR_4 06CF                       STR_5 06D2  
                     STR_6 06D5                       STR_7 06DE                       STR_8 06C9  
                     STR_9 0656                       _T0CS 7EAD                       u2000 097E  
                     u1200 1896                       u2001 097A                       u1201 1892  
                     u2010 0994                       u1210 15C0                       u2011 0990  
                     u1211 15BC                       u2020 09A8                       u2100 1276  
                     u1300 1794                       u1140 1D98                       u1220 15DA  
                     u2021 09A4                       u2101 1272                       u1301 1790  
                     u1141 1D94                       u1221 15D6                       u2030 09C2  
                     u2110 129E                       u1310 17AA                       u1230 1600  
                     u2031 09BE                       u2111 129A                       u1311 17A6  
                     u1231 15FC                       u2040 0A0A                       u2120 12BE  
                     u2200 1180                       u1320 17CE                       u1160 1C98  
                     u1400 1468                       u1240 161E                       u2041 0A06  
                     u2121 12BA                       u2201 117C                       u1321 17CA  
                     u1161 1C94                       u1401 1464                       u1241 161A  
                     u2050 0A3A                       u2130 12CE                       u2210 118E  
                     u1330 1984                       u1170 1A7C                       u1410 1478  
                     u1250 163A                       u2051 0A36                       u2131 12CA  
                     u2211 118A                       u1331 1980                       u1155 1C76  
                     u1411 1474                       u1251 1636                       u2060 0A68  
                     u2220 11C8                       u2140 1048                       u1340 19A2  
                     u1156 1C78                       u1180 1AA4                       u1420 1488  
                     u1500 1A40                       u1260 1660                       u2061 0A64  
                     u2221 11C4                       u2141 1044                       u1341 199E  
                     u1421 1484                       u1501 1A3C                       u1261 165C  
                     u2070 1200                       u2230 11D6                       u2150 1056  
                     u1270 1742                       u1350 19BE                       u1190 1AB4  
                     u1510 1598                       u1430 17F4                       u2071 11FC  
                     u2231 11D2                       u2151 1052                       u1271 173E  
                     u1351 19BA                       u1191 1AB0                       u1511 1594  
                     u1431 17F0                       u2080 1234                       u2160 10B2  
                     u1280 175C                       u1360 1404                       u1600 0AC8  
                     u1520 1C28                       u1440 1808                       u2240 136E  
                     u2161 10AE                       u1281 1758                       u1177 1A72  
                     u1361 1400                       u1601 0AC4                       u1521 1C24  
                     u1441 1804                       u2241 136A                       u2090 1262  
                     u2170 1108                       u1290 1776                       u1370 1422  
                     u1610 0AF0                       u1450 1822                       u1530 1906  
                     u2091 125E                       u2171 1104                       u1291 1772  
                     u1187 1A9A                       u1371 141E                       u2307 16EC  
                     u1611 0AEC                       u1451 181E                       u1531 1902  
                     u2180 1152                       u1380 1432                       u1700 0C76  
                     u1620 0B30                       u1460 1836                       u1540 191E  
                     u2085 122A                       u2181 114E                       u1381 142E  
                     u2317 16FE                       u1701 0C72                       u1621 0B2C  
                     u1461 1832                       u1541 191A                       u2190 1170  
                     u1390 144A                       u1710 0CCE                       u1630 0B42  
                     u1470 1852                       u1550 1934                       u2191 116C  
                     u1391 1446                       u2327 1714                       u1711 0CCA  
                     u1631 0B3E                       u1471 184E                       u1551 1930  
                     u1720 0D70                       u1640 0B88                       u1480 1866  
                     u1560 1944                       u1800 0F58                       u2337 1728  
                     u1721 0D6C                       u1641 0B84                       u1481 1862  
                     u1561 1940                       u1801 0F54                       u1490 1A14  
                     u1650 0BA4                       u1570 195E                       u1810 0FD2  
                     u1730 0DD2                       u1491 1A10                       u1651 0BA0  
                     u1571 195A                       u1811 0FCE                       u1731 0DCE  
                     u1900 07C4                       u1660 0BC6                       u1580 0A96  
                     u1820 0FE4                       u1740 0DEE                       u1901 07C0  
                     u2277 1696                       u1661 0BC2                       u1581 0A92  
                     u1821 0FE0                       u1741 0DEA                       u1910 0804  
                     u1670 0BEC                       u1590 0AB8                       u1830 0FF4  
                     u1750 0E28                       u1911 0800                       u2287 16B4  
                     u1671 0BE8                       u1591 0AB4                       u1831 0FF0  
                     u1751 0E24                       u1920 087A                       u1840 06FC  
                     u1680 0C1E                       u1760 0E58                       u1921 0876  
                     u1841 06F8                       u2297 16CA                       u1681 0C1A  
                     u1761 0E54                       u1930 089C                       u1850 070E  
                     u1690 0C44                       u1770 0EBC                       u1931 0898  
                     u1851 070A                       u1691 0C40                       u1771 0EB8  
                     u1940 08C6                       u1860 071E                       u1780 0ECC  
                     u1941 08C2                       u1861 071A                       u1781 0EC8  
                     u1950 08EA                       u1870 0762                       u1790 0F48  
                     u1951 08E6                       u1871 075E                       u1791 0F44  
                     u1960 0900                       u1880 0774                       u1961 08FC  
                     u1881 0770                       u1970 091E                       u1890 0784  
                     u1971 091A                       u1891 0780                       _PEIE 7F96  
                     u1980 093E                       u1981 093A                       u1990 0950  
                     u1991 094C                       _RCEN 7E2B                       _RBPU 7F8F  
                     _TMR0 0FD6                       _RSEN 7E29             ?_display_speed 0011  
           ?_display_times 0001                       _main 12F0                       _logg 004F  
                     _pass 007E                       _mpos 0054                       _wait 0083  
                     _time 0091                       fsr0h 0FEA                       _star 005B  
                     indf0 0FEF                       fsr0l 0FE9                       indf2 0FDF  
                     fsr1l 0FE1                       fsr2l 0FD9                       btemp 005D  
                     prodl 0FF3                       start 000E            ___fldiv@new_exp 0025  
             ___param_bank 0000             clcd_write@byte 0002              _i2c_rep_start 1DF6  
            ??_i2c_rx_mode 0001               _ECCP1CONbits 0FBA  __end_of_init_matrixkeypad 1DBC  
                    ??_isr 0001               ?_init_ds1307 0001              ___fltol@sign1 0035  
                    _ADCS0 7E00                      _ADCS1 7E01                      _ADCS2 7E02  
                    ?_main 0001               ?_read_ds1307 0001                      _ACKEN 7E2C  
                    _ACKDT 7E2D             ??_display_time 0006                      _BCLIF 7D0B  
          __end_of___fldiv 0A7C                      _ACQT0 7E03                      _ACQT1 7E04  
                    _ACQT2 7E05            __end_of___awdiv 1672                      STR_10 0634  
                    STR_11 0601                      STR_12 0612                      STR_20 0691  
                    STR_13 0623                      STR_21 0675                      STR_14 0645  
                    STR_22 069F                      STR_15 0666                      STR_16 06BB  
                    STR_17 06C4                      STR_18 0683                      STR_19 06AD  
          __end_of___awmod 17E0            __end_of___fltol 12F0                      _CMCON 0FB4  
          ___awdiv@divisor 0003                      _PCFG0 7E08                      _PCFG1 7E09  
                    _PCFG2 7E0A                      _PCFG3 7E0B            __end_of___lwdiv 19DE  
                    i2l240 1BB6               ?_init_config 0001            ___awdiv@counter 0005  
                    _VCFG0 7E0C                      _VCFG1 7E0D                      _PORTB 0F81  
                    _PORTD 0F83                      _TRISB 0F93                      _TRISC 0F94  
                    _TRISD 0F95                      _SSPIF 7CF3               ?_init_timer0 0001  
                    _blink 004A                      _uckey 009A                      _press 0042  
                    tablat 0FF5                      ttemp5 005E                      ttemp6 0061  
                    ttemp7 0065                      status 0FD8                      wtemp8 005E  
     __end_of_gear_monitor 14E8           init_ds1307@dummy 0004                 _i2c_no_ack 1E06  
          __initialization 1AB6             ?_i2c_rep_start 0001               __end_of_main 13F2  
         __end_of_i2c_idle 1D9C           __end_of_i2c_read 1DD4           __end_of_i2c_stop 1DEE  
  scrolllog@longPressTimer 0087                     ??_main 0037              __activetblptr 0002  
      __end_of_i2c_rx_mode 1E06                     _ADCON0 0FC2            ??_display_speed 0013  
          ??_display_times 0006                     _ADRESH 0FC4                     _ADRESL 0FC3  
                   _T08BIT 7EAE           ___awdiv@dividend 0001                     i2l2940 1B7E  
                   i2l2942 1BA6                     i2l2944 1BAE                     i2l2946 1BB4  
                   i2l2938 1B70               _write_ds1307 1CEC                     _TMR0IE 7F95  
                   _TMR0IF 7F92                     _TMR2IE 7CE9                     _TMR0ON 7EAF  
                   _TMR2ON 7E52                     _SSPADD 0FC8                     _TRISC3 7CA3  
                   _TRISC4 7CA4                     _TRISD7 7CAF                     _SSPBUF 0FC9  
         __end_of___xxtofl 11EA           __end_of_get_time 18F4                  ??___fldiv 001C  
                ??___awdiv 0005                  ??___awmod 000D                  ??___fltol 0031  
                ??___lwdiv 0005           __end_of_init_i2c 1D8A           __end_of_init_adc 1D28  
         __end_of_read_adc 1C38                     clear_0 1AFC                     clear_1 1B08  
         ___awdiv@quotient 0007                     _logout 008F            ___awmod@divisor 000B  
                   isa$std 0001           __end_of_scan_key 1870            ___awmod@counter 000D  
    gear_monitor@crashflag 0052               __pdataCOMRAM 0055               __mediumconst 0000  
         __end_of_timeleft 15AE                     tblptrh 0FF7                     tblptrl 0FF6  
                   tblptru 0FF8           __end_of_mystrcmp 1A4A               ___xxtofl@arg 0010  
             ___xxtofl@exp 000F               ___xxtofl@val 0006                 __accesstop 0060  
  __end_of__initialization 1B0E       __end_of_display_time 1DDE              ___rparam_used 0001  
               ___fltol@f1 002D            ??_i2c_rep_start 0001                ?_i2c_no_ack 0001  
           __pcstackCOMRAM 0001               __pidataBANK0 1CC8                _i2c_rx_mode 1DFE  
    gear_monitor@signindex 0053   scrolllog@longPressActive 004E          __end_of_i2c_start 1DF6  
        __end_of_i2c_write 1DC8                 __pbssBANK0 0083                  ?_i2c_idle 0001  
                ?_i2c_read 0001                  ?_i2c_stop 0001              logscreen@wait 0011  
               _clcd_print 1A4A                 _clcd_putch 1D5C                 _clcd_write 1C6C  
          read_ds1307@data 0003                    _CCP1CON 0FBD                    _ACKSTAT 7E2E  
 read_switches@ucdetection 0001                    _T2CKPS0 7E50                    _T2CKPS1 7E51  
                ?___xxtofl 0006               _gear_monitor 13F2                    _SSPCON1 0FC6  
                ?_get_time 0001              _read_switches 18F4                 ??_i2c_idle 0001  
               ??_i2c_read 0001                 ??_i2c_stop 0001                  ?_init_i2c 0001  
                ?_init_adc 0001                  ?_read_adc 0001        read_switches@uconce 005C  
                ?_scan_key 0001                    __Hparam 0000                    __Lparam 0000  
                ?_timeleft 0001                    ___fldiv 06E2                    ___awdiv 15AE  
                  ___awmod 1730                    ___fltol 11EA                    ___lwdiv 196A  
             __psmallconst 0600                  ?_mystrcmp 0001                    __pcinit 1AB6  
                  __ramtop 0600                    __ptext0 12F0                    __ptext1 0DBE  
                  __ptext2 18F4                    __ptext3 17E0                    __ptext4 1C02  
                  __ptext5 0A7C                    __ptext6 14E8                    __ptext7 15AE  
                  __ptext8 19DE                    __ptext9 1D28          __end_of_init_clcd 1730  
               ??___xxtofl 000A           ___awmod@dividend 0009     display_dashboard@uckey 0016  
           ?_read_switches 0001     display_dashboard@usads 0014          __end_of_logscreen 0DBE  
               ??_get_time 0004             __pintcode_body 1B6E                    _tryflag 0055  
     end_of_initialization 1B0E                 ??_init_i2c 0001                 ??_init_adc 0001  
            __Lmediumconst 0000                 ??_read_adc 0003                    int_func 1B6E  
               ??_scan_key 0001          __end_of_scrolllog 1036                ?_clcd_print 0003  
              ?_clcd_putch 000F                ?_clcd_write 0001                 ??_timeleft 0011  
                  postdec1 0FE5                    postdec2 0FDD                    postinc0 0FEE  
                  postinc1 0FE6                    postinc2 0FDE                 ??_mystrcmp 0005  
                _PORTBbits 0F81                  _PORTCbits 0F82                  _PORTDbits 0F83  
          read_adc@channel 0005                 _notpressed 007A               _display_time 1DD4  
            i2c_write@data 0001              ___xxtofl@sign 000E                  _TRISEbits 0F96  
              ___fldiv@grs 0027                ___fldiv@rem 0020      __end_of_display_speed 1B6E  
    __end_of_display_times 1DAE                 main@uc1Key 003B               ??_i2c_no_ack 0001  
             ?_i2c_rx_mode 0001              __pidataCOMRAM 1DDE        start_initialization 1AB6  
          ??_read_switches 0001                  _i2c_start 1DEE                __end_of_isr 1BBA  
                _i2c_write 1DBC         __end_of_i2c_no_ack 1E0C      __end_of_i2c_rep_start 1DFE  
            ??_init_ds1307 0004                __pdataBANK0 0060              ??_read_ds1307 0002  
            ??_init_config 0005                  ___fldiv@a 0018                  ___fldiv@b 0014  
            ??_init_timer0 0001                __pbssCOMRAM 003D                 ?_i2c_start 0001  
               ?_i2c_write 0001         display_speed@usadc 0011               logscreen@key 0013  
         ___lwdiv@dividend 0001                  __pintcode 0008                  _blinkflag 0048  
                 ?___fldiv 0014                   ?___awdiv 0001                   ?___awmod 0009  
                 ?___fltol 002D          _display_dashboard 1C38         read_ds1307@address 0002  
                 ?___lwdiv 0001                  _clock_reg 003D         ?_display_dashboard 0014  
              __smallconst 0600         read_switches@uckey 0051        __end_of_init_ds1307 1C02  
                _enterflag 0046        ??_display_dashboard 0016        __end_of_read_ds1307 1CC8  
        gear_monitor@uckey 0013           ___lwdiv@quotient 0005                  _init_clcd 1672  
      __end_of_init_config 1D42              ?_write_ds1307 0002        __end_of_init_timer0 1D5C  
                _logscreen 0A7C               ??_clcd_print 0006               ??_clcd_putch 0010  
             ??_clcd_write 0002                   i2u225_40 1B7E                   i2u225_41 1B7A  
                 i2u226_40 1BA6                   i2u226_41 1BA2  __end_of_display_dashboard 1C6C  
                _signature 0060                  _scrolling 0070                  _scrolllog 0DBE  
              _compareflag 0044      clcd_write@control_bit 0001                  main@ucKey 003C  
                main@usAdc 0039                ??_i2c_start 0001         __end_of_clcd_print 1AB6  
              ??_i2c_write 0001         __end_of_clcd_putch 1D74         __end_of_clcd_write 1C9E  
               ?_init_clcd 0001                  copy_data0 1ACA                  copy_data1 1AEA  
           ??_write_ds1307 0003                _controlflag 0059                   _i2c_idle 1D8A  
                 _i2c_read 1DC8                   _i2c_stop 1DE6                 ?_logscreen 0001  
                 __Hrparam 0000                   __Lrparam 0000                 ?_scrolllog 0011  
              _init_ds1307 1BBA                _read_ds1307 1C9E                _init_config 1D28  
                 ___xxtofl 1036                 mystrcmp@s1 0001                 mystrcmp@s2 0003  
      write_ds1307@address 0003                _init_timer0 1D42              scrolllog@keys 0011  
          ___lwdiv@divisor 0003            ___lwdiv@counter 0007                   __ptext10 1D42  
                 __ptext11 1DAE                   __ptext20 1870                   __ptext12 1D74  
                 __ptext21 1C9E                   __ptext13 1BBA                   __ptext30 1D9C  
                 __ptext22 1DBC                   __ptext14 1CEC                   __ptext31 1A4A  
                 __ptext23 1DE6                   __ptext15 1672                   __ptext32 1B1C  
                 __ptext24 1DEE                   __ptext16 1D0A                   __ptext33 1D5C  
                 __ptext25 1DF6                   __ptext17 1C38                   __ptext34 1C6C  
                 __ptext26 1DC8                   __ptext18 13F2                   __ptext35 196A  
                 __ptext27 1DFE                   __ptext19 1DD4                   __ptext36 1730  
                 __ptext28 1D8A                   __ptext37 1036                   __ptext29 1E06  
                 __ptext38 11EA                   __ptext39 06E2                   _get_time 1870  
                 _init_i2c 1D74                   _init_adc 1D0A                   _read_adc 1C02  
                 _scan_key 17E0                   isa$xinst 0000                   _timeleft 14E8  
                 int$flags 005D                   _mystrcmp 19DE              ?_gear_monitor 0001  
                 isr@count 004C                ??_init_clcd 0003      __end_of_read_switches 196A  
                 intlevel2 0000                  mystrcmp@i 0007               scrolllog@key 0014  
             scrolllog@out 0040                ??_logscreen 0011                ??_scrolllog 0012  
     __end_of_write_ds1307 1D0A             ??_gear_monitor 0011           write_ds1307@data 0002  
            _display_speed 1B1C              _display_times 1D9C  

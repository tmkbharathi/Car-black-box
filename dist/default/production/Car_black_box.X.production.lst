

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jan 05 17:30:55 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Version 2.20
    77                           ; Generated 12/02/2020 GMT
    78                           ; 
    79                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F4580 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataCOMRAM
   112   00217E                     __pidataCOMRAM:
   113                           	callstack 0
   114                           
   115                           ;initializer for _sec
   116   00217E  000A               	dw	10
   117                           
   118                           ;initializer for _controlflag
   119   002180  0001               	dw	1
   120                           
   121                           ;initializer for download_log@k
   122   002182  05                 	db	5
   123                           
   124                           ;initializer for scrolllog@prevkey
   125   002183  FF                 	db	255
   126                           
   127                           ;initializer for _logpos
   128   002184  FF                 	db	255
   129                           
   130                           ;initializer for read_switches@uconce
   131   002185  01                 	db	1
   132                           
   133                           ;initializer for gear_monitor@prekey
   134   002186  FF                 	db	255
   135                           
   136                           	psect	idataBANK0
   137   00205A                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _signature
   141   00205A  F9                 	db	low STR_2
   142   00205B  2F                 	db	high STR_2
   143   00205C  F6                 	db	low STR_3
   144   00205D  2F                 	db	high STR_3
   145   00205E  EA                 	db	low STR_4
   146   00205F  2F                 	db	high STR_4
   147   002060  ED                 	db	low STR_5
   148   002061  2F                 	db	high STR_5
   149   002062  F0                 	db	low STR_6
   150   002063  2F                 	db	high STR_6
   151   002064  F3                 	db	low STR_7
   152   002065  2F                 	db	high STR_7
   153   002066  FC                 	db	low STR_8
   154   002067  2F                 	db	high STR_8
   155   002068  E7                 	db	low STR_9
   156   002069  2F                 	db	high STR_9
   157                           
   158                           ;initializer for _scrolling
   159   00206A  93                 	db	low STR_26
   160   00206B  2F                 	db	high STR_26
   161   00206C  BD                 	db	low STR_27
   162   00206D  2F                 	db	high STR_27
   163   00206E  A1                 	db	low STR_28
   164   00206F  2F                 	db	high STR_28
   165   002070  85                 	db	low STR_29
   166   002071  2F                 	db	high STR_29
   167   002072  AF                 	db	low STR_30
   168   002073  2F                 	db	high STR_30
   169                           
   170                           ;initializer for _notpressed
   171   002074  2710               	dw	10000
   172   002076  0000               	dw	0
   173                           
   174                           ;initializer for _tryflag
   175   002078  0003               	dw	3
   176   000000                     _TMR0	set	4054
   177   000000                     _TXREG	set	4013
   178   000000                     _RCREG	set	4014
   179   000000                     _SPBRG	set	4015
   180   000000                     _SSPBUF	set	4041
   181   000000                     _SSPADD	set	4040
   182   000000                     _SSPCON1	set	4038
   183   000000                     _ADRESH	set	4036
   184   000000                     _ADRESL	set	4035
   185   000000                     _ACKSTAT	set	32302
   186   000000                     _CKE	set	32318
   187   000000                     _T2CKPS0	set	32336
   188   000000                     _TMR0ON	set	32431
   189   000000                     _RBPU	set	32655
   190   000000                     _PORTBbits	set	3969
   191   000000                     _TRISD	set	3989
   192   000000                     _PORTDbits	set	3971
   193   000000                     _ADCON0	set	4034
   194   000000                     _RCIF	set	31989
   195   000000                     _TXIF	set	31988
   196   000000                     _RCIE	set	31981
   197   000000                     _TXIE	set	31980
   198   000000                     _SENDB	set	32099
   199   000000                     _CREN	set	32092
   200   000000                     _RX9	set	32094
   201   000000                     _BRGH	set	32098
   202   000000                     _SYNC	set	32100
   203   000000                     _TXEN	set	32101
   204   000000                     _TRISC7	set	31911
   205   000000                     _TRISC6	set	31910
   206   000000                     _ACKEN	set	32300
   207   000000                     _ACKDT	set	32301
   208   000000                     _RCEN	set	32299
   209   000000                     _RSEN	set	32297
   210   000000                     _PEN	set	32298
   211   000000                     _SEN	set	32296
   212   000000                     _SMP	set	32319
   213   000000                     _TRISC4	set	31908
   214   000000                     _TRISC3	set	31907
   215   000000                     _TMR2ON	set	32338
   216   000000                     _T2CKPS1	set	32337
   217   000000                     _PSA	set	32427
   218   000000                     _T0CS	set	32429
   219   000000                     _T08BIT	set	32430
   220   000000                     _TMR0IE	set	32661
   221   000000                     _PEIE	set	32662
   222   000000                     _GIE	set	32663
   223   000000                     _GO	set	32273
   224   000000                     _ADFM	set	32263
   225   000000                     _ADCS0	set	32256
   226   000000                     _ADCS1	set	32257
   227   000000                     _ADCS2	set	32258
   228   000000                     _ACQT0	set	32259
   229   000000                     _ACQT1	set	32260
   230   000000                     _PCFG0	set	32264
   231   000000                     _PCFG1	set	32265
   232   000000                     _PCFG2	set	32266
   233   000000                     _PCFG3	set	32267
   234   000000                     _VCFG0	set	32268
   235   000000                     _PORTB	set	3969
   236   000000                     _PORTCbits	set	3970
   237   000000                     _ACQT2	set	32261
   238   000000                     _VCFG1	set	32269
   239   000000                     _ADON	set	32272
   240   000000                     _TRISB	set	3987
   241   000000                     _TRISC	set	3988
   242   000000                     _PORTD	set	3971
   243   000000                     _TRISD7	set	31919
   244   000000                     _CMCON	set	4020
   245   000000                     _TRISEbits	set	3990
   246   000000                     _ECCP1CONbits	set	4026
   247   000000                     _TMR2IE	set	31977
   248   000000                     _CCP1CON	set	4029
   249   000000                     _BRG16	set	32195
   250   000000                     _TMR0IF	set	32658
   251   000000                     _PR2	set	4043
   252   000000                     _BCLIF	set	32011
   253   000000                     _SSPIF	set	31987
   254   000000                     _SPEN	set	32095
   255   000000                     _TX9	set	32102
   256                           
   257                           	psect	mediumconst
   258   002E78                     __pmediumconst:
   259                           	callstack 0
   260   002E78  00                 	db	0
   261   002E79                     STR_32:
   262   002E79  44                 	db	68	;'D'
   263   002E7A  6F                 	db	111	;'o'
   264   002E7B  77                 	db	119	;'w'
   265   002E7C  6E                 	db	110	;'n'
   266   002E7D  6C                 	db	108	;'l'
   267   002E7E  6F                 	db	111	;'o'
   268   002E7F  61                 	db	97	;'a'
   269   002E80  64                 	db	100	;'d'
   270   002E81  69                 	db	105	;'i'
   271   002E82  6E                 	db	110	;'n'
   272   002E83  67                 	db	103	;'g'
   273   002E84  20                 	db	32
   274   002E85  6C                 	db	108	;'l'
   275   002E86  6F                 	db	111	;'o'
   276   002E87  67                 	db	103	;'g'
   277   002E88  73                 	db	115	;'s'
   278   002E89  20                 	db	32
   279   002E8A  2E                 	db	46
   280   002E8B  2E                 	db	46
   281   002E8C  00                 	db	0
   282   002E8D                     STR_19:
   283   002E8D  63                 	db	99	;'c'
   284   002E8E  68                 	db	104	;'h'
   285   002E8F  61                 	db	97	;'a'
   286   002E90  6E                 	db	110	;'n'
   287   002E91  67                 	db	103	;'g'
   288   002E92  69                 	db	105	;'i'
   289   002E93  6E                 	db	110	;'n'
   290   002E94  67                 	db	103	;'g'
   291   002E95  20                 	db	32
   292   002E96  70                 	db	112	;'p'
   293   002E97  61                 	db	97	;'a'
   294   002E98  73                 	db	115	;'s'
   295   002E99  73                 	db	115	;'s'
   296   002E9A  77                 	db	119	;'w'
   297   002E9B  6F                 	db	111	;'o'
   298   002E9C  72                 	db	114	;'r'
   299   002E9D  64                 	db	100	;'d'
   300   002E9E  00                 	db	0
   301   002E9F                     STR_1:
   302   002E9F  43                 	db	67	;'C'
   303   002EA0  6F                 	db	111	;'o'
   304   002EA1  6E                 	db	110	;'n'
   305   002EA2  74                 	db	116	;'t'
   306   002EA3  72                 	db	114	;'r'
   307   002EA4  6F                 	db	111	;'o'
   308   002EA5  6C                 	db	108	;'l'
   309   002EA6  20                 	db	32
   310   002EA7  66                 	db	102	;'f'
   311   002EA8  6C                 	db	108	;'l'
   312   002EA9  61                 	db	97	;'a'
   313   002EAA  67                 	db	103	;'g'
   314   002EAB  20                 	db	32
   315   002EAC  6D                 	db	109	;'m'
   316   002EAD  69                 	db	105	;'i'
   317   002EAE  73                 	db	115	;'s'
   318   002EAF  73                 	db	115	;'s'
   319   002EB0  00                 	db	0
   320   002EB1                     STR_12:
   321   002EB1  20                 	db	32
   322   002EB2  20                 	db	32
   323   002EB3  43                 	db	67	;'C'
   324   002EB4  6F                 	db	111	;'o'
   325   002EB5  64                 	db	100	;'d'
   326   002EB6  65                 	db	101	;'e'
   327   002EB7  20                 	db	32
   328   002EB8  50                 	db	80	;'P'
   329   002EB9  61                 	db	97	;'a'
   330   002EBA  73                 	db	115	;'s'
   331   002EBB  73                 	db	115	;'s'
   332   002EBC  65                 	db	101	;'e'
   333   002EBD  64                 	db	100	;'d'
   334   002EBE  20                 	db	32
   335   002EBF  20                 	db	32
   336   002EC0  20                 	db	32
   337   002EC1  00                 	db	0
   338   002EC2                     STR_24:
   339   002EC2  20                 	db	32
   340   002EC3  20                 	db	32
   341   002EC4  50                 	db	80	;'P'
   342   002EC5  61                 	db	97	;'a'
   343   002EC6  73                 	db	115	;'s'
   344   002EC7  73                 	db	115	;'s'
   345   002EC8  20                 	db	32
   346   002EC9  43                 	db	67	;'C'
   347   002ECA  68                 	db	104	;'h'
   348   002ECB  61                 	db	97	;'a'
   349   002ECC  6E                 	db	110	;'n'
   350   002ECD  67                 	db	103	;'g'
   351   002ECE  65                 	db	101	;'e'
   352   002ECF  64                 	db	100	;'d'
   353   002ED0  20                 	db	32
   354   002ED1  20                 	db	32
   355   002ED2  00                 	db	0
   356   002ED3                     STR_13:
   357   002ED3  20                 	db	32
   358   002ED4  43                 	db	67	;'C'
   359   002ED5  61                 	db	97	;'a'
   360   002ED6  72                 	db	114	;'r'
   361   002ED7  20                 	db	32
   362   002ED8  42                 	db	66	;'B'
   363   002ED9  6C                 	db	108	;'l'
   364   002EDA  61                 	db	97	;'a'
   365   002EDB  63                 	db	99	;'c'
   366   002EDC  6B                 	db	107	;'k'
   367   002EDD  20                 	db	32
   368   002EDE  42                 	db	66	;'B'
   369   002EDF  6F                 	db	111	;'o'
   370   002EE0  78                 	db	120	;'x'
   371   002EE1  20                 	db	32
   372   002EE2  20                 	db	32
   373   002EE3  00                 	db	0
   374   002EE4                     STR_25:
   375   002EE4  20                 	db	32
   376   002EE5  20                 	db	32
   377   002EE6  53                 	db	83	;'S'
   378   002EE7  75                 	db	117	;'u'
   379   002EE8  63                 	db	99	;'c'
   380   002EE9  63                 	db	99	;'c'
   381   002EEA  65                 	db	101	;'e'
   382   002EEB  73                 	db	115	;'s'
   383   002EEC  73                 	db	115	;'s'
   384   002EED  66                 	db	102	;'f'
   385   002EEE  75                 	db	117	;'u'
   386   002EEF  6C                 	db	108	;'l'
   387   002EF0  6C                 	db	108	;'l'
   388   002EF1  79                 	db	121	;'y'
   389   002EF2  20                 	db	32
   390   002EF3  20                 	db	32
   391   002EF4  00                 	db	0
   392   002EF5                     STR_14:
   393   002EF5  20                 	db	32
   394   002EF6  57                 	db	87	;'W'
   395   002EF7  72                 	db	114	;'r'
   396   002EF8  6F                 	db	111	;'o'
   397   002EF9  6E                 	db	110	;'n'
   398   002EFA  67                 	db	103	;'g'
   399   002EFB  20                 	db	32
   400   002EFC  50                 	db	80	;'P'
   401   002EFD  61                 	db	97	;'a'
   402   002EFE  73                 	db	115	;'s'
   403   002EFF  73                 	db	115	;'s'
   404   002F00  77                 	db	119	;'w'
   405   002F01  6F                 	db	111	;'o'
   406   002F02  72                 	db	114	;'r'
   407   002F03  64                 	db	100	;'d'
   408   002F04  20                 	db	32
   409   002F05  00                 	db	0
   410   002F06                     STR_11:
   411   002F06  20                 	db	32
   412   002F07  45                 	db	69	;'E'
   413   002F08  6E                 	db	110	;'n'
   414   002F09  74                 	db	116	;'t'
   415   002F0A  65                 	db	101	;'e'
   416   002F0B  72                 	db	114	;'r'
   417   002F0C  20                 	db	32
   418   002F0D  50                 	db	80	;'P'
   419   002F0E  61                 	db	97	;'a'
   420   002F0F  73                 	db	115	;'s'
   421   002F10  73                 	db	115	;'s'
   422   002F11  77                 	db	119	;'w'
   423   002F12  6F                 	db	111	;'o'
   424   002F13  72                 	db	114	;'r'
   425   002F14  64                 	db	100	;'d'
   426   002F15  20                 	db	32
   427   002F16  00                 	db	0
   428   002F17                     STR_15:
   429   002F17  20                 	db	32
   430   002F18  61                 	db	97	;'a'
   431   002F19  74                 	db	116	;'t'
   432   002F1A  74                 	db	116	;'t'
   433   002F1B  65                 	db	101	;'e'
   434   002F1C  6D                 	db	109	;'m'
   435   002F1D  70                 	db	112	;'p'
   436   002F1E  74                 	db	116	;'t'
   437   002F1F  20                 	db	32
   438   002F20  52                 	db	82	;'R'
   439   002F21  65                 	db	101	;'e'
   440   002F22  6D                 	db	109	;'m'
   441   002F23  61                 	db	97	;'a'
   442   002F24  69                 	db	105	;'i'
   443   002F25  6E                 	db	110	;'n'
   444   002F26  73                 	db	115	;'s'
   445   002F27  00                 	db	0
   446   002F28                     STR_21:
   447   002F28  50                 	db	80	;'P'
   448   002F29  61                 	db	97	;'a'
   449   002F2A  73                 	db	115	;'s'
   450   002F2B  73                 	db	115	;'s'
   451   002F2C  77                 	db	119	;'w'
   452   002F2D  6F                 	db	111	;'o'
   453   002F2E  72                 	db	114	;'r'
   454   002F2F  64                 	db	100	;'d'
   455   002F30  20                 	db	32
   456   002F31  43                 	db	67	;'C'
   457   002F32  6F                 	db	111	;'o'
   458   002F33  72                 	db	114	;'r'
   459   002F34  72                 	db	114	;'r'
   460   002F35  65                 	db	101	;'e'
   461   002F36  63                 	db	99	;'c'
   462   002F37  74                 	db	116	;'t'
   463   002F38  00                 	db	0
   464   002F39                     STR_10:
   465   002F39  20                 	db	32
   466   002F3A  20                 	db	32
   467   002F3B  20                 	db	32
   468   002F3C  54                 	db	84	;'T'
   469   002F3D  69                 	db	105	;'i'
   470   002F3E  6D                 	db	109	;'m'
   471   002F3F  65                 	db	101	;'e'
   472   002F40  20                 	db	32
   473   002F41  20                 	db	32
   474   002F42  20                 	db	32
   475   002F43  20                 	db	32
   476   002F44  45                 	db	69	;'E'
   477   002F45  20                 	db	32
   478   002F46  20                 	db	32
   479   002F47  53                 	db	83	;'S'
   480   002F48  00                 	db	0
   481   002F49                     STR_22:
   482   002F49  0A                 	db	10
   483   002F4A  20                 	db	32
   484   002F4B  4E                 	db	78	;'N'
   485   002F4C  65                 	db	101	;'e'
   486   002F4D  77                 	db	119	;'w'
   487   002F4E  20                 	db	32
   488   002F4F  50                 	db	80	;'P'
   489   002F50  61                 	db	97	;'a'
   490   002F51  73                 	db	115	;'s'
   491   002F52  73                 	db	115	;'s'
   492   002F53  77                 	db	119	;'w'
   493   002F54  6F                 	db	111	;'o'
   494   002F55  72                 	db	114	;'r'
   495   002F56  64                 	db	100	;'d'
   496   002F57  00                 	db	0
   497   002F58                     STR_23:
   498   002F58  52                 	db	82	;'R'
   499   002F59  45                 	db	69	;'E'
   500   002F5A  2D                 	db	45
   501   002F5B  45                 	db	69	;'E'
   502   002F5C  6E                 	db	110	;'n'
   503   002F5D  74                 	db	116	;'t'
   504   002F5E  65                 	db	101	;'e'
   505   002F5F  72                 	db	114	;'r'
   506   002F60  20                 	db	32
   507   002F61  20                 	db	32
   508   002F62  50                 	db	80	;'P'
   509   002F63  61                 	db	97	;'a'
   510   002F64  73                 	db	115	;'s'
   511   002F65  73                 	db	115	;'s'
   512   002F66  00                 	db	0
   513   002F67                     STR_20:
   514   002F67  0A                 	db	10
   515   002F68  20                 	db	32
   516   002F69  63                 	db	99	;'c'
   517   002F6A  75                 	db	117	;'u'
   518   002F6B  72                 	db	114	;'r'
   519   002F6C  72                 	db	114	;'r'
   520   002F6D  65                 	db	101	;'e'
   521   002F6E  6E                 	db	110	;'n'
   522   002F6F  74                 	db	116	;'t'
   523   002F70  20                 	db	32
   524   002F71  50                 	db	80	;'P'
   525   002F72  61                 	db	97	;'a'
   526   002F73  73                 	db	115	;'s'
   527   002F74  73                 	db	115	;'s'
   528   002F75  00                 	db	0
   529   002F76                     STR_16:
   530   002F76  54                 	db	84	;'T'
   531   002F77  72                 	db	114	;'r'
   532   002F78  79                 	db	121	;'y'
   533   002F79  20                 	db	32
   534   002F7A  41                 	db	65	;'A'
   535   002F7B  67                 	db	103	;'g'
   536   002F7C  61                 	db	97	;'a'
   537   002F7D  69                 	db	105	;'i'
   538   002F7E  6E                 	db	110	;'n'
   539   002F7F  20                 	db	32
   540   002F80  6C                 	db	108	;'l'
   541   002F81  65                 	db	101	;'e'
   542   002F82  66                 	db	102	;'f'
   543   002F83  74                 	db	116	;'t'
   544   002F84  00                 	db	0
   545   002F85                     STR_29:
   546   002F85  53                 	db	83	;'S'
   547   002F86  65                 	db	101	;'e'
   548   002F87  74                 	db	116	;'t'
   549   002F88  20                 	db	32
   550   002F89  74                 	db	116	;'t'
   551   002F8A  69                 	db	105	;'i'
   552   002F8B  6D                 	db	109	;'m'
   553   002F8C  65                 	db	101	;'e'
   554   002F8D  20                 	db	32
   555   002F8E  20                 	db	32
   556   002F8F  20                 	db	32
   557   002F90  20                 	db	32
   558   002F91  20                 	db	32
   559   002F92  00                 	db	0
   560   002F93                     STR_26:
   561   002F93  56                 	db	86	;'V'
   562   002F94  69                 	db	105	;'i'
   563   002F95  65                 	db	101	;'e'
   564   002F96  77                 	db	119	;'w'
   565   002F97  20                 	db	32
   566   002F98  6C                 	db	108	;'l'
   567   002F99  6F                 	db	111	;'o'
   568   002F9A  67                 	db	103	;'g'
   569   002F9B  20                 	db	32
   570   002F9C  20                 	db	32
   571   002F9D  20                 	db	32
   572   002F9E  20                 	db	32
   573   002F9F  20                 	db	32
   574   002FA0  00                 	db	0
   575   002FA1                     STR_28:
   576   002FA1  43                 	db	67	;'C'
   577   002FA2  6C                 	db	108	;'l'
   578   002FA3  65                 	db	101	;'e'
   579   002FA4  61                 	db	97	;'a'
   580   002FA5  72                 	db	114	;'r'
   581   002FA6  20                 	db	32
   582   002FA7  6C                 	db	108	;'l'
   583   002FA8  6F                 	db	111	;'o'
   584   002FA9  67                 	db	103	;'g'
   585   002FAA  20                 	db	32
   586   002FAB  20                 	db	32
   587   002FAC  20                 	db	32
   588   002FAD  20                 	db	32
   589   002FAE  00                 	db	0
   590   002FAF                     STR_30:
   591   002FAF  43                 	db	67	;'C'
   592   002FB0  68                 	db	104	;'h'
   593   002FB1  61                 	db	97	;'a'
   594   002FB2  6E                 	db	110	;'n'
   595   002FB3  67                 	db	103	;'g'
   596   002FB4  65                 	db	101	;'e'
   597   002FB5  20                 	db	32
   598   002FB6  50                 	db	80	;'P'
   599   002FB7  61                 	db	97	;'a'
   600   002FB8  73                 	db	115	;'s'
   601   002FB9  73                 	db	115	;'s'
   602   002FBA  20                 	db	32
   603   002FBB  20                 	db	32
   604   002FBC  00                 	db	0
   605   002FBD                     STR_27:
   606   002FBD  44                 	db	68	;'D'
   607   002FBE  6F                 	db	111	;'o'
   608   002FBF  77                 	db	119	;'w'
   609   002FC0  6E                 	db	110	;'n'
   610   002FC1  6C                 	db	108	;'l'
   611   002FC2  6F                 	db	111	;'o'
   612   002FC3  61                 	db	97	;'a'
   613   002FC4  64                 	db	100	;'d'
   614   002FC5  20                 	db	32
   615   002FC6  6C                 	db	108	;'l'
   616   002FC7  6F                 	db	111	;'o'
   617   002FC8  67                 	db	103	;'g'
   618   002FC9  20                 	db	32
   619   002FCA  00                 	db	0
   620   002FCB                     STR_31:
   621   002FCB  43                 	db	67	;'C'
   622   002FCC  6C                 	db	108	;'l'
   623   002FCD  65                 	db	101	;'e'
   624   002FCE  61                 	db	97	;'a'
   625   002FCF  72                 	db	114	;'r'
   626   002FD0  69                 	db	105	;'i'
   627   002FD1  6E                 	db	110	;'n'
   628   002FD2  67                 	db	103	;'g'
   629   002FD3  20                 	db	32
   630   002FD4  6C                 	db	108	;'l'
   631   002FD5  6F                 	db	111	;'o'
   632   002FD6  67                 	db	103	;'g'
   633   002FD7  73                 	db	115	;'s'
   634   002FD8  00                 	db	0
   635   002FD9                     STR_17:
   636   002FD9  57                 	db	87	;'W'
   637   002FDA  61                 	db	97	;'a'
   638   002FDB  69                 	db	105	;'i'
   639   002FDC  74                 	db	116	;'t'
   640   002FDD  20                 	db	32
   641   002FDE  66                 	db	102	;'f'
   642   002FDF  6F                 	db	111	;'o'
   643   002FE0  72                 	db	114	;'r'
   644   002FE1  00                 	db	0
   645   002FE2                     STR_18:
   646   002FE2  20                 	db	32
   647   002FE3  73                 	db	115	;'s'
   648   002FE4  20                 	db	32
   649   002FE5  20                 	db	32
   650   002FE6  00                 	db	0
   651   002FE7                     STR_9:
   652   002FE7  43                 	db	67	;'C'
   653   002FE8  20                 	db	32
   654   002FE9  00                 	db	0
   655   002FEA                     STR_4:
   656   002FEA  47                 	db	71	;'G'
   657   002FEB  31                 	db	49	;'1'
   658   002FEC  00                 	db	0
   659   002FED                     STR_5:
   660   002FED  47                 	db	71	;'G'
   661   002FEE  32                 	db	50	;'2'
   662   002FEF  00                 	db	0
   663   002FF0                     STR_6:
   664   002FF0  47                 	db	71	;'G'
   665   002FF1  33                 	db	51	;'3'
   666   002FF2  00                 	db	0
   667   002FF3                     STR_7:
   668   002FF3  47                 	db	71	;'G'
   669   002FF4  34                 	db	52	;'4'
   670   002FF5  00                 	db	0
   671   002FF6                     STR_3:
   672   002FF6  47                 	db	71	;'G'
   673   002FF7  4E                 	db	78	;'N'
   674   002FF8  00                 	db	0
   675   002FF9                     STR_2:
   676   002FF9  4F                 	db	79	;'O'
   677   002FFA  4E                 	db	78	;'N'
   678   002FFB  00                 	db	0
   679   002FFC                     STR_8:
   680   002FFC  47                 	db	71	;'G'
   681   002FFD  52                 	db	82	;'R'
   682   002FFE  00                 	db	0
   683   002FFF  00                 	db	0	; dummy byte at the end
   684   000000                     
   685                           ; #config settings
   686                           
   687                           	psect	cinit
   688   001BBA                     __pcinit:
   689                           	callstack 0
   690   001BBA                     start_initialization:
   691                           	callstack 0
   692   001BBA                     __initialization:
   693                           	callstack 0
   694                           
   695                           ; Initialize objects allocated to BANK0 (32 bytes)
   696                           ; load TBLPTR registers with __pidataBANK0
   697   001BBA  0E5A               	movlw	low __pidataBANK0
   698   001BBC  6EF6               	movwf	tblptrl,c
   699   001BBE  0E20               	movlw	high __pidataBANK0
   700   001BC0  6EF7               	movwf	tblptrh,c
   701   001BC2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   702   001BC4  6EF8               	movwf	tblptru,c
   703   001BC6  EE00  F0B0         	lfsr	0,__pdataBANK0
   704   001BCA  EE10 F020          	lfsr	1,32
   705   001BCE                     copy_data0:
   706   001BCE  0009               	tblrd		*+
   707   001BD0  CFF5 FFEE          	movff	tablat,postinc0
   708   001BD4  50E5               	movf	postdec1,w,c
   709   001BD6  50E1               	movf	fsr1l,w,c
   710   001BD8  E1FA               	bnz	copy_data0
   711                           
   712                           ; Initialize objects allocated to COMRAM (9 bytes)
   713                           ; load TBLPTR registers with __pidataCOMRAM
   714   001BDA  0E7E               	movlw	low __pidataCOMRAM
   715   001BDC  6EF6               	movwf	tblptrl,c
   716   001BDE  0E21               	movlw	high __pidataCOMRAM
   717   001BE0  6EF7               	movwf	tblptrh,c
   718   001BE2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   719   001BE4  6EF8               	movwf	tblptru,c
   720   001BE6  EE00  F053         	lfsr	0,__pdataCOMRAM
   721   001BEA  EE10 F009          	lfsr	1,9
   722   001BEE                     copy_data1:
   723   001BEE  0009               	tblrd		*+
   724   001BF0  CFF5 FFEE          	movff	tablat,postinc0
   725   001BF4  50E5               	movf	postdec1,w,c
   726   001BF6  50E1               	movf	fsr1l,w,c
   727   001BF8  E1FA               	bnz	copy_data1
   728                           
   729                           ; Clear objects allocated to BANK1 (170 bytes)
   730   001BFA  EE01  F000         	lfsr	0,__pbssBANK1
   731   001BFE  0EAA               	movlw	170
   732   001C00                     clear_0:
   733   001C00  6AEE               	clrf	postinc0,c
   734   001C02  06E8               	decf	wreg,f,c
   735   001C04  E1FD               	bnz	clear_0
   736                           
   737                           ; Clear objects allocated to BANK0 (80 bytes)
   738   001C06  EE00  F060         	lfsr	0,__pbssBANK0
   739   001C0A  0E50               	movlw	80
   740   001C0C                     clear_1:
   741   001C0C  6AEE               	clrf	postinc0,c
   742   001C0E  06E8               	decf	wreg,f,c
   743   001C10  E1FD               	bnz	clear_1
   744                           
   745                           ; Clear objects allocated to COMRAM (15 bytes)
   746   001C12  EE00  F044         	lfsr	0,__pbssCOMRAM
   747   001C16  0E0F               	movlw	15
   748   001C18                     clear_2:
   749   001C18  6AEE               	clrf	postinc0,c
   750   001C1A  06E8               	decf	wreg,f,c
   751   001C1C  E1FD               	bnz	clear_2
   752   001C1E                     end_of_initialization:
   753                           	callstack 0
   754   001C1E                     __end_of__initialization:
   755                           	callstack 0
   756   001C1E  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   757   001C20  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   758   001C22  0E00               	movlw	low (__Lmediumconst shr (0+16))
   759   001C24  6EF8               	movwf	tblptru,c
   760   001C26  0100               	movlb	0
   761   001C28  EF07  F006         	goto	_main	;jump to C main() function
   762                           
   763                           	psect	bssCOMRAM
   764   000044                     __pbssCOMRAM:
   765                           	callstack 0
   766   000044                     _out:
   767                           	callstack 0
   768   000044                     	ds	2
   769   000046                     _eventcount:
   770                           	callstack 0
   771   000046                     	ds	2
   772   000048                     _blink:
   773                           	callstack 0
   774   000048                     	ds	2
   775   00004A                     view_log@vpos:
   776                           	callstack 0
   777   00004A                     	ds	1
   778   00004B                     _logg:
   779                           	callstack 0
   780   00004B                     	ds	1
   781   00004C                     change_pass@flag:
   782                           	callstack 0
   783   00004C                     	ds	1
   784   00004D                     change_pass@count:
   785                           	callstack 0
   786   00004D                     	ds	1
   787   00004E                     _i:
   788                           	callstack 0
   789   00004E                     	ds	1
   790   00004F                     read_switches@uckey:
   791                           	callstack 0
   792   00004F                     	ds	1
   793   000050                     gear_monitor@crashflag:
   794                           	callstack 0
   795   000050                     	ds	1
   796   000051                     _signindex:
   797                           	callstack 0
   798   000051                     	ds	1
   799   000052                     _firstrunflag:
   800                           	callstack 0
   801   000052                     	ds	1
   802                           
   803                           	psect	dataCOMRAM
   804   000053                     __pdataCOMRAM:
   805                           	callstack 0
   806   000053                     _sec:
   807                           	callstack 0
   808   000053                     	ds	2
   809   000055                     _controlflag:
   810                           	callstack 0
   811   000055                     	ds	2
   812   000057                     download_log@k:
   813                           	callstack 0
   814   000057                     	ds	1
   815   000058                     scrolllog@prevkey:
   816                           	callstack 0
   817   000058                     	ds	1
   818   000059                     _logpos:
   819                           	callstack 0
   820   000059                     	ds	1
   821   00005A                     read_switches@uconce:
   822                           	callstack 0
   823   00005A                     	ds	1
   824   00005B                     gear_monitor@prekey:
   825                           	callstack 0
   826   00005B                     	ds	1
   827                           
   828                           	psect	bssBANK0
   829   000060                     __pbssBANK0:
   830                           	callstack 0
   831   000060                     _log:
   832                           	callstack 0
   833   000060                     	ds	17
   834   000071                     set_time@draft:
   835                           	callstack 0
   836   000071                     	ds	9
   837   00007A                     _wait:
   838                           	callstack 0
   839   00007A                     	ds	4
   840   00007E                     gear_monitor@delay:
   841                           	callstack 0
   842   00007E                     	ds	4
   843   000082                     _clock_reg:
   844                           	callstack 0
   845   000082                     	ds	3
   846   000085                     _press:
   847                           	callstack 0
   848   000085                     	ds	2
   849   000087                     _compareflag:
   850                           	callstack 0
   851   000087                     	ds	2
   852   000089                     _enterflag:
   853                           	callstack 0
   854   000089                     	ds	2
   855   00008B                     _blinkflag:
   856                           	callstack 0
   857   00008B                     	ds	2
   858   00008D                     _min:
   859                           	callstack 0
   860   00008D                     	ds	2
   861   00008F                     isr@count:
   862                           	callstack 0
   863   00008F                     	ds	2
   864   000091                     _logout:
   865                           	callstack 0
   866   000091                     	ds	2
   867   000093                     _time:
   868                           	callstack 0
   869   000093                     	ds	9
   870   00009C                     change_pass@passcheck1:
   871                           	callstack 0
   872   00009C                     	ds	5
   873   0000A1                     change_pass@passcheck:
   874                           	callstack 0
   875   0000A1                     	ds	5
   876   0000A6                     _uckey:
   877                           	callstack 0
   878   0000A6                     	ds	5
   879   0000AB                     _pass:
   880                           	callstack 0
   881   0000AB                     	ds	5
   882                           
   883                           	psect	dataBANK0
   884   0000B0                     __pdataBANK0:
   885                           	callstack 0
   886   0000B0                     _signature:
   887                           	callstack 0
   888   0000B0                     	ds	16
   889   0000C0                     _scrolling:
   890                           	callstack 0
   891   0000C0                     	ds	10
   892   0000CA                     _notpressed:
   893                           	callstack 0
   894   0000CA                     	ds	4
   895   0000CE                     _tryflag:
   896                           	callstack 0
   897   0000CE                     	ds	2
   898                           
   899                           	psect	bssBANK1
   900   000100                     __pbssBANK1:
   901                           	callstack 0
   902   000100                     _eventdata:
   903                           	callstack 0
   904   000100                     	ds	170
   905                           
   906                           	psect	cstackCOMRAM
   907   000001                     __pcstackCOMRAM:
   908                           	callstack 0
   909   000001                     ?_read_adc:
   910                           	callstack 0
   911   000001                     ?_mystrcmp:
   912                           	callstack 0
   913   000001                     ?___wmul:
   914                           	callstack 0
   915   000001                     ?___awdiv:
   916                           	callstack 0
   917   000001                     ?___lwdiv:
   918                           	callstack 0
   919   000001                     gear_monitor@uckey:
   920                           	callstack 0
   921   000001                     clcd_write@control_bit:
   922                           	callstack 0
   923   000001                     read_switches@ucdetection:
   924                           	callstack 0
   925   000001                     i2c_write@data:
   926                           	callstack 0
   927   000001                     putch@data:
   928                           	callstack 0
   929   000001                     mystrcmp@s1:
   930                           	callstack 0
   931   000001                     ___wmul@multiplier:
   932                           	callstack 0
   933   000001                     ___awdiv@dividend:
   934                           	callstack 0
   935   000001                     ___lwdiv@dividend:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x0
   939   000001                     	ds	1
   940   000002                     clcd_write@byte:
   941                           	callstack 0
   942   000002                     write_ds1307@data:
   943                           	callstack 0
   944   000002                     read_ds1307@address:
   945                           	callstack 0
   946   000002                     write_external_eeprom@data:
   947                           	callstack 0
   948   000002                     read_external_eeprom@address:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x1
   952   000002                     	ds	1
   953   000003                     ??_init_clcd:
   954   000003                     ??_read_adc:
   955   000003                     write_ds1307@address:
   956                           	callstack 0
   957   000003                     read_ds1307@data:
   958                           	callstack 0
   959   000003                     read_external_eeprom@data:
   960                           	callstack 0
   961   000003                     clcd_print@data:
   962                           	callstack 0
   963   000003                     mystrcmp@s2:
   964                           	callstack 0
   965   000003                     write_external_eeprom@i:
   966                           	callstack 0
   967   000003                     ___wmul@multiplicand:
   968                           	callstack 0
   969   000003                     ___awdiv@divisor:
   970                           	callstack 0
   971   000003                     ___lwdiv@divisor:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x2
   975   000003                     	ds	1
   976   000004                     init_ds1307@dummy:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x3
   980   000004                     	ds	1
   981   000005                     read_adc@channel:
   982                           	callstack 0
   983   000005                     clcd_print@addr:
   984                           	callstack 0
   985   000005                     write_external_eeprom@address:
   986                           	callstack 0
   987   000005                     ___awdiv@counter:
   988                           	callstack 0
   989   000005                     ___wmul@product:
   990                           	callstack 0
   991   000005                     ___lwdiv@quotient:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x4
   995   000005                     	ds	1
   996   000006                     ?___xxtofl:
   997                           	callstack 0
   998   000006                     log_event@address:
   999                           	callstack 0
  1000   000006                     ___awdiv@sign:
  1001                           	callstack 0
  1002   000006                     ___xxtofl@val:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x5
  1006   000006                     	ds	1
  1007   000007                     ??_view_log:
  1008   000007                     ___lwdiv@counter:
  1009                           	callstack 0
  1010   000007                     mystrcmp@i:
  1011                           	callstack 0
  1012   000007                     log_event@i:
  1013                           	callstack 0
  1014   000007                     puts@data:
  1015                           	callstack 0
  1016   000007                     ___awdiv@quotient:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x6
  1020   000007                     	ds	1
  1021   000008                     ?___lwmod:
  1022                           	callstack 0
  1023   000008                     ___lwmod@dividend:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x7
  1027   000008                     	ds	1
  1028   000009                     ??_download_log:
  1029   000009                     ?___awmod:
  1030                           	callstack 0
  1031   000009                     view_log@address:
  1032                           	callstack 0
  1033   000009                     ___awmod@dividend:
  1034                           	callstack 0
  1035   000009                     change_pass@wait:
  1036                           	callstack 0
  1037                           
  1038                           ; 4 bytes @ 0x8
  1039   000009                     	ds	1
  1040   00000A                     ??___xxtofl:
  1041   00000A                     view_log@key:
  1042                           	callstack 0
  1043   00000A                     ___lwmod@divisor:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x9
  1047   00000A                     	ds	1
  1048   00000B                     view_log@j:
  1049                           	callstack 0
  1050   00000B                     download_log@j:
  1051                           	callstack 0
  1052   00000B                     ___awmod@divisor:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0xA
  1056   00000B                     	ds	1
  1057   00000C                     ___lwmod@counter:
  1058                           	callstack 0
  1059                           
  1060                           ; 1 bytes @ 0xB
  1061   00000C                     	ds	1
  1062   00000D                     ___awmod@counter:
  1063                           	callstack 0
  1064   00000D                     view_log@i:
  1065                           	callstack 0
  1066   00000D                     download_log@i:
  1067                           	callstack 0
  1068   00000D                     change_pass@wait_626:
  1069                           	callstack 0
  1070                           
  1071                           ; 4 bytes @ 0xC
  1072   00000D                     	ds	1
  1073   00000E                     ___awmod@sign:
  1074                           	callstack 0
  1075   00000E                     ___xxtofl@sign:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0xD
  1079   00000E                     	ds	1
  1080   00000F                     clcd_putch@addr:
  1081                           	callstack 0
  1082   00000F                     ___xxtofl@exp:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0xE
  1086   00000F                     	ds	1
  1087   000010                     clcd_putch@data:
  1088                           	callstack 0
  1089   000010                     ___xxtofl@arg:
  1090                           	callstack 0
  1091                           
  1092                           ; 4 bytes @ 0xF
  1093   000010                     	ds	1
  1094   000011                     ??_display_time:
  1095   000011                     ??_print:
  1096   000011                     display_speed@usadc:
  1097                           	callstack 0
  1098   000011                     logscreen@wait:
  1099                           	callstack 0
  1100   000011                     change_pass@wait_631:
  1101                           	callstack 0
  1102                           
  1103                           ; 4 bytes @ 0x10
  1104   000011                     	ds	2
  1105   000013                     logscreen@key:
  1106                           	callstack 0
  1107   000013                     print@key:
  1108                           	callstack 0
  1109   000013                     display_dashboard@usads:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x12
  1113   000013                     	ds	1
  1114   000014                     ??_scrolllog:
  1115   000014                     ?___fldiv:
  1116                           	callstack 0
  1117   000014                     ___fldiv@b:
  1118                           	callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x13
  1121   000014                     	ds	1
  1122   000015                     display_dashboard@uckey:
  1123                           	callstack 0
  1124   000015                     change_pass@ucKey:
  1125                           	callstack 0
  1126                           
  1127                           ; 1 bytes @ 0x14
  1128   000015                     	ds	1
  1129   000016                     scrolllog@k:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x15
  1133   000016                     	ds	1
  1134   000017                     scrolllog@key:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x16
  1138   000017                     	ds	1
  1139   000018                     ___fldiv@a:
  1140                           	callstack 0
  1141                           
  1142                           ; 4 bytes @ 0x17
  1143   000018                     	ds	4
  1144   00001C                     ??___fldiv:
  1145                           
  1146                           ; 1 bytes @ 0x1B
  1147   00001C                     	ds	4
  1148   000020                     ___fldiv@rem:
  1149                           	callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x1F
  1152   000020                     	ds	4
  1153   000024                     ___fldiv@sign:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x23
  1157   000024                     	ds	1
  1158   000025                     ___fldiv@new_exp:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x24
  1162   000025                     	ds	2
  1163   000027                     ___fldiv@grs:
  1164                           	callstack 0
  1165                           
  1166                           ; 4 bytes @ 0x26
  1167   000027                     	ds	4
  1168   00002B                     ___fldiv@bexp:
  1169                           	callstack 0
  1170                           
  1171                           ; 1 bytes @ 0x2A
  1172   00002B                     	ds	1
  1173   00002C                     ___fldiv@aexp:
  1174                           	callstack 0
  1175                           
  1176                           ; 1 bytes @ 0x2B
  1177   00002C                     	ds	1
  1178   00002D                     ?___fltol:
  1179                           	callstack 0
  1180   00002D                     ___fltol@f1:
  1181                           	callstack 0
  1182                           
  1183                           ; 4 bytes @ 0x2C
  1184   00002D                     	ds	4
  1185   000031                     ??___fltol:
  1186                           
  1187                           ; 1 bytes @ 0x30
  1188   000031                     	ds	4
  1189   000035                     ___fltol@sign1:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x34
  1193   000035                     	ds	1
  1194   000036                     ___fltol@exp1:
  1195                           	callstack 0
  1196                           
  1197                           ; 1 bytes @ 0x35
  1198   000036                     	ds	1
  1199   000037                     get_speed@adc:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x36
  1203   000037                     	ds	2
  1204   000039                     ??_getforstoreevent:
  1205                           
  1206                           ; 1 bytes @ 0x38
  1207   000039                     	ds	2
  1208   00003B                     getforstoreevent@i:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x3A
  1212   00003B                     	ds	2
  1213   00003D                     getforstoreevent@i_691:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x3C
  1217   00003D                     	ds	2
  1218   00003F                     ??_main:
  1219                           
  1220                           ; 1 bytes @ 0x3E
  1221   00003F                     	ds	2
  1222   000041                     main@usAdc:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x40
  1226   000041                     	ds	2
  1227   000043                     main@ucKey:
  1228                           	callstack 0
  1229                           
  1230                           ; 1 bytes @ 0x42
  1231   000043                     	ds	1
  1232                           
  1233 ;;
  1234 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1235 ;;
  1236 ;; *************** function _main *****************
  1237 ;; Defined at:
  1238 ;;		line 22 in file "main.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  usAdc           2   64[COMRAM] unsigned short 
  1243 ;;  ucKey           1   66[COMRAM] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1253 ;;      Params:         0       0       0       0       0       0       0
  1254 ;;      Locals:         3       0       0       0       0       0       0
  1255 ;;      Temps:          2       0       0       0       0       0       0
  1256 ;;      Totals:         5       0       0       0       0       0       0
  1257 ;;Total ram usage:        5 bytes
  1258 ;; Hardware stack levels required when called: 8
  1259 ;; This function calls:
  1260 ;;		___fldiv
  1261 ;;		___fltol
  1262 ;;		___xxtofl
  1263 ;;		_change_pass
  1264 ;;		_clcd_print
  1265 ;;		_display_dashboard
  1266 ;;		_download_log
  1267 ;;		_gear_monitor
  1268 ;;		_getforstoreevent
  1269 ;;		_init_config
  1270 ;;		_logscreen
  1271 ;;		_read_adc
  1272 ;;		_read_external_eeprom
  1273 ;;		_read_switches
  1274 ;;		_scrolllog
  1275 ;;		_set_time
  1276 ;;		_view_log
  1277 ;;		_write_external_eeprom
  1278 ;; This function is called by:
  1279 ;;		Startup code after reset
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text0
  1284   000C0E                     __ptext0:
  1285                           	callstack 0
  1286   000C0E                     _main:
  1287                           	callstack 23
  1288   000C0E                     
  1289                           ;main.c: 23:     init_config();
  1290   000C0E  EC69  F010         	call	_init_config	;wreg free
  1291                           
  1292                           ;main.c: 25:     write_external_eeprom(0x00,'0');
  1293   000C12  0E30               	movlw	48
  1294   000C14  6E02               	movwf	write_external_eeprom@data^0,c
  1295   000C16  0E00               	movlw	0
  1296   000C18  EC84  F00F         	call	_write_external_eeprom
  1297                           
  1298                           ;main.c: 26:     write_external_eeprom(0x01,'0');
  1299   000C1C  0E30               	movlw	48
  1300   000C1E  6E02               	movwf	write_external_eeprom@data^0,c
  1301   000C20  0E01               	movlw	1
  1302   000C22  EC84  F00F         	call	_write_external_eeprom
  1303                           
  1304                           ;main.c: 27:     write_external_eeprom(0x02,'0');
  1305   000C26  0E30               	movlw	48
  1306   000C28  6E02               	movwf	write_external_eeprom@data^0,c
  1307   000C2A  0E02               	movlw	2
  1308   000C2C  EC84  F00F         	call	_write_external_eeprom
  1309                           
  1310                           ;main.c: 28:     write_external_eeprom(0x03,'0');
  1311   000C30  0E30               	movlw	48
  1312   000C32  6E02               	movwf	write_external_eeprom@data^0,c
  1313   000C34  0E03               	movlw	3
  1314   000C36  EC84  F00F         	call	_write_external_eeprom
  1315   000C3A                     
  1316                           ;main.c: 29:     pass[4]='\0';
  1317   000C3A  0E00               	movlw	0
  1318   000C3C  0100               	movlb	0	; () banked
  1319   000C3E  6FAF               	movwf	(_pass+4)& (0+255),b
  1320   000C40                     
  1321                           ; BSR set to: 0
  1322                           ;main.c: 32:     pass[0]=read_external_eeprom(0x00);
  1323   000C40  0E00               	movlw	0
  1324   000C42  ECF0  F00F         	call	_read_external_eeprom
  1325   000C46  0100               	movlb	0	; () banked
  1326   000C48  6FAB               	movwf	_pass& (0+255),b
  1327   000C4A                     
  1328                           ; BSR set to: 0
  1329                           ;main.c: 33:     pass[1]=read_external_eeprom(0x01);
  1330   000C4A  0E01               	movlw	1
  1331   000C4C  ECF0  F00F         	call	_read_external_eeprom
  1332   000C50  0100               	movlb	0	; () banked
  1333   000C52  6FAC               	movwf	(_pass+1)& (0+255),b
  1334   000C54                     
  1335                           ; BSR set to: 0
  1336                           ;main.c: 34:     pass[2]=read_external_eeprom(0x02);
  1337   000C54  0E02               	movlw	2
  1338   000C56  ECF0  F00F         	call	_read_external_eeprom
  1339   000C5A  0100               	movlb	0	; () banked
  1340   000C5C  6FAD               	movwf	(_pass+2)& (0+255),b
  1341   000C5E                     
  1342                           ; BSR set to: 0
  1343                           ;main.c: 35:     pass[3]=read_external_eeprom(0x03);
  1344   000C5E  0E03               	movlw	3
  1345   000C60  ECF0  F00F         	call	_read_external_eeprom
  1346   000C64  0100               	movlb	0	; () banked
  1347   000C66  6FAE               	movwf	(_pass+3)& (0+255),b
  1348   000C68                     
  1349                           ; BSR set to: 0
  1350                           ;main.c: 36:     unsigned char ucKey;;main.c: 37:     unsigned short usAdc;;main.c: 38: 
      +                              getforstoreevent();
  1351   000C68  ECEE  F009         	call	_getforstoreevent	;wreg free
  1352   000C6C                     l3981:
  1353                           
  1354                           ;main.c: 40:         usAdc = (unsigned short)(read_adc(4)/10.33);
  1355   000C6C  0EAE               	movlw	174
  1356   000C6E  6E18               	movwf	___fldiv@a^0,c
  1357   000C70  0E47               	movlw	71
  1358   000C72  6E19               	movwf	(___fldiv@a+1)^0,c
  1359   000C74  0E25               	movlw	37
  1360   000C76  6E1A               	movwf	(___fldiv@a+2)^0,c
  1361   000C78  0E41               	movlw	65
  1362   000C7A  6E1B               	movwf	(___fldiv@a+3)^0,c
  1363   000C7C  0E04               	movlw	4
  1364   000C7E  ECA4  F00F         	call	_read_adc
  1365   000C82  C001  F006         	movff	?_read_adc,___xxtofl@val
  1366   000C86  C002  F007         	movff	?_read_adc+1,___xxtofl@val+1
  1367   000C8A  6A08               	clrf	(___xxtofl@val+2)^0,c
  1368   000C8C  6A09               	clrf	(___xxtofl@val+3)^0,c
  1369   000C8E  0E00               	movlw	0
  1370   000C90  ECE1  F006         	call	___xxtofl
  1371   000C94  C006  F014         	movff	?___xxtofl,___fldiv@b
  1372   000C98  C007  F015         	movff	?___xxtofl+1,___fldiv@b+1
  1373   000C9C  C008  F016         	movff	?___xxtofl+2,___fldiv@b+2
  1374   000CA0  C009  F017         	movff	?___xxtofl+3,___fldiv@b+3
  1375   000CA4  EC09  F000         	call	___fldiv	;wreg free
  1376   000CA8  C014  F02D         	movff	?___fldiv,___fltol@f1
  1377   000CAC  C015  F02E         	movff	?___fldiv+1,___fltol@f1+1
  1378   000CB0  C016  F02F         	movff	?___fldiv+2,___fltol@f1+2
  1379   000CB4  C017  F030         	movff	?___fldiv+3,___fltol@f1+3
  1380   000CB8  EC6B  F009         	call	___fltol	;wreg free
  1381   000CBC  C02D  F041         	movff	?___fltol,main@usAdc
  1382   000CC0  C02E  F042         	movff	?___fltol+1,main@usAdc+1
  1383   000CC4                     
  1384                           ;main.c: 41:         if(controlflag==0 || controlflag==2)
  1385   000CC4  5055               	movf	_controlflag^0,w,c
  1386   000CC6  1056               	iorwf	(_controlflag+1)^0,w,c
  1387   000CC8  B4D8               	btfsc	status,2,c
  1388   000CCA  EF69  F006         	goto	u3271
  1389   000CCE  EF6B  F006         	goto	u3270
  1390   000CD2                     u3271:
  1391   000CD2  EF75  F006         	goto	l3987
  1392   000CD6                     u3270:
  1393   000CD6  0E02               	movlw	2
  1394   000CD8  1855               	xorwf	_controlflag^0,w,c
  1395   000CDA  1056               	iorwf	(_controlflag+1)^0,w,c
  1396   000CDC  A4D8               	btfss	status,2,c
  1397   000CDE  EF73  F006         	goto	u3281
  1398   000CE2  EF75  F006         	goto	u3280
  1399   000CE6                     u3281:
  1400   000CE6  EF7B  F006         	goto	l3989
  1401   000CEA                     u3280:
  1402   000CEA                     l3987:
  1403                           
  1404                           ;main.c: 42:             ucKey = read_switches(1);
  1405   000CEA  0E01               	movlw	1
  1406   000CEC  EC68  F00D         	call	_read_switches
  1407   000CF0  6E43               	movwf	main@ucKey^0,c
  1408   000CF2  EFB5  F006         	goto	l4009
  1409   000CF6                     l3989:
  1410                           
  1411                           ;main.c: 44:         {;main.c: 45:             ucKey = read_switches(0);
  1412   000CF6  0E00               	movlw	0
  1413   000CF8  EC68  F00D         	call	_read_switches
  1414   000CFC  6E43               	movwf	main@ucKey^0,c
  1415                           
  1416                           ;main.c: 46:             gear_monitor(ucKey);
  1417   000CFE  5043               	movf	main@ucKey^0,w,c
  1418   000D00  ECBB  F007         	call	_gear_monitor
  1419   000D04  EFB5  F006         	goto	l4009
  1420   000D08                     l3991:
  1421                           
  1422                           ;main.c: 52:                 logscreen(ucKey);
  1423   000D08  5043               	movf	main@ucKey^0,w,c
  1424   000D0A  ECD6  F001         	call	_logscreen
  1425                           
  1426                           ;main.c: 53:                 break;
  1427   000D0E  EF36  F006         	goto	l3981
  1428   000D12                     l3993:
  1429                           
  1430                           ;main.c: 55:                 display_dashboard(ucKey, usAdc);
  1431   000D12  C041  F013         	movff	main@usAdc,display_dashboard@usads
  1432   000D16  C042  F014         	movff	main@usAdc+1,display_dashboard@usads+1
  1433   000D1A  5043               	movf	main@ucKey^0,w,c
  1434   000D1C  ECE5  F00E         	call	_display_dashboard
  1435                           
  1436                           ;main.c: 56:                 break;
  1437   000D20  EF36  F006         	goto	l3981
  1438   000D24                     l3995:
  1439                           
  1440                           ;main.c: 58:                 scrolllog(ucKey);
  1441   000D24  5043               	movf	main@ucKey^0,w,c
  1442   000D26  ECC8  F004         	call	_scrolllog
  1443                           
  1444                           ;main.c: 59:                 break;
  1445   000D2A  EF36  F006         	goto	l3981
  1446   000D2E                     l3997:
  1447                           
  1448                           ;main.c: 61:                 view_log(ucKey);
  1449   000D2E  5043               	movf	main@ucKey^0,w,c
  1450   000D30  ECE3  F008         	call	_view_log
  1451                           
  1452                           ;main.c: 62:                 break;
  1453   000D34  EF36  F006         	goto	l3981
  1454   000D38                     l3999:
  1455                           
  1456                           ;main.c: 64:                 change_pass(ucKey);
  1457   000D38  5043               	movf	main@ucKey^0,w,c
  1458   000D3A  EC7E  F003         	call	_change_pass
  1459                           
  1460                           ;main.c: 65:                 break;
  1461   000D3E  EF36  F006         	goto	l3981
  1462   000D42                     l4001:
  1463                           
  1464                           ;main.c: 67:                 download_log(ucKey);
  1465   000D42  5043               	movf	main@ucKey^0,w,c
  1466   000D44  ECC3  F00A         	call	_download_log
  1467                           
  1468                           ;main.c: 68:                 break;
  1469   000D48  EF36  F006         	goto	l3981
  1470   000D4C                     l4003:
  1471                           
  1472                           ;main.c: 70:                 set_time(ucKey);
  1473   000D4C  5043               	movf	main@ucKey^0,w,c
  1474   000D4E  ECC4  F010         	call	_set_time
  1475                           
  1476                           ;main.c: 71:                 break;
  1477   000D52  EF36  F006         	goto	l3981
  1478   000D56                     l4005:
  1479                           
  1480                           ;main.c: 73:                 clcd_print( (unsigned char*) "Control flag miss", (0x80 + (
      +                          0)));
  1481   000D56  0E9F               	movlw	low STR_1
  1482   000D58  6E03               	movwf	clcd_print@data^0,c
  1483   000D5A  0E2E               	movlw	high STR_1
  1484   000D5C  6E04               	movwf	(clcd_print@data+1)^0,c
  1485   000D5E  0E80               	movlw	128
  1486   000D60  6E05               	movwf	clcd_print@addr^0,c
  1487   000D62  EC4C  F00E         	call	_clcd_print	;wreg free
  1488                           
  1489                           ;main.c: 74:                 break;
  1490   000D66  EF36  F006         	goto	l3981
  1491   000D6A                     l4009:
  1492   000D6A  C055  F03F         	movff	_controlflag,??_main
  1493   000D6E  C056  F040         	movff	_controlflag+1,??_main+1
  1494                           
  1495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1496                           ; Switch size 1, requested type "simple"
  1497                           ; Number of cases is 1, Range of values is 0 to 0
  1498                           ; switch strategies available:
  1499                           ; Name         Instructions Cycles
  1500                           ; simple_byte            4     3 (average)
  1501                           ;	Chosen strategy is simple_byte
  1502   000D72  5040               	movf	(??_main+1)^0,w,c
  1503   000D74  0A00               	xorlw	0	; case 0
  1504   000D76  B4D8               	btfsc	status,2,c
  1505   000D78  EFC0  F006         	goto	l4051
  1506   000D7C  EFAB  F006         	goto	l4005
  1507   000D80                     l4051:
  1508                           
  1509                           ; Switch size 1, requested type "simple"
  1510                           ; Number of cases is 7, Range of values is 0 to 6
  1511                           ; switch strategies available:
  1512                           ; Name         Instructions Cycles
  1513                           ; simple_byte           22    12 (average)
  1514                           ;	Chosen strategy is simple_byte
  1515   000D80  503F               	movf	??_main^0,w,c
  1516   000D82  0A00               	xorlw	0	; case 0
  1517   000D84  B4D8               	btfsc	status,2,c
  1518   000D86  EF84  F006         	goto	l3991
  1519   000D8A  0A01               	xorlw	1	; case 1
  1520   000D8C  B4D8               	btfsc	status,2,c
  1521   000D8E  EF89  F006         	goto	l3993
  1522   000D92  0A03               	xorlw	3	; case 2
  1523   000D94  B4D8               	btfsc	status,2,c
  1524   000D96  EF9C  F006         	goto	l3999
  1525   000D9A  0A01               	xorlw	1	; case 3
  1526   000D9C  B4D8               	btfsc	status,2,c
  1527   000D9E  EF92  F006         	goto	l3995
  1528   000DA2  0A07               	xorlw	7	; case 4
  1529   000DA4  B4D8               	btfsc	status,2,c
  1530   000DA6  EF97  F006         	goto	l3997
  1531   000DAA  0A01               	xorlw	1	; case 5
  1532   000DAC  B4D8               	btfsc	status,2,c
  1533   000DAE  EFA1  F006         	goto	l4001
  1534   000DB2  0A03               	xorlw	3	; case 6
  1535   000DB4  B4D8               	btfsc	status,2,c
  1536   000DB6  EFA6  F006         	goto	l4003
  1537   000DBA  EFAB  F006         	goto	l4005
  1538   000DBE  EF07  F000         	goto	start
  1539   000DC2                     __end_of_main:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _view_log *****************
  1543 ;; Defined at:
  1544 ;;		line 149 in file "scrolldisplay.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  key             1    wreg     unsigned char 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  key             1    9[COMRAM] unsigned char 
  1549 ;;  i               2   12[COMRAM] int 
  1550 ;;  j               2   10[COMRAM] int 
  1551 ;;  address         1    8[COMRAM] unsigned char 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1561 ;;      Params:         0       0       0       0       0       0       0
  1562 ;;      Locals:         6       0       0       0       0       0       0
  1563 ;;      Temps:          2       0       0       0       0       0       0
  1564 ;;      Totals:         8       0       0       0       0       0       0
  1565 ;;Total ram usage:        8 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; Hardware stack levels required when called: 5
  1568 ;; This function calls:
  1569 ;;		___wmul
  1570 ;;		_clcd_print
  1571 ;;		_read_external_eeprom
  1572 ;; This function is called by:
  1573 ;;		_main
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text1
  1578   0011C6                     __ptext1:
  1579                           	callstack 0
  1580   0011C6                     _view_log:
  1581                           	callstack 25
  1582                           
  1583                           ;incstack = 0
  1584                           ;view_log@key stored from wreg
  1585   0011C6  6E0A               	movwf	view_log@key^0,c
  1586   0011C8                     
  1587                           ;scrolldisplay.c: 149:  void view_log(unsigned char key);scrolldisplay.c: 150: {;scrolld
      +                          isplay.c: 152:     static unsigned char vpos=0;;scrolldisplay.c: 153:     unsigned char 
      +                          address;;scrolldisplay.c: 154:     for(int j=0; j<10; j++)
  1588   0011C8  0E00               	movlw	0
  1589   0011CA  6E0C               	movwf	(view_log@j+1)^0,c
  1590   0011CC  0E00               	movlw	0
  1591   0011CE  6E0B               	movwf	view_log@j^0,c
  1592   0011D0                     l3819:
  1593                           
  1594                           ;scrolldisplay.c: 155:     {;scrolldisplay.c: 156:         address=(vpos*16)+5;
  1595   0011D0  504A               	movf	view_log@vpos^0,w,c
  1596   0011D2  0D10               	mullw	16
  1597   0011D4  50F3               	movf	243,w,c
  1598   0011D6  0F05               	addlw	5
  1599   0011D8  6E09               	movwf	view_log@address^0,c
  1600   0011DA                     
  1601                           ;scrolldisplay.c: 157:         for(int i=0;i<16;i++)
  1602   0011DA  0E00               	movlw	0
  1603   0011DC  6E0E               	movwf	(view_log@i+1)^0,c
  1604   0011DE  0E00               	movlw	0
  1605   0011E0  6E0D               	movwf	view_log@i^0,c
  1606   0011E2                     l3827:
  1607                           
  1608                           ;scrolldisplay.c: 158:         {;scrolldisplay.c: 159:             eventdata[j][i]= read
      +                          _external_eeprom(address + (unsigned char)i);
  1609   0011E2  C00B  F001         	movff	view_log@j,___wmul@multiplier
  1610   0011E6  C00C  F002         	movff	view_log@j+1,___wmul@multiplier+1
  1611   0011EA  0E00               	movlw	0
  1612   0011EC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1613   0011EE  0E11               	movlw	17
  1614   0011F0  6E03               	movwf	___wmul@multiplicand^0,c
  1615   0011F2  EC1A  F010         	call	___wmul	;wreg free
  1616   0011F6  0E00               	movlw	low _eventdata
  1617   0011F8  2401               	addwf	?___wmul^0,w,c
  1618   0011FA  6E07               	movwf	??_view_log^0,c
  1619   0011FC  0E01               	movlw	high _eventdata
  1620   0011FE  2002               	addwfc	(?___wmul+1)^0,w,c
  1621   001200  6E08               	movwf	(??_view_log+1)^0,c
  1622   001202  500D               	movf	view_log@i^0,w,c
  1623   001204  2407               	addwf	??_view_log^0,w,c
  1624   001206  6ED9               	movwf	fsr2l,c
  1625   001208  500E               	movf	(view_log@i+1)^0,w,c
  1626   00120A  2008               	addwfc	(??_view_log+1)^0,w,c
  1627   00120C  6EDA               	movwf	fsr2h,c
  1628   00120E  5009               	movf	view_log@address^0,w,c
  1629   001210  240D               	addwf	view_log@i^0,w,c
  1630   001212  ECF0  F00F         	call	_read_external_eeprom
  1631   001216  6EDF               	movwf	indf2,c
  1632   001218                     
  1633                           ;scrolldisplay.c: 160:         }
  1634   001218  4A0D               	infsnz	view_log@i^0,f,c
  1635   00121A  2A0E               	incf	(view_log@i+1)^0,f,c
  1636   00121C  BE0E               	btfsc	(view_log@i+1)^0,7,c
  1637   00121E  EF1A  F009         	goto	u3051
  1638   001222  500E               	movf	(view_log@i+1)^0,w,c
  1639   001224  E109               	bnz	u3050
  1640   001226  0E10               	movlw	16
  1641   001228  5C0D               	subwf	view_log@i^0,w,c
  1642   00122A  A0D8               	btfss	status,0,c
  1643   00122C  EF1A  F009         	goto	u3051
  1644   001230  EF1C  F009         	goto	u3050
  1645   001234                     u3051:
  1646   001234  EFF1  F008         	goto	l3827
  1647   001238                     u3050:
  1648   001238                     
  1649                           ;scrolldisplay.c: 161:     }
  1650   001238  4A0B               	infsnz	view_log@j^0,f,c
  1651   00123A  2A0C               	incf	(view_log@j+1)^0,f,c
  1652   00123C  BE0C               	btfsc	(view_log@j+1)^0,7,c
  1653   00123E  EF2A  F009         	goto	u3061
  1654   001242  500C               	movf	(view_log@j+1)^0,w,c
  1655   001244  E109               	bnz	u3060
  1656   001246  0E0A               	movlw	10
  1657   001248  5C0B               	subwf	view_log@j^0,w,c
  1658   00124A  A0D8               	btfss	status,0,c
  1659   00124C  EF2A  F009         	goto	u3061
  1660   001250  EF2C  F009         	goto	u3060
  1661   001254                     u3061:
  1662   001254  EFE8  F008         	goto	l3819
  1663   001258                     u3060:
  1664   001258                     
  1665                           ;scrolldisplay.c: 162:     if(key==12 && vpos<10)
  1666   001258  0E0C               	movlw	12
  1667   00125A  180A               	xorwf	view_log@key^0,w,c
  1668   00125C  A4D8               	btfss	status,2,c
  1669   00125E  EF33  F009         	goto	u3071
  1670   001262  EF35  F009         	goto	u3070
  1671   001266                     u3071:
  1672   001266  EF40  F009         	goto	l3843
  1673   00126A                     u3070:
  1674   00126A  0E0A               	movlw	10
  1675   00126C  604A               	cpfslt	view_log@vpos^0,c
  1676   00126E  EF3B  F009         	goto	u3081
  1677   001272  EF3D  F009         	goto	u3080
  1678   001276                     u3081:
  1679   001276  EF40  F009         	goto	l3843
  1680   00127A                     u3080:
  1681   00127A                     
  1682                           ;scrolldisplay.c: 163:             vpos++;
  1683   00127A  2A4A               	incf	view_log@vpos^0,f,c
  1684   00127C  EF52  F009         	goto	l3849
  1685   001280                     l3843:
  1686   001280  0E0B               	movlw	11
  1687   001282  180A               	xorwf	view_log@key^0,w,c
  1688   001284  A4D8               	btfss	status,2,c
  1689   001286  EF47  F009         	goto	u3091
  1690   00128A  EF49  F009         	goto	u3090
  1691   00128E                     u3091:
  1692   00128E  EF52  F009         	goto	l3849
  1693   001292                     u3090:
  1694   001292  504A               	movf	view_log@vpos^0,w,c
  1695   001294  B4D8               	btfsc	status,2,c
  1696   001296  EF4F  F009         	goto	u3101
  1697   00129A  EF51  F009         	goto	u3100
  1698   00129E                     u3101:
  1699   00129E  EF52  F009         	goto	l3849
  1700   0012A2                     u3100:
  1701   0012A2                     
  1702                           ;scrolldisplay.c: 165:             vpos--;
  1703   0012A2  064A               	decf	view_log@vpos^0,f,c
  1704   0012A4                     l3849:
  1705                           
  1706                           ;scrolldisplay.c: 167:       clcd_print( (unsigned char*) eventdata[vpos], (0x80 + (0)))
      +                          ;
  1707   0012A4  504A               	movf	view_log@vpos^0,w,c
  1708   0012A6  0D11               	mullw	17
  1709   0012A8  0E00               	movlw	low _eventdata
  1710   0012AA  24F3               	addwf	243,w,c
  1711   0012AC  6E03               	movwf	clcd_print@data^0,c
  1712   0012AE  0E01               	movlw	high _eventdata
  1713   0012B0  20F4               	addwfc	prodh,w,c
  1714   0012B2  6E04               	movwf	(clcd_print@data+1)^0,c
  1715   0012B4  0E80               	movlw	128
  1716   0012B6  6E05               	movwf	clcd_print@addr^0,c
  1717   0012B8  EC4C  F00E         	call	_clcd_print	;wreg free
  1718   0012BC                     
  1719                           ;scrolldisplay.c: 168:       clcd_print( (unsigned char*) eventdata[vpos+1], (0xC0 + (0)
      +                          ));
  1720   0012BC  504A               	movf	view_log@vpos^0,w,c
  1721   0012BE  0D11               	mullw	17
  1722   0012C0  0E11               	movlw	low (_eventdata+17)
  1723   0012C2  24F3               	addwf	243,w,c
  1724   0012C4  6E03               	movwf	clcd_print@data^0,c
  1725   0012C6  0E01               	movlw	high (_eventdata+17)
  1726   0012C8  20F4               	addwfc	prodh,w,c
  1727   0012CA  6E04               	movwf	(clcd_print@data+1)^0,c
  1728   0012CC  0EC0               	movlw	192
  1729   0012CE  6E05               	movwf	clcd_print@addr^0,c
  1730   0012D0  EC4C  F00E         	call	_clcd_print	;wreg free
  1731   0012D4  0012               	return		;funcret
  1732   0012D6                     __end_of_view_log:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function _set_time *****************
  1736 ;; Defined at:
  1737 ;;		line 171 in file "scrolldisplay.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  ucKey           1    wreg     unsigned char 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  ucKey           1    0[COMRAM] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1751 ;;      Params:         0       0       0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0       0       0
  1754 ;;      Totals:         0       0       0       0       0       0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used: 1
  1757 ;; Hardware stack levels required when called: 1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text2
  1766   002188                     __ptext2:
  1767                           	callstack 0
  1768   002188                     _set_time:
  1769                           	callstack 29
  1770   002188                     
  1771                           ;scrolldisplay.c: 171: void set_time(unsigned char ucKey);scrolldisplay.c: 172: {;scroll
      +                          display.c: 173:     static char draft[9];;scrolldisplay.c: 174:     draft[8]='\0';
  1772   002188  0E00               	movlw	0
  1773   00218A  0100               	movlb	0	; () banked
  1774   00218C  6F79               	movwf	(set_time@draft+8)& (0+255),b
  1775   00218E                     
  1776                           ; BSR set to: 0
  1777   00218E  0012               	return		;funcret
  1778   002190                     __end_of_set_time:
  1779                           	callstack 0
  1780                           
  1781 ;; *************** function _scrolllog *****************
  1782 ;; Defined at:
  1783 ;;		line 77 in file "scrolldisplay.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  key             1    wreg     unsigned char 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  key             1   22[COMRAM] unsigned char 
  1788 ;;  i               2    0        int 
  1789 ;;  k               1   21[COMRAM] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1799 ;;      Params:         0       0       0       0       0       0       0
  1800 ;;      Locals:         2       0       0       0       0       0       0
  1801 ;;      Temps:          2       0       0       0       0       0       0
  1802 ;;      Totals:         4       0       0       0       0       0       0
  1803 ;;Total ram usage:        4 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; Hardware stack levels required when called: 4
  1806 ;; This function calls:
  1807 ;;		_clcd_print
  1808 ;;		_clcd_putch
  1809 ;;		_clcd_write
  1810 ;;		_print
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text3
  1817   000990                     __ptext3:
  1818                           	callstack 0
  1819   000990                     _scrolllog:
  1820                           	callstack 26
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;incstack = 0
  1824                           ;scrolllog@key stored from wreg
  1825   000990  6E17               	movwf	scrolllog@key^0,c
  1826   000992                     
  1827                           ;scrolldisplay.c: 78:     static unsigned char prevkey=0xFF;;scrolldisplay.c: 79:     if
      +                          (press==0)
  1828   000992  0100               	movlb	0	; () banked
  1829   000994  5185               	movf	_press& (0+255),w,b
  1830   000996  1186               	iorwf	(_press+1)& (0+255),w,b
  1831   000998  A4D8               	btfss	status,2,c
  1832   00099A  EFD1  F004         	goto	u2881
  1833   00099E  EFD3  F004         	goto	u2880
  1834   0009A2                     u2881:
  1835   0009A2  EFFC  F004         	goto	l3711
  1836   0009A6                     u2880:
  1837   0009A6                     
  1838                           ; BSR set to: 0
  1839                           ;scrolldisplay.c: 80:         {;scrolldisplay.c: 81:         clcd_putch('*', (0x80 + (1)
      +                          ));
  1840   0009A6  0E81               	movlw	129
  1841   0009A8  6E0F               	movwf	clcd_putch@addr^0,c
  1842   0009AA  0E2A               	movlw	42
  1843   0009AC  EC83  F010         	call	_clcd_putch
  1844   0009B0                     
  1845                           ;scrolldisplay.c: 82:         clcd_print((unsigned char*) scrolling[logg], (0x80 + (3)))
      +                          ;
  1846   0009B0  504B               	movf	_logg^0,w,c
  1847   0009B2  0D02               	mullw	2
  1848   0009B4  0EC0               	movlw	low _scrolling
  1849   0009B6  24F3               	addwf	243,w,c
  1850   0009B8  6ED9               	movwf	fsr2l,c
  1851   0009BA  0E00               	movlw	high _scrolling
  1852   0009BC  20F4               	addwfc	prodh,w,c
  1853   0009BE  6EDA               	movwf	fsr2h,c
  1854   0009C0  CFDE F003          	movff	postinc2,clcd_print@data
  1855   0009C4  CFDD F004          	movff	postdec2,clcd_print@data+1
  1856   0009C8  0E83               	movlw	131
  1857   0009CA  6E05               	movwf	clcd_print@addr^0,c
  1858   0009CC  EC4C  F00E         	call	_clcd_print	;wreg free
  1859   0009D0                     
  1860                           ;scrolldisplay.c: 83:         clcd_print((unsigned char*) scrolling[logg + 1], (0xC0 + (
      +                          3)));
  1861   0009D0  504B               	movf	_logg^0,w,c
  1862   0009D2  6E14               	movwf	??_scrolllog^0,c
  1863   0009D4  6A15               	clrf	(??_scrolllog+1)^0,c
  1864   0009D6  90D8               	bcf	status,0,c
  1865   0009D8  3614               	rlcf	??_scrolllog^0,f,c
  1866   0009DA  3615               	rlcf	(??_scrolllog+1)^0,f,c
  1867   0009DC  0EC2               	movlw	low (_scrolling+2)
  1868   0009DE  2414               	addwf	??_scrolllog^0,w,c
  1869   0009E0  6ED9               	movwf	fsr2l,c
  1870   0009E2  0E00               	movlw	high (_scrolling+2)
  1871   0009E4  2015               	addwfc	(??_scrolllog+1)^0,w,c
  1872   0009E6  6EDA               	movwf	fsr2h,c
  1873   0009E8  CFDE F003          	movff	postinc2,clcd_print@data
  1874   0009EC  CFDD F004          	movff	postdec2,clcd_print@data+1
  1875   0009F0  0EC3               	movlw	195
  1876   0009F2  6E05               	movwf	clcd_print@addr^0,c
  1877   0009F4  EC4C  F00E         	call	_clcd_print	;wreg free
  1878   0009F8                     l3711:
  1879                           
  1880                           ;scrolldisplay.c: 85:     if(key==12 || key==11)
  1881   0009F8  0E0C               	movlw	12
  1882   0009FA  1817               	xorwf	scrolllog@key^0,w,c
  1883   0009FC  B4D8               	btfsc	status,2,c
  1884   0009FE  EF03  F005         	goto	u2891
  1885   000A02  EF05  F005         	goto	u2890
  1886   000A06                     u2891:
  1887   000A06  EF0E  F005         	goto	l3715
  1888   000A0A                     u2890:
  1889   000A0A  0E0B               	movlw	11
  1890   000A0C  1817               	xorwf	scrolllog@key^0,w,c
  1891   000A0E  A4D8               	btfss	status,2,c
  1892   000A10  EF0C  F005         	goto	u2901
  1893   000A14  EF0E  F005         	goto	u2900
  1894   000A18                     u2901:
  1895   000A18  EFEA  F005         	goto	l3803
  1896   000A1C                     u2900:
  1897   000A1C                     l3715:
  1898                           
  1899                           ;scrolldisplay.c: 86:     {;scrolldisplay.c: 87:         out++;
  1900   000A1C  4A44               	infsnz	_out^0,f,c
  1901   000A1E  2A45               	incf	(_out+1)^0,f,c
  1902   000A20                     
  1903                           ;scrolldisplay.c: 88:         prevkey=key;
  1904   000A20  C017  F058         	movff	scrolllog@key,scrolllog@prevkey
  1905   000A24                     
  1906                           ;scrolldisplay.c: 89:         if(out > 4000 && key==12)
  1907   000A24  0EA1               	movlw	161
  1908   000A26  5C44               	subwf	_out^0,w,c
  1909   000A28  0E0F               	movlw	15
  1910   000A2A  5845               	subwfb	(_out+1)^0,w,c
  1911   000A2C  A0D8               	btfss	status,0,c
  1912   000A2E  EF1B  F005         	goto	u2911
  1913   000A32  EF1D  F005         	goto	u2910
  1914   000A36                     u2911:
  1915   000A36  EF3A  F005         	goto	l3735
  1916   000A3A                     u2910:
  1917   000A3A  0E0C               	movlw	12
  1918   000A3C  1817               	xorwf	scrolllog@key^0,w,c
  1919   000A3E  A4D8               	btfss	status,2,c
  1920   000A40  EF24  F005         	goto	u2921
  1921   000A44  EF26  F005         	goto	u2920
  1922   000A48                     u2921:
  1923   000A48  EF3A  F005         	goto	l3735
  1924   000A4C                     u2920:
  1925   000A4C                     
  1926                           ;scrolldisplay.c: 90:         {;scrolldisplay.c: 91:             out=0;
  1927   000A4C  0E00               	movlw	0
  1928   000A4E  6E45               	movwf	(_out+1)^0,c
  1929   000A50  0E00               	movlw	0
  1930   000A52  6E44               	movwf	_out^0,c
  1931   000A54                     
  1932                           ;scrolldisplay.c: 92:             clcd_write(0x01, 0);
  1933   000A54  0E00               	movlw	0
  1934   000A56  6E01               	movwf	clcd_write@control_bit^0,c
  1935   000A58  0E01               	movlw	1
  1936   000A5A  ECBF  F00F         	call	_clcd_write
  1937   000A5E                     
  1938                           ;scrolldisplay.c: 93:             controlflag=1;
  1939   000A5E  0E00               	movlw	0
  1940   000A60  6E56               	movwf	(_controlflag+1)^0,c
  1941   000A62  0E01               	movlw	1
  1942   000A64  6E55               	movwf	_controlflag^0,c
  1943   000A66                     
  1944                           ;scrolldisplay.c: 94:             press=0;
  1945   000A66  0E00               	movlw	0
  1946   000A68  0100               	movlb	0	; () banked
  1947   000A6A  6F86               	movwf	(_press+1)& (0+255),b
  1948   000A6C  0E00               	movlw	0
  1949   000A6E  6F85               	movwf	_press& (0+255),b
  1950   000A70  EF06  F006         	goto	l504
  1951   000A74                     l3735:
  1952   000A74  0EA1               	movlw	161
  1953   000A76  5C44               	subwf	_out^0,w,c
  1954   000A78  0E0F               	movlw	15
  1955   000A7A  5845               	subwfb	(_out+1)^0,w,c
  1956   000A7C  A0D8               	btfss	status,0,c
  1957   000A7E  EF43  F005         	goto	u2931
  1958   000A82  EF45  F005         	goto	u2930
  1959   000A86                     u2931:
  1960   000A86  EF06  F006         	goto	l504
  1961   000A8A                     u2930:
  1962   000A8A  0E0B               	movlw	11
  1963   000A8C  1817               	xorwf	scrolllog@key^0,w,c
  1964   000A8E  A4D8               	btfss	status,2,c
  1965   000A90  EF4C  F005         	goto	u2941
  1966   000A94  EF4E  F005         	goto	u2940
  1967   000A98                     u2941:
  1968   000A98  EF06  F006         	goto	l504
  1969   000A9C                     u2940:
  1970   000A9C                     
  1971                           ;scrolldisplay.c: 98:         {;scrolldisplay.c: 99:             if(logg==0 || logg==(ch
      +                          ar)-1)
  1972   000A9C  504B               	movf	_logg^0,w,c
  1973   000A9E  B4D8               	btfsc	status,2,c
  1974   000AA0  EF54  F005         	goto	u2951
  1975   000AA4  EF56  F005         	goto	u2950
  1976   000AA8                     u2951:
  1977   000AA8  EF5E  F005         	goto	l3743
  1978   000AAC                     u2950:
  1979   000AAC  284B               	incf	_logg^0,w,c
  1980   000AAE  A4D8               	btfss	status,2,c
  1981   000AB0  EF5C  F005         	goto	u2961
  1982   000AB4  EF5E  F005         	goto	u2960
  1983   000AB8                     u2961:
  1984   000AB8  EF69  F005         	goto	l3751
  1985   000ABC                     u2960:
  1986   000ABC                     l3743:
  1987                           
  1988                           ;scrolldisplay.c: 100:             {;scrolldisplay.c: 101:                 clcd_write(0x
      +                          01, 0);
  1989   000ABC  0E00               	movlw	0
  1990   000ABE  6E01               	movwf	clcd_write@control_bit^0,c
  1991   000AC0  0E01               	movlw	1
  1992   000AC2  ECBF  F00F         	call	_clcd_write
  1993   000AC6                     
  1994                           ;scrolldisplay.c: 102:                 controlflag=4;
  1995   000AC6  0E00               	movlw	0
  1996   000AC8  6E56               	movwf	(_controlflag+1)^0,c
  1997   000ACA  0E04               	movlw	4
  1998   000ACC  6E55               	movwf	_controlflag^0,c
  1999   000ACE  EF06  F006         	goto	l504
  2000   000AD2                     l3751:
  2001   000AD2  044B               	decf	_logg^0,w,c
  2002   000AD4  A4D8               	btfss	status,2,c
  2003   000AD6  EF6F  F005         	goto	u2971
  2004   000ADA  EF71  F005         	goto	u2970
  2005   000ADE                     u2971:
  2006   000ADE  EF7C  F005         	goto	l3761
  2007   000AE2                     u2970:
  2008   000AE2                     
  2009                           ;scrolldisplay.c: 106:             {;scrolldisplay.c: 107:                 clcd_write(0x
      +                          01, 0);
  2010   000AE2  0E00               	movlw	0
  2011   000AE4  6E01               	movwf	clcd_write@control_bit^0,c
  2012   000AE6  0E01               	movlw	1
  2013   000AE8  ECBF  F00F         	call	_clcd_write
  2014   000AEC                     
  2015                           ;scrolldisplay.c: 108:                 controlflag=5;
  2016   000AEC  0E00               	movlw	0
  2017   000AEE  6E56               	movwf	(_controlflag+1)^0,c
  2018   000AF0  0E05               	movlw	5
  2019   000AF2  6E55               	movwf	_controlflag^0,c
  2020   000AF4  EF06  F006         	goto	l504
  2021   000AF8                     l3761:
  2022   000AF8  0E02               	movlw	2
  2023   000AFA  184B               	xorwf	_logg^0,w,c
  2024   000AFC  A4D8               	btfss	status,2,c
  2025   000AFE  EF83  F005         	goto	u2981
  2026   000B02  EF85  F005         	goto	u2980
  2027   000B06                     u2981:
  2028   000B06  EFBB  F005         	goto	l3785
  2029   000B0A                     u2980:
  2030   000B0A                     
  2031                           ;scrolldisplay.c: 112:             {;scrolldisplay.c: 113:                 clcd_write(0x
      +                          01, 0);
  2032   000B0A  0E00               	movlw	0
  2033   000B0C  6E01               	movwf	clcd_write@control_bit^0,c
  2034   000B0E  0E01               	movlw	1
  2035   000B10  ECBF  F00F         	call	_clcd_write
  2036   000B14                     
  2037                           ;scrolldisplay.c: 114:                 clcd_print((unsigned char*) "Clearing logs", (0x8
      +                          0 + (0)));
  2038   000B14  0ECB               	movlw	low STR_31
  2039   000B16  6E03               	movwf	clcd_print@data^0,c
  2040   000B18  0E2F               	movlw	high STR_31
  2041   000B1A  6E04               	movwf	(clcd_print@data+1)^0,c
  2042   000B1C  0E80               	movlw	128
  2043   000B1E  6E05               	movwf	clcd_print@addr^0,c
  2044   000B20  EC4C  F00E         	call	_clcd_print	;wreg free
  2045   000B24                     
  2046                           ;scrolldisplay.c: 115:                 unsigned char k=0;
  2047   000B24  0E00               	movlw	0
  2048   000B26  6E16               	movwf	scrolllog@k^0,c
  2049   000B28  EFB0  F005         	goto	l3781
  2050   000B2C                     l3771:
  2051                           
  2052                           ;scrolldisplay.c: 117:                 {;scrolldisplay.c: 118:                     k++;
  2053   000B2C  2A16               	incf	scrolllog@k^0,f,c
  2054   000B2E                     
  2055                           ;scrolldisplay.c: 119:                     if(k>3)
  2056   000B2E  0E03               	movlw	3
  2057   000B30  6416               	cpfsgt	scrolllog@k^0,c
  2058   000B32  EF9D  F005         	goto	u2991
  2059   000B36  EF9F  F005         	goto	u2990
  2060   000B3A                     u2991:
  2061   000B3A  EFA7  F005         	goto	l3777
  2062   000B3E                     u2990:
  2063   000B3E                     
  2064                           ;scrolldisplay.c: 120:                         clcd_putch('.',(0xC0 + (k-3)));
  2065   000B3E  5016               	movf	scrolllog@k^0,w,c
  2066   000B40  0FBD               	addlw	189
  2067   000B42  6E0F               	movwf	clcd_putch@addr^0,c
  2068   000B44  0E2E               	movlw	46
  2069   000B46  EC83  F010         	call	_clcd_putch
  2070   000B4A  EFAD  F005         	goto	l3779
  2071   000B4E                     l3777:
  2072                           
  2073                           ;scrolldisplay.c: 122:                         clcd_putch('.', (0x80 + (k)));
  2074   000B4E  5016               	movf	scrolllog@k^0,w,c
  2075   000B50  0F80               	addlw	128
  2076   000B52  6E0F               	movwf	clcd_putch@addr^0,c
  2077   000B54  0E2E               	movlw	46
  2078   000B56  EC83  F010         	call	_clcd_putch
  2079   000B5A                     l3779:
  2080                           
  2081                           ;scrolldisplay.c: 123:                 }
  2082   000B5A  0646               	decf	_eventcount^0,f,c
  2083   000B5C  A0D8               	btfss	status,0,c
  2084   000B5E  0647               	decf	(_eventcount+1)^0,f,c
  2085   000B60                     l3781:
  2086   000B60  5046               	movf	_eventcount^0,w,c
  2087   000B62  1047               	iorwf	(_eventcount+1)^0,w,c
  2088   000B64  A4D8               	btfss	status,2,c
  2089   000B66  EFB7  F005         	goto	u3001
  2090   000B6A  EFB9  F005         	goto	u3000
  2091   000B6E                     u3001:
  2092   000B6E  EF96  F005         	goto	l3771
  2093   000B72                     u3000:
  2094   000B72  EF06  F006         	goto	l504
  2095   000B76                     l3785:
  2096   000B76  0E60               	movlw	low _log
  2097   000B78  6E14               	movwf	??_scrolllog^0,c
  2098   000B7A  0E00               	movlw	high _log
  2099   000B7C  6E15               	movwf	(??_scrolllog+1)^0,c
  2100   000B7E  0E03               	movlw	3
  2101   000B80  1814               	xorwf	??_scrolllog^0,w,c
  2102   000B82  1015               	iorwf	(??_scrolllog+1)^0,w,c
  2103   000B84  A4D8               	btfss	status,2,c
  2104   000B86  EFC7  F005         	goto	u3011
  2105   000B8A  EFC9  F005         	goto	u3010
  2106   000B8E                     u3011:
  2107   000B8E  EFD4  F005         	goto	l3795
  2108   000B92                     u3010:
  2109   000B92                     
  2110                           ;scrolldisplay.c: 127:             {;scrolldisplay.c: 128:                 clcd_write(0x
      +                          01, 0);
  2111   000B92  0E00               	movlw	0
  2112   000B94  6E01               	movwf	clcd_write@control_bit^0,c
  2113   000B96  0E01               	movlw	1
  2114   000B98  ECBF  F00F         	call	_clcd_write
  2115   000B9C                     
  2116                           ;scrolldisplay.c: 129:                 controlflag=6;
  2117   000B9C  0E00               	movlw	0
  2118   000B9E  6E56               	movwf	(_controlflag+1)^0,c
  2119   000BA0  0E06               	movlw	6
  2120   000BA2  6E55               	movwf	_controlflag^0,c
  2121   000BA4  EF06  F006         	goto	l504
  2122   000BA8                     l3795:
  2123   000BA8  0E04               	movlw	4
  2124   000BAA  184B               	xorwf	_logg^0,w,c
  2125   000BAC  A4D8               	btfss	status,2,c
  2126   000BAE  EFDB  F005         	goto	u3021
  2127   000BB2  EFDD  F005         	goto	u3020
  2128   000BB6                     u3021:
  2129   000BB6  EFE8  F005         	goto	l512
  2130   000BBA                     u3020:
  2131   000BBA                     
  2132                           ;scrolldisplay.c: 133:             {;scrolldisplay.c: 134:                 clcd_write(0x
      +                          01, 0);
  2133   000BBA  0E00               	movlw	0
  2134   000BBC  6E01               	movwf	clcd_write@control_bit^0,c
  2135   000BBE  0E01               	movlw	1
  2136   000BC0  ECBF  F00F         	call	_clcd_write
  2137   000BC4                     
  2138                           ;scrolldisplay.c: 135:                 controlflag=2;
  2139   000BC4  0E00               	movlw	0
  2140   000BC6  6E56               	movwf	(_controlflag+1)^0,c
  2141   000BC8  0E02               	movlw	2
  2142   000BCA  6E55               	movwf	_controlflag^0,c
  2143   000BCC  EF06  F006         	goto	l504
  2144   000BD0                     l512:
  2145   000BD0  EF06  F006         	goto	l504
  2146   000BD4                     l3803:
  2147   000BD4  5044               	movf	_out^0,w,c
  2148   000BD6  1045               	iorwf	(_out+1)^0,w,c
  2149   000BD8  B4D8               	btfsc	status,2,c
  2150   000BDA  EFF1  F005         	goto	u3031
  2151   000BDE  EFF3  F005         	goto	u3030
  2152   000BE2                     u3031:
  2153   000BE2  EF06  F006         	goto	l504
  2154   000BE6                     u3030:
  2155   000BE6  0EA1               	movlw	161
  2156   000BE8  5C44               	subwf	_out^0,w,c
  2157   000BEA  0E0F               	movlw	15
  2158   000BEC  5845               	subwfb	(_out+1)^0,w,c
  2159   000BEE  B0D8               	btfsc	status,0,c
  2160   000BF0  EFFC  F005         	goto	u3041
  2161   000BF4  EFFE  F005         	goto	u3040
  2162   000BF8                     u3041:
  2163   000BF8  EF06  F006         	goto	l504
  2164   000BFC                     u3040:
  2165   000BFC                     
  2166                           ;scrolldisplay.c: 141:         {;scrolldisplay.c: 142:             out=0;
  2167   000BFC  0E00               	movlw	0
  2168   000BFE  6E45               	movwf	(_out+1)^0,c
  2169   000C00  0E00               	movlw	0
  2170   000C02  6E44               	movwf	_out^0,c
  2171   000C04                     
  2172                           ;scrolldisplay.c: 143:             print(prevkey);
  2173   000C04  5058               	movf	scrolllog@prevkey^0,w,c
  2174   000C06  EC55  F008         	call	_print
  2175   000C0A                     
  2176                           ;scrolldisplay.c: 144:             prevkey=0xFF;
  2177   000C0A  6858               	setf	scrolllog@prevkey^0,c
  2178   000C0C                     l504:
  2179   000C0C  0012               	return		;funcret
  2180   000C0E                     __end_of_scrolllog:
  2181                           	callstack 0
  2182                           
  2183 ;; *************** function _print *****************
  2184 ;; Defined at:
  2185 ;;		line 56 in file "scrolldisplay.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  key             1    wreg     unsigned char 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  key             1   18[COMRAM] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2199 ;;      Params:         0       0       0       0       0       0       0
  2200 ;;      Locals:         1       0       0       0       0       0       0
  2201 ;;      Temps:          2       0       0       0       0       0       0
  2202 ;;      Totals:         3       0       0       0       0       0       0
  2203 ;;Total ram usage:        3 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; Hardware stack levels required when called: 3
  2206 ;; This function calls:
  2207 ;;		_clcd_print
  2208 ;;		_clcd_putch
  2209 ;;		_clcd_write
  2210 ;; This function is called by:
  2211 ;;		_scrolllog
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text4
  2216   0010AA                     __ptext4:
  2217                           	callstack 0
  2218   0010AA                     _print:
  2219                           	callstack 26
  2220                           
  2221                           ;incstack = 0
  2222                           ;print@key stored from wreg
  2223   0010AA  6E13               	movwf	print@key^0,c
  2224   0010AC                     
  2225                           ;scrolldisplay.c: 56: void print(unsigned char key);scrolldisplay.c: 57: {;scrolldisplay
      +                          .c: 58:     if((key==12)&&(logg < 4))
  2226   0010AC  0E0C               	movlw	12
  2227   0010AE  1813               	xorwf	print@key^0,w,c
  2228   0010B0  A4D8               	btfss	status,2,c
  2229   0010B2  EF5D  F008         	goto	u2481
  2230   0010B6  EF5F  F008         	goto	u2480
  2231   0010BA                     u2481:
  2232   0010BA  EF9D  F008         	goto	l3427
  2233   0010BE                     u2480:
  2234   0010BE  0E04               	movlw	4
  2235   0010C0  604B               	cpfslt	_logg^0,c
  2236   0010C2  EF65  F008         	goto	u2491
  2237   0010C6  EF67  F008         	goto	u2490
  2238   0010CA                     u2491:
  2239   0010CA  EF9D  F008         	goto	l3427
  2240   0010CE                     u2490:
  2241   0010CE                     
  2242                           ;scrolldisplay.c: 59:     {;scrolldisplay.c: 60:         clcd_write(0x01, 0);
  2243   0010CE  0E00               	movlw	0
  2244   0010D0  6E01               	movwf	clcd_write@control_bit^0,c
  2245   0010D2  0E01               	movlw	1
  2246   0010D4  ECBF  F00F         	call	_clcd_write
  2247   0010D8                     
  2248                           ;scrolldisplay.c: 61:         logg++;
  2249   0010D8  2A4B               	incf	_logg^0,f,c
  2250   0010DA                     
  2251                           ;scrolldisplay.c: 62:         press=1;
  2252   0010DA  0E00               	movlw	0
  2253   0010DC  0100               	movlb	0	; () banked
  2254   0010DE  6F86               	movwf	(_press+1)& (0+255),b
  2255   0010E0  0E01               	movlw	1
  2256   0010E2  6F85               	movwf	_press& (0+255),b
  2257   0010E4                     
  2258                           ; BSR set to: 0
  2259                           ;scrolldisplay.c: 63:         clcd_putch('*', (0xC0 + (1)));
  2260   0010E4  0EC1               	movlw	193
  2261   0010E6  6E0F               	movwf	clcd_putch@addr^0,c
  2262   0010E8  0E2A               	movlw	42
  2263   0010EA  EC83  F010         	call	_clcd_putch
  2264   0010EE                     
  2265                           ;scrolldisplay.c: 64:         clcd_print((unsigned char*) scrolling[logg-1], (0x80 + (3)
      +                          ));
  2266   0010EE  504B               	movf	_logg^0,w,c
  2267   0010F0  6E11               	movwf	??_print^0,c
  2268   0010F2  6A12               	clrf	(??_print+1)^0,c
  2269   0010F4  90D8               	bcf	status,0,c
  2270   0010F6  3611               	rlcf	??_print^0,f,c
  2271   0010F8  3612               	rlcf	(??_print+1)^0,f,c
  2272   0010FA  0EBE               	movlw	low (_scrolling+65534)
  2273   0010FC  2411               	addwf	??_print^0,w,c
  2274   0010FE  6ED9               	movwf	fsr2l,c
  2275   001100  0E00               	movlw	high (_scrolling+65534)
  2276   001102  2012               	addwfc	(??_print+1)^0,w,c
  2277   001104  6EDA               	movwf	fsr2h,c
  2278   001106  CFDE F003          	movff	postinc2,clcd_print@data
  2279   00110A  CFDD F004          	movff	postdec2,clcd_print@data+1
  2280   00110E  0E83               	movlw	131
  2281   001110  6E05               	movwf	clcd_print@addr^0,c
  2282   001112  EC4C  F00E         	call	_clcd_print	;wreg free
  2283   001116                     
  2284                           ;scrolldisplay.c: 65:         clcd_print((unsigned char*) scrolling[logg], (0xC0 + (3)))
      +                          ;
  2285   001116  504B               	movf	_logg^0,w,c
  2286   001118  0D02               	mullw	2
  2287   00111A  0EC0               	movlw	low _scrolling
  2288   00111C  24F3               	addwf	243,w,c
  2289   00111E  6ED9               	movwf	fsr2l,c
  2290   001120  0E00               	movlw	high _scrolling
  2291   001122  20F4               	addwfc	prodh,w,c
  2292   001124  6EDA               	movwf	fsr2h,c
  2293   001126  CFDE F003          	movff	postinc2,clcd_print@data
  2294   00112A  CFDD F004          	movff	postdec2,clcd_print@data+1
  2295   00112E  0EC3               	movlw	195
  2296   001130  6E05               	movwf	clcd_print@addr^0,c
  2297   001132  EC4C  F00E         	call	_clcd_print	;wreg free
  2298                           
  2299                           ;scrolldisplay.c: 66:     }
  2300   001136  EFE2  F008         	goto	l494
  2301   00113A                     l3427:
  2302   00113A  0E0B               	movlw	11
  2303   00113C  1813               	xorwf	print@key^0,w,c
  2304   00113E  A4D8               	btfss	status,2,c
  2305   001140  EFA4  F008         	goto	u2501
  2306   001144  EFA6  F008         	goto	u2500
  2307   001148                     u2501:
  2308   001148  EFE2  F008         	goto	l494
  2309   00114C                     u2500:
  2310   00114C  504B               	movf	_logg^0,w,c
  2311   00114E  B4D8               	btfsc	status,2,c
  2312   001150  EFAC  F008         	goto	u2511
  2313   001154  EFAE  F008         	goto	u2510
  2314   001158                     u2511:
  2315   001158  EFE2  F008         	goto	l494
  2316   00115C                     u2510:
  2317   00115C                     
  2318                           ;scrolldisplay.c: 68:     {;scrolldisplay.c: 69:         clcd_write(0x01, 0);
  2319   00115C  0E00               	movlw	0
  2320   00115E  6E01               	movwf	clcd_write@control_bit^0,c
  2321   001160  0E01               	movlw	1
  2322   001162  ECBF  F00F         	call	_clcd_write
  2323   001166                     
  2324                           ;scrolldisplay.c: 70:         logg--;
  2325   001166  064B               	decf	_logg^0,f,c
  2326   001168                     
  2327                           ;scrolldisplay.c: 71:         press = 1;
  2328   001168  0E00               	movlw	0
  2329   00116A  0100               	movlb	0	; () banked
  2330   00116C  6F86               	movwf	(_press+1)& (0+255),b
  2331   00116E  0E01               	movlw	1
  2332   001170  6F85               	movwf	_press& (0+255),b
  2333   001172                     
  2334                           ; BSR set to: 0
  2335                           ;scrolldisplay.c: 72:         clcd_putch('*', (0x80 + (1)));
  2336   001172  0E81               	movlw	129
  2337   001174  6E0F               	movwf	clcd_putch@addr^0,c
  2338   001176  0E2A               	movlw	42
  2339   001178  EC83  F010         	call	_clcd_putch
  2340   00117C                     
  2341                           ;scrolldisplay.c: 73:         clcd_print((unsigned char*) scrolling[logg], (0x80 + (3)))
      +                          ;
  2342   00117C  504B               	movf	_logg^0,w,c
  2343   00117E  0D02               	mullw	2
  2344   001180  0EC0               	movlw	low _scrolling
  2345   001182  24F3               	addwf	243,w,c
  2346   001184  6ED9               	movwf	fsr2l,c
  2347   001186  0E00               	movlw	high _scrolling
  2348   001188  20F4               	addwfc	prodh,w,c
  2349   00118A  6EDA               	movwf	fsr2h,c
  2350   00118C  CFDE F003          	movff	postinc2,clcd_print@data
  2351   001190  CFDD F004          	movff	postdec2,clcd_print@data+1
  2352   001194  0E83               	movlw	131
  2353   001196  6E05               	movwf	clcd_print@addr^0,c
  2354   001198  EC4C  F00E         	call	_clcd_print	;wreg free
  2355   00119C                     
  2356                           ;scrolldisplay.c: 74:         clcd_print((unsigned char*) scrolling[logg+1], (0xC0 + (3)
      +                          ));
  2357   00119C  504B               	movf	_logg^0,w,c
  2358   00119E  6E11               	movwf	??_print^0,c
  2359   0011A0  6A12               	clrf	(??_print+1)^0,c
  2360   0011A2  90D8               	bcf	status,0,c
  2361   0011A4  3611               	rlcf	??_print^0,f,c
  2362   0011A6  3612               	rlcf	(??_print+1)^0,f,c
  2363   0011A8  0EC2               	movlw	low (_scrolling+2)
  2364   0011AA  2411               	addwf	??_print^0,w,c
  2365   0011AC  6ED9               	movwf	fsr2l,c
  2366   0011AE  0E00               	movlw	high (_scrolling+2)
  2367   0011B0  2012               	addwfc	(??_print+1)^0,w,c
  2368   0011B2  6EDA               	movwf	fsr2h,c
  2369   0011B4  CFDE F003          	movff	postinc2,clcd_print@data
  2370   0011B8  CFDD F004          	movff	postdec2,clcd_print@data+1
  2371   0011BC  0EC3               	movlw	195
  2372   0011BE  6E05               	movwf	clcd_print@addr^0,c
  2373   0011C0  EC4C  F00E         	call	_clcd_print	;wreg free
  2374   0011C4                     l494:
  2375   0011C4  0012               	return		;funcret
  2376   0011C6                     __end_of_print:
  2377                           	callstack 0
  2378                           
  2379 ;; *************** function _read_switches *****************
  2380 ;; Defined at:
  2381 ;;		line 10 in file "matrixkeyboard.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  ucdetection     1    wreg     unsigned char 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  ucdetection     1    0[COMRAM] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      unsigned char 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2395 ;;      Params:         0       0       0       0       0       0       0
  2396 ;;      Locals:         1       0       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0
  2398 ;;      Totals:         1       0       0       0       0       0       0
  2399 ;;Total ram usage:        1 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 2
  2402 ;; This function calls:
  2403 ;;		_scan_key
  2404 ;; This function is called by:
  2405 ;;		_main
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text5
  2410   001AD0                     __ptext5:
  2411                           	callstack 0
  2412   001AD0                     _read_switches:
  2413                           	callstack 28
  2414                           
  2415                           ;incstack = 0
  2416                           ;read_switches@ucdetection stored from wreg
  2417   001AD0  6E01               	movwf	read_switches@ucdetection^0,c
  2418   001AD2                     
  2419                           ;matrixkeyboard.c: 10: unsigned char read_switches(unsigned char ucdetection);matrixkeyb
      +                          oard.c: 11: {;matrixkeyboard.c: 12:     static unsigned char uconce=1, uckey;;matrixkeyb
      +                          oard.c: 13:     if(ucdetection ==0 )
  2420   001AD2  5001               	movf	read_switches@ucdetection^0,w,c
  2421   001AD4  A4D8               	btfss	status,2,c
  2422   001AD6  EF6F  F00D         	goto	u2551
  2423   001ADA  EF71  F00D         	goto	u2550
  2424   001ADE                     u2551:
  2425   001ADE  EF75  F00D         	goto	l3513
  2426   001AE2                     u2550:
  2427   001AE2                     
  2428                           ;matrixkeyboard.c: 14:         return scan_key();
  2429   001AE2  ECDD  F00C         	call	_scan_key	;wreg free
  2430   001AE6  EFA2  F00D         	goto	l246
  2431   001AEA                     l3513:
  2432   001AEA  0401               	decf	read_switches@ucdetection^0,w,c
  2433   001AEC  A4D8               	btfss	status,2,c
  2434   001AEE  EF7B  F00D         	goto	u2561
  2435   001AF2  EF7D  F00D         	goto	u2560
  2436   001AF6                     u2561:
  2437   001AF6  EFA1  F00D         	goto	l3531
  2438   001AFA                     u2560:
  2439   001AFA                     
  2440                           ;matrixkeyboard.c: 16:     {;matrixkeyboard.c: 17:         uckey = scan_key();
  2441   001AFA  ECDD  F00C         	call	_scan_key	;wreg free
  2442   001AFE  6E4F               	movwf	read_switches@uckey^0,c
  2443   001B00                     
  2444                           ;matrixkeyboard.c: 18:         if((uckey != 0xFF) && uconce)
  2445   001B00  284F               	incf	read_switches@uckey^0,w,c
  2446   001B02  B4D8               	btfsc	status,2,c
  2447   001B04  EF86  F00D         	goto	u2571
  2448   001B08  EF88  F00D         	goto	u2570
  2449   001B0C                     u2571:
  2450   001B0C  EF95  F00D         	goto	l3527
  2451   001B10                     u2570:
  2452   001B10  505A               	movf	read_switches@uconce^0,w,c
  2453   001B12  B4D8               	btfsc	status,2,c
  2454   001B14  EF8E  F00D         	goto	u2581
  2455   001B18  EF90  F00D         	goto	u2580
  2456   001B1C                     u2581:
  2457   001B1C  EF95  F00D         	goto	l3527
  2458   001B20                     u2580:
  2459   001B20                     
  2460                           ;matrixkeyboard.c: 19:         {;matrixkeyboard.c: 20:             uconce=0;
  2461   001B20  0E00               	movlw	0
  2462   001B22  6E5A               	movwf	read_switches@uconce^0,c
  2463                           
  2464                           ;matrixkeyboard.c: 21:             return uckey;
  2465   001B24  504F               	movf	read_switches@uckey^0,w,c
  2466   001B26  EFA2  F00D         	goto	l246
  2467   001B2A                     l3527:
  2468   001B2A  284F               	incf	read_switches@uckey^0,w,c
  2469   001B2C  A4D8               	btfss	status,2,c
  2470   001B2E  EF9B  F00D         	goto	u2591
  2471   001B32  EF9D  F00D         	goto	u2590
  2472   001B36                     u2591:
  2473   001B36  EFA1  F00D         	goto	l248
  2474   001B3A                     u2590:
  2475   001B3A                     
  2476                           ;matrixkeyboard.c: 24:             uconce = 1;
  2477   001B3A  0E01               	movlw	1
  2478   001B3C  6E5A               	movwf	read_switches@uconce^0,c
  2479   001B3E  EFA1  F00D         	goto	l3531
  2480   001B42                     l248:
  2481   001B42                     l3531:
  2482                           
  2483                           ;matrixkeyboard.c: 26:     return 0xFF;
  2484   001B42  0EFF               	movlw	255
  2485   001B44                     l246:
  2486   001B44  0012               	return		;funcret
  2487   001B46                     __end_of_read_switches:
  2488                           	callstack 0
  2489                           
  2490 ;; *************** function _scan_key *****************
  2491 ;; Defined at:
  2492 ;;		line 29 in file "matrixkeyboard.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      unsigned char 
  2499 ;; Registers used:
  2500 ;;		wreg
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2506 ;;      Params:         0       0       0       0       0       0       0
  2507 ;;      Locals:         0       0       0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0
  2509 ;;      Totals:         0       0       0       0       0       0       0
  2510 ;;Total ram usage:        0 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; Hardware stack levels required when called: 1
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_read_switches
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text6
  2521   0019BA                     __ptext6:
  2522                           	callstack 0
  2523   0019BA                     _scan_key:
  2524                           	callstack 28
  2525   0019BA                     
  2526                           ;matrixkeyboard.c: 31:     PORTBbits.RB5 = 0, PORTBbits.RB6 = 1, PORTBbits.RB7 = 1;
  2527   0019BA  9A81               	bcf	129,5,c	;volatile
  2528   0019BC  8C81               	bsf	129,6,c	;volatile
  2529   0019BE  8E81               	bsf	129,7,c	;volatile
  2530                           
  2531                           ;matrixkeyboard.c: 32:     if( PORTBbits.RB1 == 0)
  2532   0019C0  B281               	btfsc	129,1,c	;volatile
  2533   0019C2  EFE5  F00C         	goto	u2351
  2534   0019C6  EFE7  F00C         	goto	u2350
  2535   0019CA                     u2351:
  2536   0019CA  EFEA  F00C         	goto	l254
  2537   0019CE                     u2350:
  2538   0019CE                     
  2539                           ;matrixkeyboard.c: 33:         return 1;
  2540   0019CE  0E01               	movlw	1
  2541   0019D0  EF24  F00D         	goto	l255
  2542   0019D4                     l254:
  2543   0019D4  B881               	btfsc	129,4,c	;volatile
  2544   0019D6  EFEF  F00C         	goto	u2361
  2545   0019DA  EFF1  F00C         	goto	u2360
  2546   0019DE                     u2361:
  2547   0019DE  EFF4  F00C         	goto	l256
  2548   0019E2                     u2360:
  2549   0019E2                     
  2550                           ;matrixkeyboard.c: 39:         return 10;
  2551   0019E2  0E0A               	movlw	10
  2552   0019E4  EF24  F00D         	goto	l255
  2553   0019E8                     l256:
  2554                           
  2555                           ;matrixkeyboard.c: 41:     PORTBbits.RB5 = 1, PORTBbits.RB6 = 0, PORTBbits.RB7 = 1;
  2556   0019E8  8A81               	bsf	129,5,c	;volatile
  2557   0019EA  9C81               	bcf	129,6,c	;volatile
  2558   0019EC  8E81               	bsf	129,7,c	;volatile
  2559                           
  2560                           ;matrixkeyboard.c: 42:     if( PORTBbits.RB1 == 0)
  2561   0019EE  B281               	btfsc	129,1,c	;volatile
  2562   0019F0  EFFC  F00C         	goto	u2371
  2563   0019F4  EFFE  F00C         	goto	u2370
  2564   0019F8                     u2371:
  2565   0019F8  EF01  F00D         	goto	l258
  2566   0019FC                     u2370:
  2567   0019FC                     
  2568                           ;matrixkeyboard.c: 43:         return 2;
  2569   0019FC  0E02               	movlw	2
  2570   0019FE  EF24  F00D         	goto	l255
  2571   001A02                     l258:
  2572   001A02  B881               	btfsc	129,4,c	;volatile
  2573   001A04  EF06  F00D         	goto	u2381
  2574   001A08  EF08  F00D         	goto	u2380
  2575   001A0C                     u2381:
  2576   001A0C  EF0B  F00D         	goto	l259
  2577   001A10                     u2380:
  2578   001A10                     
  2579                           ;matrixkeyboard.c: 49:         return 11;
  2580   001A10  0E0B               	movlw	11
  2581   001A12  EF24  F00D         	goto	l255
  2582   001A16                     l259:
  2583                           
  2584                           ;matrixkeyboard.c: 51:     PORTBbits.RB5 = 1, PORTBbits.RB6 = 1, PORTBbits.RB7 = 0, PORT
      +                          Bbits.RB7 = 0;
  2585   001A16  8A81               	bsf	129,5,c	;volatile
  2586   001A18  8C81               	bsf	129,6,c	;volatile
  2587   001A1A  9E81               	bcf	129,7,c	;volatile
  2588   001A1C  9E81               	bcf	129,7,c	;volatile
  2589                           
  2590                           ;matrixkeyboard.c: 52:     if( PORTBbits.RB1 == 0)
  2591   001A1E  B281               	btfsc	129,1,c	;volatile
  2592   001A20  EF14  F00D         	goto	u2391
  2593   001A24  EF16  F00D         	goto	u2390
  2594   001A28                     u2391:
  2595   001A28  EF19  F00D         	goto	l261
  2596   001A2C                     u2390:
  2597   001A2C                     
  2598                           ;matrixkeyboard.c: 53:         return 3;
  2599   001A2C  0E03               	movlw	3
  2600   001A2E  EF24  F00D         	goto	l255
  2601   001A32                     l261:
  2602   001A32  B881               	btfsc	129,4,c	;volatile
  2603   001A34  EF1E  F00D         	goto	u2401
  2604   001A38  EF20  F00D         	goto	u2400
  2605   001A3C                     u2401:
  2606   001A3C  EF23  F00D         	goto	l3339
  2607   001A40                     u2400:
  2608   001A40                     
  2609                           ;matrixkeyboard.c: 59:         return 12;
  2610   001A40  0E0C               	movlw	12
  2611   001A42  EF24  F00D         	goto	l255
  2612   001A46                     l3339:
  2613                           
  2614                           ;matrixkeyboard.c: 61:         return 0xFF;
  2615   001A46  0EFF               	movlw	255
  2616   001A48                     l255:
  2617   001A48  0012               	return		;funcret
  2618   001A4A                     __end_of_scan_key:
  2619                           	callstack 0
  2620                           
  2621 ;; *************** function _logscreen *****************
  2622 ;; Defined at:
  2623 ;;		line 11 in file "password.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  key             1    wreg     unsigned char 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  key             1   18[COMRAM] unsigned char 
  2628 ;;  wait            2   16[COMRAM] unsigned int 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2638 ;;      Params:         0       0       0       0       0       0       0
  2639 ;;      Locals:         3       0       0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0
  2641 ;;      Totals:         3       0       0       0       0       0       0
  2642 ;;Total ram usage:        3 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; Hardware stack levels required when called: 4
  2645 ;; This function calls:
  2646 ;;		_clcd_print
  2647 ;;		_clcd_putch
  2648 ;;		_clcd_write
  2649 ;;		_mystrcmp
  2650 ;;		_timeleft
  2651 ;; This function is called by:
  2652 ;;		_main
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text7
  2657   0003AC                     __ptext7:
  2658                           	callstack 0
  2659   0003AC                     _logscreen:
  2660                           	callstack 26
  2661                           
  2662                           ;incstack = 0
  2663                           ;logscreen@key stored from wreg
  2664   0003AC  6E13               	movwf	logscreen@key^0,c
  2665   0003AE                     
  2666                           ;password.c: 11: void logscreen(unsigned char key);password.c: 12: {;password.c: 13:    
      +                               uckey[4]='\0';
  2667   0003AE  0E00               	movlw	0
  2668   0003B0  0100               	movlb	0	; () banked
  2669   0003B2  6FAA               	movwf	(_uckey+4)& (0+255),b
  2670   0003B4                     
  2671                           ; BSR set to: 0
  2672                           ;password.c: 14:         if(enterflag==0)
  2673   0003B4  5189               	movf	_enterflag& (0+255),w,b
  2674   0003B6  118A               	iorwf	(_enterflag+1)& (0+255),w,b
  2675   0003B8  A4D8               	btfss	status,2,c
  2676   0003BA  EFE1  F001         	goto	u2721
  2677   0003BE  EFE3  F001         	goto	u2720
  2678   0003C2                     u2721:
  2679   0003C2  EFEB  F001         	goto	l3579
  2680   0003C6                     u2720:
  2681   0003C6                     
  2682                           ; BSR set to: 0
  2683                           ;password.c: 15:             clcd_print( (unsigned char*) " Enter Password ", (0x80 + (0
      +                          )));
  2684   0003C6  0E06               	movlw	low STR_11
  2685   0003C8  6E03               	movwf	clcd_print@data^0,c
  2686   0003CA  0E2F               	movlw	high STR_11
  2687   0003CC  6E04               	movwf	(clcd_print@data+1)^0,c
  2688   0003CE  0E80               	movlw	128
  2689   0003D0  6E05               	movwf	clcd_print@addr^0,c
  2690   0003D2  EC4C  F00E         	call	_clcd_print	;wreg free
  2691   0003D6                     l3579:
  2692                           
  2693                           ;password.c: 16:         if(tryflag>0)
  2694   0003D6  0100               	movlb	0	; () banked
  2695   0003D8  51CE               	movf	_tryflag& (0+255),w,b
  2696   0003DA  11CF               	iorwf	(_tryflag+1)& (0+255),w,b
  2697   0003DC  B4D8               	btfsc	status,2,c
  2698   0003DE  EFF3  F001         	goto	u2731
  2699   0003E2  EFF5  F001         	goto	u2730
  2700   0003E6                     u2731:
  2701   0003E6  EF70  F003         	goto	l3671
  2702   0003EA                     u2730:
  2703   0003EA                     
  2704                           ; BSR set to: 0
  2705                           ;password.c: 17:         {;password.c: 18:              if(i<4)
  2706   0003EA  0E04               	movlw	4
  2707   0003EC  604E               	cpfslt	_i^0,c
  2708   0003EE  EFFB  F001         	goto	u2741
  2709   0003F2  EFFD  F001         	goto	u2740
  2710   0003F6                     u2741:
  2711   0003F6  EF98  F002         	goto	l3619
  2712   0003FA                     u2740:
  2713   0003FA                     
  2714                           ; BSR set to: 0
  2715                           ;password.c: 19:              {;password.c: 20:                  if(!(notpressed--))
  2716   0003FA  07CA               	decf	_notpressed& (0+255),f,b
  2717   0003FC  0E00               	movlw	0
  2718   0003FE  5BCB               	subwfb	(_notpressed+1)& (0+255),f,b
  2719   000400  5BCC               	subwfb	(_notpressed+2)& (0+255),f,b
  2720   000402  5BCD               	subwfb	(_notpressed+3)& (0+255),f,b
  2721   000404  29CA               	incf	_notpressed& (0+255),w,b
  2722   000406  E10A               	bnz	u2751
  2723   000408  29CB               	incf	(_notpressed+1)& (0+255),w,b
  2724   00040A  E108               	bnz	u2751
  2725   00040C  29CC               	incf	(_notpressed+2)& (0+255),w,b
  2726   00040E  E106               	bnz	u2751
  2727   000410  29CD               	incf	(_notpressed+3)& (0+255),w,b
  2728   000412  A4D8               	btfss	status,2,c
  2729   000414  EF0E  F002         	goto	u2751
  2730   000418  EF10  F002         	goto	u2750
  2731   00041C                     u2751:
  2732   00041C  EF24  F002         	goto	l3589
  2733   000420                     u2750:
  2734   000420                     
  2735                           ; BSR set to: 0
  2736                           ;password.c: 21:                  {;password.c: 22:                      notpressed=1000
      +                          0;
  2737   000420  0E10               	movlw	16
  2738   000422  6FCA               	movwf	_notpressed& (0+255),b
  2739   000424  0E27               	movlw	39
  2740   000426  6FCB               	movwf	(_notpressed+1)& (0+255),b
  2741   000428  0E00               	movlw	0
  2742   00042A  6FCC               	movwf	(_notpressed+2)& (0+255),b
  2743   00042C  0E00               	movlw	0
  2744   00042E  6FCD               	movwf	(_notpressed+3)& (0+255),b
  2745                           
  2746                           ;password.c: 23:                      i=0, tryflag=0;
  2747   000430  0E00               	movlw	0
  2748   000432  6E4E               	movwf	_i^0,c
  2749   000434  0E00               	movlw	0
  2750   000436  6FCF               	movwf	(_tryflag+1)& (0+255),b
  2751   000438  0E00               	movlw	0
  2752   00043A  6FCE               	movwf	_tryflag& (0+255),b
  2753                           
  2754                           ;password.c: 24:                      controlflag=1;
  2755   00043C  0E00               	movlw	0
  2756   00043E  6E56               	movwf	(_controlflag+1)^0,c
  2757   000440  0E01               	movlw	1
  2758   000442  6E55               	movwf	_controlflag^0,c
  2759   000444  EF7D  F003         	goto	l323
  2760   000448                     l3589:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;password.c: 27:                 compareflag=0;
  2764   000448  0E00               	movlw	0
  2765   00044A  6F88               	movwf	(_compareflag+1)& (0+255),b
  2766   00044C  0E00               	movlw	0
  2767   00044E  6F87               	movwf	_compareflag& (0+255),b
  2768   000450                     
  2769                           ; BSR set to: 0
  2770                           ;password.c: 28:                 if ((key != 0xFF) && key != 10)
  2771   000450  2813               	incf	logscreen@key^0,w,c
  2772   000452  B4D8               	btfsc	status,2,c
  2773   000454  EF2E  F002         	goto	u2761
  2774   000458  EF30  F002         	goto	u2760
  2775   00045C                     u2761:
  2776   00045C  EF53  F002         	goto	l3603
  2777   000460                     u2760:
  2778   000460                     
  2779                           ; BSR set to: 0
  2780   000460  0E0A               	movlw	10
  2781   000462  1813               	xorwf	logscreen@key^0,w,c
  2782   000464  B4D8               	btfsc	status,2,c
  2783   000466  EF37  F002         	goto	u2771
  2784   00046A  EF39  F002         	goto	u2770
  2785   00046E                     u2771:
  2786   00046E  EF53  F002         	goto	l3603
  2787   000472                     u2770:
  2788   000472                     
  2789                           ; BSR set to: 0
  2790                           ;password.c: 29:                 {;password.c: 30:                     notpressed=10000;
  2791   000472  0E10               	movlw	16
  2792   000474  6FCA               	movwf	_notpressed& (0+255),b
  2793   000476  0E27               	movlw	39
  2794   000478  6FCB               	movwf	(_notpressed+1)& (0+255),b
  2795   00047A  0E00               	movlw	0
  2796   00047C  6FCC               	movwf	(_notpressed+2)& (0+255),b
  2797   00047E  0E00               	movlw	0
  2798   000480  6FCD               	movwf	(_notpressed+3)& (0+255),b
  2799   000482                     
  2800                           ; BSR set to: 0
  2801                           ;password.c: 31:                     uckey[i]=key-11+48;
  2802   000482  0EA6               	movlw	low _uckey
  2803   000484  244E               	addwf	_i^0,w,c
  2804   000486  6ED9               	movwf	fsr2l,c
  2805   000488  6ADA               	clrf	fsr2h,c
  2806   00048A  0E00               	movlw	high _uckey
  2807   00048C  22DA               	addwfc	fsr2h,f,c
  2808   00048E  5013               	movf	logscreen@key^0,w,c
  2809   000490  0F25               	addlw	37
  2810   000492  6EDF               	movwf	indf2,c
  2811   000494                     
  2812                           ; BSR set to: 0
  2813                           ;password.c: 32:                     clcd_putch('*', (0xC0 + (i+5)));
  2814   000494  504E               	movf	_i^0,w,c
  2815   000496  0FC5               	addlw	197
  2816   000498  6E0F               	movwf	clcd_putch@addr^0,c
  2817   00049A  0E2A               	movlw	42
  2818   00049C  EC83  F010         	call	_clcd_putch
  2819   0004A0                     
  2820                           ;password.c: 33:                     i++;
  2821   0004A0  2A4E               	incf	_i^0,f,c
  2822                           
  2823                           ;password.c: 34:                 }
  2824   0004A2  EF9E  F002         	goto	l3621
  2825   0004A6                     l3603:
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;password.c: 36:                 {;password.c: 37:                     if(blinkflag == 0
      +                          )
  2829   0004A6  518B               	movf	_blinkflag& (0+255),w,b
  2830   0004A8  118C               	iorwf	(_blinkflag+1)& (0+255),w,b
  2831   0004AA  A4D8               	btfss	status,2,c
  2832   0004AC  EF5A  F002         	goto	u2781
  2833   0004B0  EF5C  F002         	goto	u2780
  2834   0004B4                     u2781:
  2835   0004B4  EF9E  F002         	goto	l3621
  2836   0004B8                     u2780:
  2837   0004B8                     
  2838                           ; BSR set to: 0
  2839                           ;password.c: 38:                     {;password.c: 39:                         blink++;
  2840   0004B8  4A48               	infsnz	_blink^0,f,c
  2841   0004BA  2A49               	incf	(_blink+1)^0,f,c
  2842   0004BC                     
  2843                           ; BSR set to: 0
  2844                           ;password.c: 40:                         if(blink == 1600)
  2845   0004BC  0E40               	movlw	64
  2846   0004BE  1848               	xorwf	_blink^0,w,c
  2847   0004C0  E107               	bnz	u2791
  2848   0004C2  0E06               	movlw	6
  2849   0004C4  1849               	xorwf	(_blink+1)^0,w,c
  2850   0004C6  A4D8               	btfss	status,2,c
  2851   0004C8  EF68  F002         	goto	u2791
  2852   0004CC  EF6A  F002         	goto	u2790
  2853   0004D0                     u2791:
  2854   0004D0  EF70  F002         	goto	l3611
  2855   0004D4                     u2790:
  2856   0004D4                     
  2857                           ; BSR set to: 0
  2858                           ;password.c: 41:                             blink=0;
  2859   0004D4  0E00               	movlw	0
  2860   0004D6  6E49               	movwf	(_blink+1)^0,c
  2861   0004D8  0E00               	movlw	0
  2862   0004DA  6E48               	movwf	_blink^0,c
  2863   0004DC  EF9E  F002         	goto	l3621
  2864   0004E0                     l3611:
  2865                           
  2866                           ; BSR set to: 0
  2867   0004E0  0E20               	movlw	32
  2868   0004E2  5C48               	subwf	_blink^0,w,c
  2869   0004E4  0E03               	movlw	3
  2870   0004E6  5849               	subwfb	(_blink+1)^0,w,c
  2871   0004E8  B0D8               	btfsc	status,0,c
  2872   0004EA  EF79  F002         	goto	u2801
  2873   0004EE  EF7B  F002         	goto	u2800
  2874   0004F2                     u2801:
  2875   0004F2  EF83  F002         	goto	l3615
  2876   0004F6                     u2800:
  2877   0004F6                     
  2878                           ; BSR set to: 0
  2879                           ;password.c: 43:                         {;password.c: 44:                             c
      +                          lcd_putch('_', (0xC0 + (i+5)));
  2880   0004F6  504E               	movf	_i^0,w,c
  2881   0004F8  0FC5               	addlw	197
  2882   0004FA  6E0F               	movwf	clcd_putch@addr^0,c
  2883   0004FC  0E5F               	movlw	95
  2884   0004FE  EC83  F010         	call	_clcd_putch
  2885                           
  2886                           ;password.c: 45:                         }
  2887   000502  EF9E  F002         	goto	l3621
  2888   000506                     l3615:
  2889                           
  2890                           ; BSR set to: 0
  2891   000506  0E20               	movlw	32
  2892   000508  5C48               	subwf	_blink^0,w,c
  2893   00050A  0E03               	movlw	3
  2894   00050C  5849               	subwfb	(_blink+1)^0,w,c
  2895   00050E  A0D8               	btfss	status,0,c
  2896   000510  EF8C  F002         	goto	u2811
  2897   000514  EF8E  F002         	goto	u2810
  2898   000518                     u2811:
  2899   000518  EF96  F002         	goto	l326
  2900   00051C                     u2810:
  2901   00051C                     
  2902                           ; BSR set to: 0
  2903                           ;password.c: 47:                         {;password.c: 48:                             c
      +                          lcd_putch(' ', (0xC0 + (i+5)));
  2904   00051C  504E               	movf	_i^0,w,c
  2905   00051E  0FC5               	addlw	197
  2906   000520  6E0F               	movwf	clcd_putch@addr^0,c
  2907   000522  0E20               	movlw	32
  2908   000524  EC83  F010         	call	_clcd_putch
  2909   000528  EF9E  F002         	goto	l3621
  2910   00052C                     l326:
  2911                           
  2912                           ; BSR set to: 0
  2913   00052C  EF9E  F002         	goto	l3621
  2914   000530                     l3619:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;password.c: 54:               {;password.c: 55:                 compareflag=1;
  2918   000530  0E00               	movlw	0
  2919   000532  6F88               	movwf	(_compareflag+1)& (0+255),b
  2920   000534  0E01               	movlw	1
  2921   000536  6F87               	movwf	_compareflag& (0+255),b
  2922                           
  2923                           ;password.c: 56:                 i=0;
  2924   000538  0E00               	movlw	0
  2925   00053A  6E4E               	movwf	_i^0,c
  2926   00053C                     l3621:
  2927                           
  2928                           ;password.c: 58:               if(compareflag == 1)
  2929   00053C  0100               	movlb	0	; () banked
  2930   00053E  0587               	decf	_compareflag& (0+255),w,b
  2931   000540  1188               	iorwf	(_compareflag+1)& (0+255),w,b
  2932   000542  A4D8               	btfss	status,2,c
  2933   000544  EFA6  F002         	goto	u2821
  2934   000548  EFA8  F002         	goto	u2820
  2935   00054C                     u2821:
  2936   00054C  EF7D  F003         	goto	l323
  2937   000550                     u2820:
  2938   000550                     
  2939                           ; BSR set to: 0
  2940                           ;password.c: 59:               {;password.c: 60:                 if(!mystrcmp(uckey, pas
      +                          s))
  2941   000550  0EA6               	movlw	low _uckey
  2942   000552  6E01               	movwf	mystrcmp@s1^0,c
  2943   000554  0E00               	movlw	high _uckey
  2944   000556  6E02               	movwf	(mystrcmp@s1+1)^0,c
  2945   000558  0EAB               	movlw	low _pass
  2946   00055A  6E03               	movwf	mystrcmp@s2^0,c
  2947   00055C  0E00               	movlw	high _pass
  2948   00055E  6E04               	movwf	(mystrcmp@s2+1)^0,c
  2949   000560  EC16  F00E         	call	_mystrcmp	;wreg free
  2950   000564  5001               	movf	?_mystrcmp^0,w,c
  2951   000566  1002               	iorwf	(?_mystrcmp+1)^0,w,c
  2952   000568  A4D8               	btfss	status,2,c
  2953   00056A  EFB9  F002         	goto	u2831
  2954   00056E  EFBB  F002         	goto	u2830
  2955   000572                     u2831:
  2956   000572  EF21  F003         	goto	l3653
  2957   000576                     u2830:
  2958   000576                     
  2959                           ;password.c: 61:                 {;password.c: 62:                     enterflag=1;
  2960   000576  0E00               	movlw	0
  2961   000578  0100               	movlb	0	; () banked
  2962   00057A  6F8A               	movwf	(_enterflag+1)& (0+255),b
  2963   00057C  0E01               	movlw	1
  2964   00057E  6F89               	movwf	_enterflag& (0+255),b
  2965                           
  2966                           ;password.c: 63:                     blinkflag=1;
  2967   000580  0E00               	movlw	0
  2968   000582  6F8C               	movwf	(_blinkflag+1)& (0+255),b
  2969   000584  0E01               	movlw	1
  2970   000586  6F8B               	movwf	_blinkflag& (0+255),b
  2971                           
  2972                           ;password.c: 64:                     for(unsigned int wait=50000; wait--;);
  2973   000588  0EC3               	movlw	195
  2974   00058A  6E12               	movwf	(logscreen@wait+1)^0,c
  2975   00058C  0E50               	movlw	80
  2976   00058E  6E11               	movwf	logscreen@wait^0,c
  2977   000590                     l3627:
  2978   000590  0611               	decf	logscreen@wait^0,f,c
  2979   000592  A0D8               	btfss	status,0,c
  2980   000594  0612               	decf	(logscreen@wait+1)^0,f,c
  2981   000596  2811               	incf	logscreen@wait^0,w,c
  2982   000598  E106               	bnz	u2841
  2983   00059A  2812               	incf	(logscreen@wait+1)^0,w,c
  2984   00059C  A4D8               	btfss	status,2,c
  2985   00059E  EFD3  F002         	goto	u2841
  2986   0005A2  EFD5  F002         	goto	u2840
  2987   0005A6                     u2841:
  2988   0005A6  EFC8  F002         	goto	l3627
  2989   0005AA                     u2840:
  2990   0005AA                     
  2991                           ;password.c: 65:                     clcd_print( (unsigned char*) "  Code Passed   ", (0
      +                          x80 + (0)));
  2992   0005AA  0EB1               	movlw	low STR_12
  2993   0005AC  6E03               	movwf	clcd_print@data^0,c
  2994   0005AE  0E2E               	movlw	high STR_12
  2995   0005B0  6E04               	movwf	(clcd_print@data+1)^0,c
  2996   0005B2  0E80               	movlw	128
  2997   0005B4  6E05               	movwf	clcd_print@addr^0,c
  2998   0005B6  EC4C  F00E         	call	_clcd_print	;wreg free
  2999                           
  3000                           ;password.c: 66:                     clcd_print( (unsigned char*) " Car Black Box  ", (0
      +                          xC0 + (0)));
  3001   0005BA  0ED3               	movlw	low STR_13
  3002   0005BC  6E03               	movwf	clcd_print@data^0,c
  3003   0005BE  0E2E               	movlw	high STR_13
  3004   0005C0  6E04               	movwf	(clcd_print@data+1)^0,c
  3005   0005C2  0EC0               	movlw	192
  3006   0005C4  6E05               	movwf	clcd_print@addr^0,c
  3007   0005C6  EC4C  F00E         	call	_clcd_print	;wreg free
  3008   0005CA                     
  3009                           ;password.c: 67:                     for(wait=500000; wait--;);
  3010   0005CA  0E20               	movlw	32
  3011   0005CC  0100               	movlb	0	; () banked
  3012   0005CE  6F7A               	movwf	_wait& (0+255),b
  3013   0005D0  0EA1               	movlw	161
  3014   0005D2  6F7B               	movwf	(_wait+1)& (0+255),b
  3015   0005D4  0E07               	movlw	7
  3016   0005D6  6F7C               	movwf	(_wait+2)& (0+255),b
  3017   0005D8  0E00               	movlw	0
  3018   0005DA  6F7D               	movwf	(_wait+3)& (0+255),b
  3019   0005DC                     l3633:
  3020                           
  3021                           ; BSR set to: 0
  3022   0005DC  077A               	decf	_wait& (0+255),f,b
  3023   0005DE  0E00               	movlw	0
  3024   0005E0  5B7B               	subwfb	(_wait+1)& (0+255),f,b
  3025   0005E2  5B7C               	subwfb	(_wait+2)& (0+255),f,b
  3026   0005E4  5B7D               	subwfb	(_wait+3)& (0+255),f,b
  3027   0005E6  297A               	incf	_wait& (0+255),w,b
  3028   0005E8  E10A               	bnz	u2851
  3029   0005EA  297B               	incf	(_wait+1)& (0+255),w,b
  3030   0005EC  E108               	bnz	u2851
  3031   0005EE  297C               	incf	(_wait+2)& (0+255),w,b
  3032   0005F0  E106               	bnz	u2851
  3033   0005F2  297D               	incf	(_wait+3)& (0+255),w,b
  3034   0005F4  A4D8               	btfss	status,2,c
  3035   0005F6  EFFF  F002         	goto	u2851
  3036   0005FA  EF01  F003         	goto	u2850
  3037   0005FE                     u2851:
  3038   0005FE  EFEE  F002         	goto	l3633
  3039   000602                     u2850:
  3040   000602                     
  3041                           ; BSR set to: 0
  3042                           ;password.c: 68:                     clcd_write(0x01, 0);
  3043   000602  0E00               	movlw	0
  3044   000604  6E01               	movwf	clcd_write@control_bit^0,c
  3045   000606  0E01               	movlw	1
  3046   000608  ECBF  F00F         	call	_clcd_write
  3047   00060C                     
  3048                           ;password.c: 69:                     controlflag=3;
  3049   00060C  0E00               	movlw	0
  3050   00060E  6E56               	movwf	(_controlflag+1)^0,c
  3051   000610  0E03               	movlw	3
  3052   000612  6E55               	movwf	_controlflag^0,c
  3053   000614                     l3639:
  3054                           
  3055                           ;password.c: 70:                     blink=0, tryflag=3, enterflag=0, compareflag=0,blin
      +                          kflag=0;
  3056   000614  0E00               	movlw	0
  3057   000616  6E49               	movwf	(_blink+1)^0,c
  3058   000618  0E00               	movlw	0
  3059   00061A  6E48               	movwf	_blink^0,c
  3060   00061C  0E00               	movlw	0
  3061   00061E  0100               	movlb	0	; () banked
  3062   000620  6FCF               	movwf	(_tryflag+1)& (0+255),b
  3063   000622  0E03               	movlw	3
  3064   000624  6FCE               	movwf	_tryflag& (0+255),b
  3065   000626                     
  3066                           ; BSR set to: 0
  3067   000626  0E00               	movlw	0
  3068   000628  6F8A               	movwf	(_enterflag+1)& (0+255),b
  3069   00062A  0E00               	movlw	0
  3070   00062C  6F89               	movwf	_enterflag& (0+255),b
  3071   00062E                     
  3072                           ; BSR set to: 0
  3073   00062E  0E00               	movlw	0
  3074   000630  6F88               	movwf	(_compareflag+1)& (0+255),b
  3075   000632  0E00               	movlw	0
  3076   000634  6F87               	movwf	_compareflag& (0+255),b
  3077   000636                     
  3078                           ; BSR set to: 0
  3079   000636  0E00               	movlw	0
  3080   000638  6F8C               	movwf	(_blinkflag+1)& (0+255),b
  3081   00063A  0E00               	movlw	0
  3082   00063C  6F8B               	movwf	_blinkflag& (0+255),b
  3083   00063E  EF7D  F003         	goto	l323
  3084   000642                     l3653:
  3085                           
  3086                           ;password.c: 74:                 {;password.c: 75:                     notpressed=10000;
  3087   000642  0E10               	movlw	16
  3088   000644  0100               	movlb	0	; () banked
  3089   000646  6FCA               	movwf	_notpressed& (0+255),b
  3090   000648  0E27               	movlw	39
  3091   00064A  6FCB               	movwf	(_notpressed+1)& (0+255),b
  3092   00064C  0E00               	movlw	0
  3093   00064E  6FCC               	movwf	(_notpressed+2)& (0+255),b
  3094   000650  0E00               	movlw	0
  3095   000652  6FCD               	movwf	(_notpressed+3)& (0+255),b
  3096                           
  3097                           ;password.c: 76:                     enterflag=1;
  3098   000654  0E00               	movlw	0
  3099   000656  6F8A               	movwf	(_enterflag+1)& (0+255),b
  3100   000658  0E01               	movlw	1
  3101   00065A  6F89               	movwf	_enterflag& (0+255),b
  3102   00065C                     
  3103                           ; BSR set to: 0
  3104                           ;password.c: 77:                      clcd_print( (unsigned char*) " Wrong Password ", (
      +                          0x80 + (0)));
  3105   00065C  0EF5               	movlw	low STR_14
  3106   00065E  6E03               	movwf	clcd_print@data^0,c
  3107   000660  0E2E               	movlw	high STR_14
  3108   000662  6E04               	movwf	(clcd_print@data+1)^0,c
  3109   000664  0E80               	movlw	128
  3110   000666  6E05               	movwf	clcd_print@addr^0,c
  3111   000668  EC4C  F00E         	call	_clcd_print	;wreg free
  3112   00066C                     
  3113                           ;password.c: 78:                      clcd_print( (unsigned char*) " attempt Remains", (
      +                          0xC0 + (1)));
  3114   00066C  0E17               	movlw	low STR_15
  3115   00066E  6E03               	movwf	clcd_print@data^0,c
  3116   000670  0E2F               	movlw	high STR_15
  3117   000672  6E04               	movwf	(clcd_print@data+1)^0,c
  3118   000674  0EC1               	movlw	193
  3119   000676  6E05               	movwf	clcd_print@addr^0,c
  3120   000678  EC4C  F00E         	call	_clcd_print	;wreg free
  3121   00067C                     
  3122                           ;password.c: 79:                      tryflag--;
  3123   00067C  0100               	movlb	0	; () banked
  3124   00067E  07CE               	decf	_tryflag& (0+255),f,b
  3125   000680  A0D8               	btfss	status,0,c
  3126   000682  07CF               	decf	(_tryflag+1)& (0+255),f,b
  3127   000684                     
  3128                           ; BSR set to: 0
  3129                           ;password.c: 80:                      clcd_putch((unsigned char)tryflag+48, (0xC0 + (0))
      +                          );
  3130   000684  0EC0               	movlw	192
  3131   000686  6E0F               	movwf	clcd_putch@addr^0,c
  3132   000688  51CE               	movf	_tryflag& (0+255),w,b
  3133   00068A  0F30               	addlw	48
  3134   00068C  EC83  F010         	call	_clcd_putch
  3135   000690                     
  3136                           ;password.c: 81:                      for(wait=1000000; wait--;);
  3137   000690  0E40               	movlw	64
  3138   000692  0100               	movlb	0	; () banked
  3139   000694  6F7A               	movwf	_wait& (0+255),b
  3140   000696  0E42               	movlw	66
  3141   000698  6F7B               	movwf	(_wait+1)& (0+255),b
  3142   00069A  0E0F               	movlw	15
  3143   00069C  6F7C               	movwf	(_wait+2)& (0+255),b
  3144   00069E  0E00               	movlw	0
  3145   0006A0  6F7D               	movwf	(_wait+3)& (0+255),b
  3146   0006A2                     l3665:
  3147                           
  3148                           ; BSR set to: 0
  3149   0006A2  077A               	decf	_wait& (0+255),f,b
  3150   0006A4  0E00               	movlw	0
  3151   0006A6  5B7B               	subwfb	(_wait+1)& (0+255),f,b
  3152   0006A8  5B7C               	subwfb	(_wait+2)& (0+255),f,b
  3153   0006AA  5B7D               	subwfb	(_wait+3)& (0+255),f,b
  3154   0006AC  297A               	incf	_wait& (0+255),w,b
  3155   0006AE  E10A               	bnz	u2861
  3156   0006B0  297B               	incf	(_wait+1)& (0+255),w,b
  3157   0006B2  E108               	bnz	u2861
  3158   0006B4  297C               	incf	(_wait+2)& (0+255),w,b
  3159   0006B6  E106               	bnz	u2861
  3160   0006B8  297D               	incf	(_wait+3)& (0+255),w,b
  3161   0006BA  A4D8               	btfss	status,2,c
  3162   0006BC  EF62  F003         	goto	u2861
  3163   0006C0  EF64  F003         	goto	u2860
  3164   0006C4                     u2861:
  3165   0006C4  EF51  F003         	goto	l3665
  3166   0006C8                     u2860:
  3167   0006C8                     
  3168                           ; BSR set to: 0
  3169                           ;password.c: 82:                      clcd_write(0x01, 0);
  3170   0006C8  0E00               	movlw	0
  3171   0006CA  6E01               	movwf	clcd_write@control_bit^0,c
  3172   0006CC  0E01               	movlw	1
  3173   0006CE  ECBF  F00F         	call	_clcd_write
  3174   0006D2                     
  3175                           ;password.c: 83:                      enterflag=0;
  3176   0006D2  0E00               	movlw	0
  3177   0006D4  0100               	movlb	0	; () banked
  3178   0006D6  6F8A               	movwf	(_enterflag+1)& (0+255),b
  3179   0006D8  0E00               	movlw	0
  3180   0006DA  6F89               	movwf	_enterflag& (0+255),b
  3181   0006DC  EF7D  F003         	goto	l323
  3182   0006E0                     l3671:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;password.c: 88:        {;password.c: 89:               enterflag=1;
  3186   0006E0  0E00               	movlw	0
  3187   0006E2  6F8A               	movwf	(_enterflag+1)& (0+255),b
  3188   0006E4  0E01               	movlw	1
  3189   0006E6  6F89               	movwf	_enterflag& (0+255),b
  3190   0006E8                     
  3191                           ; BSR set to: 0
  3192                           ;password.c: 90:               clcd_write(0x01, 0);
  3193   0006E8  0E00               	movlw	0
  3194   0006EA  6E01               	movwf	clcd_write@control_bit^0,c
  3195   0006EC  0E01               	movlw	1
  3196   0006EE  ECBF  F00F         	call	_clcd_write
  3197   0006F2                     
  3198                           ;password.c: 91:               timeleft();
  3199   0006F2  EC60  F00A         	call	_timeleft	;wreg free
  3200   0006F6  EF0A  F003         	goto	l3639
  3201   0006FA                     l323:
  3202                           
  3203                           ; BSR set to: 0
  3204   0006FA  0012               	return		;funcret
  3205   0006FC                     __end_of_logscreen:
  3206                           	callstack 0
  3207                           
  3208 ;; *************** function _timeleft *****************
  3209 ;; Defined at:
  3210 ;;		line 95 in file "password.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;		None
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3224 ;;      Params:         0       0       0       0       0       0       0
  3225 ;;      Locals:         0       0       0       0       0       0       0
  3226 ;;      Temps:          0       0       0       0       0       0       0
  3227 ;;      Totals:         0       0       0       0       0       0       0
  3228 ;;Total ram usage:        0 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 3
  3231 ;; This function calls:
  3232 ;;		___awdiv
  3233 ;;		___awmod
  3234 ;;		_clcd_print
  3235 ;;		_clcd_putch
  3236 ;;		_clcd_write
  3237 ;; This function is called by:
  3238 ;;		_logscreen
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text8
  3243   0014C0                     __ptext8:
  3244                           	callstack 0
  3245   0014C0                     _timeleft:
  3246                           	callstack 26
  3247   0014C0                     
  3248                           ;password.c: 97:     clcd_write(0x01, 0);
  3249   0014C0  0E00               	movlw	0
  3250   0014C2  6E01               	movwf	clcd_write@control_bit^0,c
  3251   0014C4  0E01               	movlw	1
  3252   0014C6  ECBF  F00F         	call	_clcd_write
  3253   0014CA                     
  3254                           ;password.c: 98:     min=0;
  3255   0014CA  0E00               	movlw	0
  3256   0014CC  0100               	movlb	0	; () banked
  3257   0014CE  6F8E               	movwf	(_min+1)& (0+255),b
  3258   0014D0  0E00               	movlw	0
  3259   0014D2  6F8D               	movwf	_min& (0+255),b
  3260   0014D4                     
  3261                           ; BSR set to: 0
  3262                           ;password.c: 99:     TMR0ON=1;
  3263   0014D4  8ED5               	bsf	4053,7,c	;volatile
  3264                           
  3265                           ;password.c: 100:     while(sec!=0)
  3266   0014D6  EFAF  F00A         	goto	l3371
  3267   0014DA                     l3365:
  3268                           
  3269                           ;password.c: 101:     {;password.c: 102:         clcd_print( (unsigned char*) "Try Again
      +                           left" , (0x80 + (0)));
  3270   0014DA  0E76               	movlw	low STR_16
  3271   0014DC  6E03               	movwf	clcd_print@data^0,c
  3272   0014DE  0E2F               	movlw	high STR_16
  3273   0014E0  6E04               	movwf	(clcd_print@data+1)^0,c
  3274   0014E2  0E80               	movlw	128
  3275   0014E4  6E05               	movwf	clcd_print@addr^0,c
  3276   0014E6  EC4C  F00E         	call	_clcd_print	;wreg free
  3277                           
  3278                           ;password.c: 103:         clcd_print( (unsigned char*) "Wait for", (0xC0 + (0)));
  3279   0014EA  0ED9               	movlw	low STR_17
  3280   0014EC  6E03               	movwf	clcd_print@data^0,c
  3281   0014EE  0E2F               	movlw	high STR_17
  3282   0014F0  6E04               	movwf	(clcd_print@data+1)^0,c
  3283   0014F2  0EC0               	movlw	192
  3284   0014F4  6E05               	movwf	clcd_print@addr^0,c
  3285   0014F6  EC4C  F00E         	call	_clcd_print	;wreg free
  3286                           
  3287                           ;password.c: 104:         clcd_print( (unsigned char*) " s  ", (0xC0 + (11)));
  3288   0014FA  0EE2               	movlw	low STR_18
  3289   0014FC  6E03               	movwf	clcd_print@data^0,c
  3290   0014FE  0E2F               	movlw	high STR_18
  3291   001500  6E04               	movwf	(clcd_print@data+1)^0,c
  3292   001502  0ECB               	movlw	203
  3293   001504  6E05               	movwf	clcd_print@addr^0,c
  3294   001506  EC4C  F00E         	call	_clcd_print	;wreg free
  3295   00150A                     
  3296                           ;password.c: 106:         clcd_putch(sec%10+48, (0xC0 + (10)));
  3297   00150A  0ECA               	movlw	202
  3298   00150C  6E0F               	movwf	clcd_putch@addr^0,c
  3299   00150E  C053  F009         	movff	_sec,___awmod@dividend
  3300   001512  C054  F00A         	movff	_sec+1,___awmod@dividend+1
  3301   001516  0E00               	movlw	0
  3302   001518  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3303   00151A  0E0A               	movlw	10
  3304   00151C  6E0B               	movwf	___awmod@divisor^0,c
  3305   00151E  ECE7  F00B         	call	___awmod	;wreg free
  3306   001522  5009               	movf	?___awmod^0,w,c
  3307   001524  0F30               	addlw	48
  3308   001526  EC83  F010         	call	_clcd_putch
  3309   00152A                     
  3310                           ;password.c: 107:         clcd_putch(((sec/10)%10)+48, (0xC0 + (9)));
  3311   00152A  0EC9               	movlw	201
  3312   00152C  6E0F               	movwf	clcd_putch@addr^0,c
  3313   00152E  0E00               	movlw	0
  3314   001530  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3315   001532  0E0A               	movlw	10
  3316   001534  6E03               	movwf	___awdiv@divisor^0,c
  3317   001536  C053  F001         	movff	_sec,___awdiv@dividend
  3318   00153A  C054  F002         	movff	_sec+1,___awdiv@dividend+1
  3319   00153E  EC26  F00B         	call	___awdiv	;wreg free
  3320   001542  C001  F009         	movff	?___awdiv,___awmod@dividend
  3321   001546  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  3322   00154A  0E00               	movlw	0
  3323   00154C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3324   00154E  0E0A               	movlw	10
  3325   001550  6E0B               	movwf	___awmod@divisor^0,c
  3326   001552  ECE7  F00B         	call	___awmod	;wreg free
  3327   001556  5009               	movf	?___awmod^0,w,c
  3328   001558  0F30               	addlw	48
  3329   00155A  EC83  F010         	call	_clcd_putch
  3330   00155E                     l3371:
  3331                           
  3332                           ;password.c: 100:     while(sec!=0)
  3333   00155E  5053               	movf	_sec^0,w,c
  3334   001560  1054               	iorwf	(_sec+1)^0,w,c
  3335   001562  A4D8               	btfss	status,2,c
  3336   001564  EFB6  F00A         	goto	u2431
  3337   001568  EFB8  F00A         	goto	u2430
  3338   00156C                     u2431:
  3339   00156C  EF6D  F00A         	goto	l3365
  3340   001570                     u2430:
  3341   001570                     
  3342                           ;password.c: 109:     TMR0ON=0;
  3343   001570  9ED5               	bcf	4053,7,c	;volatile
  3344   001572                     
  3345                           ;password.c: 110:     sec=10;
  3346   001572  0E00               	movlw	0
  3347   001574  6E54               	movwf	(_sec+1)^0,c
  3348   001576  0E0A               	movlw	10
  3349   001578  6E53               	movwf	_sec^0,c
  3350   00157A                     
  3351                           ;password.c: 111:     clcd_write(0x01, 0);
  3352   00157A  0E00               	movlw	0
  3353   00157C  6E01               	movwf	clcd_write@control_bit^0,c
  3354   00157E  0E01               	movlw	1
  3355   001580  ECBF  F00F         	call	_clcd_write
  3356   001584  0012               	return		;funcret
  3357   001586                     __end_of_timeleft:
  3358                           	callstack 0
  3359                           
  3360 ;; *************** function ___awdiv *****************
  3361 ;; Defined at:
  3362 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  dividend        2    0[COMRAM] int 
  3365 ;;  divisor         2    2[COMRAM] int 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  quotient        2    6[COMRAM] int 
  3368 ;;  sign            1    5[COMRAM] unsigned char 
  3369 ;;  counter         1    4[COMRAM] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  2    0[COMRAM] int 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3379 ;;      Params:         4       0       0       0       0       0       0
  3380 ;;      Locals:         4       0       0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0
  3382 ;;      Totals:         8       0       0       0       0       0       0
  3383 ;;Total ram usage:        8 bytes
  3384 ;; Hardware stack levels used: 1
  3385 ;; Hardware stack levels required when called: 1
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_timeleft
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text9
  3394   00164C                     __ptext9:
  3395                           	callstack 0
  3396   00164C                     ___awdiv:
  3397                           	callstack 27
  3398   00164C  0E00               	movlw	0
  3399   00164E  6E06               	movwf	___awdiv@sign^0,c
  3400   001650  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3401   001652  EF2F  F00B         	goto	u2000
  3402   001656  EF2D  F00B         	goto	u2001
  3403   00165A                     u2001:
  3404   00165A  EF35  F00B         	goto	l3005
  3405   00165E                     u2000:
  3406   00165E  6C03               	negf	___awdiv@divisor^0,c
  3407   001660  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3408   001662  B0D8               	btfsc	status,0,c
  3409   001664  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3410   001666  0E01               	movlw	1
  3411   001668  6E06               	movwf	___awdiv@sign^0,c
  3412   00166A                     l3005:
  3413   00166A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3414   00166C  EF3C  F00B         	goto	u2010
  3415   001670  EF3A  F00B         	goto	u2011
  3416   001674                     u2011:
  3417   001674  EF42  F00B         	goto	l3011
  3418   001678                     u2010:
  3419   001678  6C01               	negf	___awdiv@dividend^0,c
  3420   00167A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3421   00167C  B0D8               	btfsc	status,0,c
  3422   00167E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3423   001680  0E01               	movlw	1
  3424   001682  1A06               	xorwf	___awdiv@sign^0,f,c
  3425   001684                     l3011:
  3426   001684  0E00               	movlw	0
  3427   001686  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3428   001688  0E00               	movlw	0
  3429   00168A  6E07               	movwf	___awdiv@quotient^0,c
  3430   00168C  5003               	movf	___awdiv@divisor^0,w,c
  3431   00168E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3432   001690  B4D8               	btfsc	status,2,c
  3433   001692  EF4D  F00B         	goto	u2021
  3434   001696  EF4F  F00B         	goto	u2020
  3435   00169A                     u2021:
  3436   00169A  EF77  F00B         	goto	l3033
  3437   00169E                     u2020:
  3438   00169E  0E01               	movlw	1
  3439   0016A0  6E05               	movwf	___awdiv@counter^0,c
  3440   0016A2  EF57  F00B         	goto	l3019
  3441   0016A6                     l3017:
  3442   0016A6  90D8               	bcf	status,0,c
  3443   0016A8  3603               	rlcf	___awdiv@divisor^0,f,c
  3444   0016AA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3445   0016AC  2A05               	incf	___awdiv@counter^0,f,c
  3446   0016AE                     l3019:
  3447   0016AE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3448   0016B0  EF5C  F00B         	goto	u2031
  3449   0016B4  EF5E  F00B         	goto	u2030
  3450   0016B8                     u2031:
  3451   0016B8  EF53  F00B         	goto	l3017
  3452   0016BC                     u2030:
  3453   0016BC                     l3021:
  3454   0016BC  90D8               	bcf	status,0,c
  3455   0016BE  3607               	rlcf	___awdiv@quotient^0,f,c
  3456   0016C0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3457   0016C2  5003               	movf	___awdiv@divisor^0,w,c
  3458   0016C4  5C01               	subwf	___awdiv@dividend^0,w,c
  3459   0016C6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3460   0016C8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3461   0016CA  A0D8               	btfss	status,0,c
  3462   0016CC  EF6A  F00B         	goto	u2041
  3463   0016D0  EF6C  F00B         	goto	u2040
  3464   0016D4                     u2041:
  3465   0016D4  EF71  F00B         	goto	l3029
  3466   0016D8                     u2040:
  3467   0016D8  5003               	movf	___awdiv@divisor^0,w,c
  3468   0016DA  5E01               	subwf	___awdiv@dividend^0,f,c
  3469   0016DC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3470   0016DE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3471   0016E0  8007               	bsf	___awdiv@quotient^0,0,c
  3472   0016E2                     l3029:
  3473   0016E2  90D8               	bcf	status,0,c
  3474   0016E4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3475   0016E6  3203               	rrcf	___awdiv@divisor^0,f,c
  3476   0016E8  2E05               	decfsz	___awdiv@counter^0,f,c
  3477   0016EA  EF5E  F00B         	goto	l3021
  3478   0016EE                     l3033:
  3479   0016EE  5006               	movf	___awdiv@sign^0,w,c
  3480   0016F0  B4D8               	btfsc	status,2,c
  3481   0016F2  EF7D  F00B         	goto	u2051
  3482   0016F6  EF7F  F00B         	goto	u2050
  3483   0016FA                     u2051:
  3484   0016FA  EF83  F00B         	goto	l3037
  3485   0016FE                     u2050:
  3486   0016FE  6C07               	negf	___awdiv@quotient^0,c
  3487   001700  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3488   001702  B0D8               	btfsc	status,0,c
  3489   001704  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3490   001706                     l3037:
  3491   001706  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3492   00170A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3493   00170E  0012               	return		;funcret
  3494   001710                     __end_of___awdiv:
  3495                           	callstack 0
  3496                           
  3497 ;; *************** function _init_config *****************
  3498 ;; Defined at:
  3499 ;;		line 9 in file "main.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3513 ;;      Params:         0       0       0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0
  3516 ;;      Totals:         0       0       0       0       0       0       0
  3517 ;;Total ram usage:        0 bytes
  3518 ;; Hardware stack levels used: 1
  3519 ;; Hardware stack levels required when called: 6
  3520 ;; This function calls:
  3521 ;;		_init_adc
  3522 ;;		_init_clcd
  3523 ;;		_init_ds1307
  3524 ;;		_init_i2c
  3525 ;;		_init_matrixkeypad
  3526 ;;		_init_timer0
  3527 ;; This function is called by:
  3528 ;;		_main
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text10
  3533   0020D2                     __ptext10:
  3534                           	callstack 0
  3535   0020D2                     _init_config:
  3536                           	callstack 24
  3537   0020D2                     
  3538                           ;main.c: 10:     init_matrixkeypad();
  3539   0020D2  ECAC  F010         	call	_init_matrixkeypad	;wreg free
  3540                           
  3541                           ;main.c: 11:     init_clcd();
  3542   0020D6  EC88  F00B         	call	_init_clcd	;wreg free
  3543   0020DA                     
  3544                           ;main.c: 12:     init_adc();
  3545   0020DA  EC4C  F010         	call	_init_adc	;wreg free
  3546   0020DE                     
  3547                           ;main.c: 13:     init_timer0();
  3548   0020DE  EC76  F010         	call	_init_timer0	;wreg free
  3549   0020E2                     
  3550                           ;main.c: 14:     init_i2c();
  3551   0020E2  EC8F  F010         	call	_init_i2c	;wreg free
  3552   0020E6                     
  3553                           ;main.c: 15:  init_ds1307();
  3554   0020E6  EC60  F00F         	call	_init_ds1307	;wreg free
  3555   0020EA  0012               	return		;funcret
  3556   0020EC                     __end_of_init_config:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function _init_timer0 *****************
  3560 ;; Defined at:
  3561 ;;		line 3 in file "timer0.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3575 ;;      Params:         0       0       0       0       0       0       0
  3576 ;;      Locals:         0       0       0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0
  3578 ;;      Totals:         0       0       0       0       0       0       0
  3579 ;;Total ram usage:        0 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 1
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_init_config
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text11
  3590   0020EC                     __ptext11:
  3591                           	callstack 0
  3592   0020EC                     _init_timer0:
  3593                           	callstack 28
  3594   0020EC                     
  3595                           ;timer0.c: 5:     GIE=1;
  3596   0020EC  8EF2               	bsf	4082,7,c	;volatile
  3597                           
  3598                           ;timer0.c: 6:     PEIE=1;
  3599   0020EE  8CF2               	bsf	4082,6,c	;volatile
  3600                           
  3601                           ;timer0.c: 7:     TMR0IE=1;
  3602   0020F0  8AF2               	bsf	4082,5,c	;volatile
  3603                           
  3604                           ;timer0.c: 8:     TMR0ON=0;
  3605   0020F2  9ED5               	bcf	4053,7,c	;volatile
  3606                           
  3607                           ;timer0.c: 9:     TMR0IF=0;
  3608   0020F4  94F2               	bcf	4082,2,c	;volatile
  3609                           
  3610                           ;timer0.c: 11:     T08BIT=1;
  3611   0020F6  8CD5               	bsf	4053,6,c	;volatile
  3612                           
  3613                           ;timer0.c: 12:     T0CS = 0;
  3614   0020F8  9AD5               	bcf	4053,5,c	;volatile
  3615                           
  3616                           ;timer0.c: 13:     PSA = 1;
  3617   0020FA  86D5               	bsf	4053,3,c	;volatile
  3618   0020FC                     
  3619                           ;timer0.c: 14:     TMR0 = 6;
  3620   0020FC  0E00               	movlw	0
  3621   0020FE  6ED7               	movwf	215,c	;volatile
  3622   002100  0E06               	movlw	6
  3623   002102  6ED6               	movwf	214,c	;volatile
  3624   002104  0012               	return		;funcret
  3625   002106                     __end_of_init_timer0:
  3626                           	callstack 0
  3627                           
  3628 ;; *************** function _init_matrixkeypad *****************
  3629 ;; Defined at:
  3630 ;;		line 3 in file "matrixkeyboard.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3644 ;;      Params:         0       0       0       0       0       0       0
  3645 ;;      Locals:         0       0       0       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0       0       0
  3647 ;;      Totals:         0       0       0       0       0       0       0
  3648 ;;Total ram usage:        0 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 1
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_init_config
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text12
  3659   002158                     __ptext12:
  3660                           	callstack 0
  3661   002158                     _init_matrixkeypad:
  3662                           	callstack 28
  3663   002158                     
  3664                           ;matrixkeyboard.c: 5:     PORTB =0x00;
  3665   002158  0E00               	movlw	0
  3666   00215A  6E81               	movwf	129,c	;volatile
  3667   00215C                     
  3668                           ;matrixkeyboard.c: 6:     TRISB = TRISB & 0x1E;
  3669   00215C  5093               	movf	147,w,c	;volatile
  3670   00215E  0B1E               	andlw	30
  3671   002160  6E93               	movwf	147,c	;volatile
  3672   002162                     
  3673                           ;matrixkeyboard.c: 7:     RBPU=0;
  3674   002162  9EF1               	bcf	4081,7,c	;volatile
  3675   002164  0012               	return		;funcret
  3676   002166                     __end_of_init_matrixkeypad:
  3677                           	callstack 0
  3678                           
  3679 ;; *************** function _init_i2c *****************
  3680 ;; Defined at:
  3681 ;;		line 4 in file "i2c.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;		None
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		wreg, status,2
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3695 ;;      Params:         0       0       0       0       0       0       0
  3696 ;;      Locals:         0       0       0       0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0
  3698 ;;      Totals:         0       0       0       0       0       0       0
  3699 ;;Total ram usage:        0 bytes
  3700 ;; Hardware stack levels used: 1
  3701 ;; Hardware stack levels required when called: 1
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_init_config
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text13
  3710   00211E                     __ptext13:
  3711                           	callstack 0
  3712   00211E                     _init_i2c:
  3713                           	callstack 28
  3714   00211E                     
  3715                           ;i2c.c: 7:  TRISC3 = 1;
  3716   00211E  8694               	bsf	3988,3,c	;volatile
  3717                           
  3718                           ;i2c.c: 8:  TRISC4 = 1;
  3719   002120  8894               	bsf	3988,4,c	;volatile
  3720   002122                     
  3721                           ;i2c.c: 10:  SSPCON1 = 0x28;
  3722   002122  0E28               	movlw	40
  3723   002124  6EC6               	movwf	198,c	;volatile
  3724                           
  3725                           ;i2c.c: 12:  SSPADD = 0x31;
  3726   002126  0E31               	movlw	49
  3727   002128  6EC8               	movwf	200,c	;volatile
  3728   00212A                     
  3729                           ;i2c.c: 14:  CKE = 0;
  3730   00212A  9CC7               	bcf	4039,6,c	;volatile
  3731   00212C                     
  3732                           ;i2c.c: 16:  SMP = 1;
  3733   00212C  8EC7               	bsf	4039,7,c	;volatile
  3734   00212E                     
  3735                           ;i2c.c: 18:  SSPIF = 0;
  3736   00212E  969E               	bcf	3998,3,c	;volatile
  3737   002130                     
  3738                           ;i2c.c: 20:  BCLIF = 0;
  3739   002130  96A1               	bcf	4001,3,c	;volatile
  3740   002132  0012               	return		;funcret
  3741   002134                     __end_of_init_i2c:
  3742                           	callstack 0
  3743                           
  3744 ;; *************** function _init_ds1307 *****************
  3745 ;; Defined at:
  3746 ;;		line 13 in file "ds1307.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  dummy           1    3[COMRAM] unsigned char 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, status,0, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3760 ;;      Params:         0       0       0       0       0       0       0
  3761 ;;      Locals:         1       0       0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0
  3763 ;;      Totals:         1       0       0       0       0       0       0
  3764 ;;Total ram usage:        1 bytes
  3765 ;; Hardware stack levels used: 1
  3766 ;; Hardware stack levels required when called: 5
  3767 ;; This function calls:
  3768 ;;		_read_ds1307
  3769 ;;		_write_ds1307
  3770 ;; This function is called by:
  3771 ;;		_init_config
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text14
  3776   001EC0                     __ptext14:
  3777                           	callstack 0
  3778   001EC0                     _init_ds1307:
  3779                           	callstack 24
  3780   001EC0                     
  3781                           ;ds1307.c: 15:  unsigned char dummy;;ds1307.c: 18:  dummy = read_ds1307(0x00);
  3782   001EC0  0E00               	movlw	0
  3783   001EC2  EC05  F010         	call	_read_ds1307
  3784   001EC6  6E04               	movwf	init_ds1307@dummy^0,c
  3785   001EC8                     
  3786                           ;ds1307.c: 19:  write_ds1307(0x00, dummy | 0x80);
  3787   001EC8  5004               	movf	init_ds1307@dummy^0,w,c
  3788   001ECA  0980               	iorlw	128
  3789   001ECC  6E02               	movwf	write_ds1307@data^0,c
  3790   001ECE  0E00               	movlw	0
  3791   001ED0  EC3D  F010         	call	_write_ds1307
  3792   001ED4                     
  3793                           ;ds1307.c: 22:  dummy = read_ds1307(0x02);
  3794   001ED4  0E02               	movlw	2
  3795   001ED6  EC05  F010         	call	_read_ds1307
  3796   001EDA  6E04               	movwf	init_ds1307@dummy^0,c
  3797                           
  3798                           ;ds1307.c: 23:  write_ds1307(0x02, dummy | 0x40);
  3799   001EDC  5004               	movf	init_ds1307@dummy^0,w,c
  3800   001EDE  0940               	iorlw	64
  3801   001EE0  6E02               	movwf	write_ds1307@data^0,c
  3802   001EE2  0E02               	movlw	2
  3803   001EE4  EC3D  F010         	call	_write_ds1307
  3804   001EE8                     
  3805                           ;ds1307.c: 38:  write_ds1307(0x07, 0x93);
  3806   001EE8  0E93               	movlw	147
  3807   001EEA  6E02               	movwf	write_ds1307@data^0,c
  3808   001EEC  0E07               	movlw	7
  3809   001EEE  EC3D  F010         	call	_write_ds1307
  3810   001EF2                     
  3811                           ;ds1307.c: 41:  dummy = read_ds1307(0x00);
  3812   001EF2  0E00               	movlw	0
  3813   001EF4  EC05  F010         	call	_read_ds1307
  3814   001EF8  6E04               	movwf	init_ds1307@dummy^0,c
  3815                           
  3816                           ;ds1307.c: 42:  write_ds1307(0x00, dummy & 0x7F);
  3817   001EFA  5004               	movf	init_ds1307@dummy^0,w,c
  3818   001EFC  0B7F               	andlw	127
  3819   001EFE  6E02               	movwf	write_ds1307@data^0,c
  3820   001F00  0E00               	movlw	0
  3821   001F02  EC3D  F010         	call	_write_ds1307
  3822   001F06  0012               	return		;funcret
  3823   001F08                     __end_of_init_ds1307:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function _write_ds1307 *****************
  3827 ;; Defined at:
  3828 ;;		line 46 in file "ds1307.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  address         1    wreg     unsigned char 
  3831 ;;  data            1    1[COMRAM] unsigned char 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  address         1    2[COMRAM] unsigned char 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3843 ;;      Params:         1       0       0       0       0       0       0
  3844 ;;      Locals:         1       0       0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0
  3846 ;;      Totals:         2       0       0       0       0       0       0
  3847 ;;Total ram usage:        2 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 3
  3850 ;; This function calls:
  3851 ;;		_i2c_start
  3852 ;;		_i2c_stop
  3853 ;;		_i2c_write
  3854 ;; This function is called by:
  3855 ;;		_init_ds1307
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text15
  3860   00207A                     __ptext15:
  3861                           	callstack 0
  3862   00207A                     _write_ds1307:
  3863                           	callstack 25
  3864                           
  3865                           ;incstack = 0
  3866                           ;write_ds1307@address stored from wreg
  3867   00207A  6E03               	movwf	write_ds1307@address^0,c
  3868   00207C                     
  3869                           ;ds1307.c: 46: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 47
      +                          : {;ds1307.c: 48:  i2c_start();
  3870   00207C  ECCC  F010         	call	_i2c_start	;wreg free
  3871   002080                     
  3872                           ;ds1307.c: 49:  i2c_write(0xD0);
  3873   002080  0ED0               	movlw	208
  3874   002082  ECB3  F010         	call	_i2c_write
  3875   002086                     
  3876                           ;ds1307.c: 50:  i2c_write(address);
  3877   002086  5003               	movf	write_ds1307@address^0,w,c
  3878   002088  ECB3  F010         	call	_i2c_write
  3879   00208C                     
  3880                           ;ds1307.c: 51:  i2c_write(data);
  3881   00208C  5002               	movf	write_ds1307@data^0,w,c
  3882   00208E  ECB3  F010         	call	_i2c_write
  3883   002092                     
  3884                           ;ds1307.c: 52:  i2c_stop();
  3885   002092  ECC8  F010         	call	_i2c_stop	;wreg free
  3886   002096  0012               	return		;funcret
  3887   002098                     __end_of_write_ds1307:
  3888                           	callstack 0
  3889                           
  3890 ;; *************** function _init_clcd *****************
  3891 ;; Defined at:
  3892 ;;		line 26 in file "clcd.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;		None
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0, cstack
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3906 ;;      Params:         0       0       0       0       0       0       0
  3907 ;;      Locals:         0       0       0       0       0       0       0
  3908 ;;      Temps:          2       0       0       0       0       0       0
  3909 ;;      Totals:         2       0       0       0       0       0       0
  3910 ;;Total ram usage:        2 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; Hardware stack levels required when called: 2
  3913 ;; This function calls:
  3914 ;;		_clcd_write
  3915 ;; This function is called by:
  3916 ;;		_init_config
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text16
  3921   001710                     __ptext16:
  3922                           	callstack 0
  3923   001710                     _init_clcd:
  3924                           	callstack 27
  3925   001710                     
  3926                           ;clcd.c: 29:  TRISD = 0x00;
  3927   001710  0E00               	movlw	0
  3928   001712  6E95               	movwf	149,c	;volatile
  3929   001714                     
  3930                           ;clcd.c: 31:  TRISC = TRISC & 0xF8;
  3931   001714  5094               	movf	148,w,c	;volatile
  3932   001716  0BF8               	andlw	248
  3933   001718  6E94               	movwf	148,c	;volatile
  3934   00171A                     
  3935                           ;clcd.c: 32:    ECCP1CONbits.ECCP1M = 0;
  3936   00171A  0EF0               	movlw	-16
  3937   00171C  16BA               	andwf	186,f,c	;volatile
  3938   00171E                     
  3939                           ;clcd.c: 33:     CCP1CON = 0;
  3940   00171E  0E00               	movlw	0
  3941   001720  6EBD               	movwf	189,c	;volatile
  3942   001722                     
  3943                           ;clcd.c: 34:     TRISEbits.PSPMODE = 0;
  3944   001722  9896               	bcf	150,4,c	;volatile
  3945   001724                     
  3946                           ;clcd.c: 35:     CMCON = 0x07;
  3947   001724  0E07               	movlw	7
  3948   001726  6EB4               	movwf	180,c	;volatile
  3949   001728                     
  3950                           ;clcd.c: 36:  PORTCbits.RC0 = 0;
  3951   001728  9082               	bcf	130,0,c	;volatile
  3952   00172A                     
  3953                           ;clcd.c: 40:     _delay((unsigned long)((40)*(20000000/4000.0)));
  3954   00172A  0E02               	movlw	2
  3955   00172C  6E04               	movwf	(??_init_clcd+1)^0,c
  3956   00172E  0E04               	movlw	4
  3957   001730  6E03               	movwf	??_init_clcd^0,c
  3958   001732  0EBA               	movlw	186
  3959   001734                     u3327:
  3960   001734  2EE8               	decfsz	wreg,f,c
  3961   001736  D7FE               	bra	u3327
  3962   001738  2E03               	decfsz	??_init_clcd^0,f,c
  3963   00173A  D7FC               	bra	u3327
  3964   00173C  2E04               	decfsz	(??_init_clcd+1)^0,f,c
  3965   00173E  D7FA               	bra	u3327
  3966   001740  D000               	nop2	
  3967   001742                     
  3968                           ;clcd.c: 43:     clcd_write(0x33, 0 );
  3969   001742  0E00               	movlw	0
  3970   001744  6E01               	movwf	clcd_write@control_bit^0,c
  3971   001746  0E33               	movlw	51
  3972   001748  ECBF  F00F         	call	_clcd_write
  3973   00174C                     
  3974                           ;clcd.c: 44:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  3975   00174C  0E1B               	movlw	27
  3976   00174E  6E03               	movwf	??_init_clcd^0,c
  3977   001750  0E9E               	movlw	158
  3978   001752                     u3337:
  3979   001752  2EE8               	decfsz	wreg,f,c
  3980   001754  D7FE               	bra	u3337
  3981   001756  2E03               	decfsz	??_init_clcd^0,f,c
  3982   001758  D7FC               	bra	u3337
  3983   00175A  D000               	nop2	
  3984   00175C                     
  3985                           ;clcd.c: 45:     clcd_write(0x33, 0 );
  3986   00175C  0E00               	movlw	0
  3987   00175E  6E01               	movwf	clcd_write@control_bit^0,c
  3988   001760  0E33               	movlw	51
  3989   001762  ECBF  F00F         	call	_clcd_write
  3990   001766                     
  3991                           ;clcd.c: 46:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  3992   001766  0EA6               	movlw	166
  3993   001768                     u3347:
  3994   001768  2EE8               	decfsz	wreg,f,c
  3995   00176A  D7FE               	bra	u3347
  3996   00176C  D000               	nop2	
  3997   00176E                     
  3998                           ;clcd.c: 47:     clcd_write(0x33, 0 );
  3999   00176E  0E00               	movlw	0
  4000   001770  6E01               	movwf	clcd_write@control_bit^0,c
  4001   001772  0E33               	movlw	51
  4002   001774  ECBF  F00F         	call	_clcd_write
  4003   001778                     
  4004                           ;clcd.c: 48:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4005   001778  D000               	nop2		;2 cycle nop
  4006   00177A  D000               	nop2		;2 cycle nop
  4007   00177C  F000               	nop	
  4008   00177E                     
  4009                           ;clcd.c: 50:     clcd_write(0x02, 0);
  4010   00177E  0E00               	movlw	0
  4011   001780  6E01               	movwf	clcd_write@control_bit^0,c
  4012   001782  0E02               	movlw	2
  4013   001784  ECBF  F00F         	call	_clcd_write
  4014   001788                     
  4015                           ;clcd.c: 51:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4016   001788  0EA6               	movlw	166
  4017   00178A                     u3357:
  4018   00178A  2EE8               	decfsz	wreg,f,c
  4019   00178C  D7FE               	bra	u3357
  4020   00178E  D000               	nop2	
  4021   001790                     
  4022                           ;clcd.c: 52:     clcd_write(0x38, 0);
  4023   001790  0E00               	movlw	0
  4024   001792  6E01               	movwf	clcd_write@control_bit^0,c
  4025   001794  0E38               	movlw	56
  4026   001796  ECBF  F00F         	call	_clcd_write
  4027   00179A                     
  4028                           ;clcd.c: 53:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4029   00179A  0EA6               	movlw	166
  4030   00179C                     u3367:
  4031   00179C  2EE8               	decfsz	wreg,f,c
  4032   00179E  D7FE               	bra	u3367
  4033   0017A0  D000               	nop2	
  4034   0017A2                     
  4035                           ;clcd.c: 54:     clcd_write(0x01, 0);
  4036   0017A2  0E00               	movlw	0
  4037   0017A4  6E01               	movwf	clcd_write@control_bit^0,c
  4038   0017A6  0E01               	movlw	1
  4039   0017A8  ECBF  F00F         	call	_clcd_write
  4040   0017AC                     
  4041                           ;clcd.c: 55:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  4042   0017AC  0E04               	movlw	4
  4043   0017AE  6E03               	movwf	??_init_clcd^0,c
  4044   0017B0  0E3E               	movlw	62
  4045   0017B2                     u3377:
  4046   0017B2  2EE8               	decfsz	wreg,f,c
  4047   0017B4  D7FE               	bra	u3377
  4048   0017B6  2E03               	decfsz	??_init_clcd^0,f,c
  4049   0017B8  D7FC               	bra	u3377
  4050   0017BA                     
  4051                           ;clcd.c: 56:     clcd_write(0x0C, 0);
  4052   0017BA  0E00               	movlw	0
  4053   0017BC  6E01               	movwf	clcd_write@control_bit^0,c
  4054   0017BE  0E0C               	movlw	12
  4055   0017C0  ECBF  F00F         	call	_clcd_write
  4056   0017C4                     
  4057                           ;clcd.c: 57:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4058   0017C4  0EA6               	movlw	166
  4059   0017C6                     u3387:
  4060   0017C6  2EE8               	decfsz	wreg,f,c
  4061   0017C8  D7FE               	bra	u3387
  4062   0017CA  D000               	nop2	
  4063   0017CC  0012               	return		;funcret
  4064   0017CE                     __end_of_init_clcd:
  4065                           	callstack 0
  4066                           
  4067 ;; *************** function _init_adc *****************
  4068 ;; Defined at:
  4069 ;;		line 3 in file "adc.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		None
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4083 ;;      Params:         0       0       0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0
  4086 ;;      Totals:         0       0       0       0       0       0       0
  4087 ;;Total ram usage:        0 bytes
  4088 ;; Hardware stack levels used: 1
  4089 ;; Hardware stack levels required when called: 1
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_init_config
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text17
  4098   002098                     __ptext17:
  4099                           	callstack 0
  4100   002098                     _init_adc:
  4101                           	callstack 28
  4102   002098                     
  4103                           ;adc.c: 5:     ADON=1;
  4104   002098  80C2               	bsf	4034,0,c	;volatile
  4105                           
  4106                           ;adc.c: 6:     VCFG1=0, VCFG0=0;
  4107   00209A  9AC1               	bcf	4033,5,c	;volatile
  4108   00209C  98C1               	bcf	4033,4,c	;volatile
  4109                           
  4110                           ;adc.c: 7:     PCFG3=1, PCFG2=0, PCFG1=1, PCFG0=0;
  4111   00209E  86C1               	bsf	4033,3,c	;volatile
  4112   0020A0  94C1               	bcf	4033,2,c	;volatile
  4113   0020A2  82C1               	bsf	4033,1,c	;volatile
  4114   0020A4  90C1               	bcf	4033,0,c	;volatile
  4115                           
  4116                           ;adc.c: 8:     ACQT2=1, ACQT1=0, ACQT0=0;
  4117   0020A6  8AC0               	bsf	4032,5,c	;volatile
  4118   0020A8  98C0               	bcf	4032,4,c	;volatile
  4119   0020AA  96C0               	bcf	4032,3,c	;volatile
  4120                           
  4121                           ;adc.c: 9:     ADCS2=0, ADCS1=1, ADCS0=0;
  4122   0020AC  94C0               	bcf	4032,2,c	;volatile
  4123   0020AE  82C0               	bsf	4032,1,c	;volatile
  4124   0020B0  90C0               	bcf	4032,0,c	;volatile
  4125                           
  4126                           ;adc.c: 10:     ADFM=1;
  4127   0020B2  8EC0               	bsf	4032,7,c	;volatile
  4128   0020B4  0012               	return		;funcret
  4129   0020B6                     __end_of_init_adc:
  4130                           	callstack 0
  4131                           
  4132 ;; *************** function _getforstoreevent *****************
  4133 ;; Defined at:
  4134 ;;		line 22 in file "scrolldisplay.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;		None
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  i               2   60[COMRAM] int 
  4139 ;;  i               2   58[COMRAM] int 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4149 ;;      Params:         0       0       0       0       0       0       0
  4150 ;;      Locals:         4       0       0       0       0       0       0
  4151 ;;      Temps:          2       0       0       0       0       0       0
  4152 ;;      Totals:         6       0       0       0       0       0       0
  4153 ;;Total ram usage:        6 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; Hardware stack levels required when called: 6
  4156 ;; This function calls:
  4157 ;;		_get_speed
  4158 ;;		_get_time
  4159 ;;		_log_event
  4160 ;; This function is called by:
  4161 ;;		_main
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text18
  4166   0013DC                     __ptext18:
  4167                           	callstack 0
  4168   0013DC                     _getforstoreevent:
  4169                           	callstack 24
  4170   0013DC                     
  4171                           ;scrolldisplay.c: 24:     for(int i=0; i<16; i++)
  4172   0013DC  0E00               	movlw	0
  4173   0013DE  6E3C               	movwf	(getforstoreevent@i+1)^0,c
  4174   0013E0  0E00               	movlw	0
  4175   0013E2  6E3B               	movwf	getforstoreevent@i^0,c
  4176   0013E4                     l3473:
  4177                           
  4178                           ;scrolldisplay.c: 25:         log[i]=' ';
  4179   0013E4  0E60               	movlw	low _log
  4180   0013E6  243B               	addwf	getforstoreevent@i^0,w,c
  4181   0013E8  6ED9               	movwf	fsr2l,c
  4182   0013EA  0E00               	movlw	high _log
  4183   0013EC  203C               	addwfc	(getforstoreevent@i+1)^0,w,c
  4184   0013EE  6EDA               	movwf	fsr2h,c
  4185   0013F0  0E20               	movlw	32
  4186   0013F2  6EDF               	movwf	indf2,c
  4187   0013F4  4A3B               	infsnz	getforstoreevent@i^0,f,c
  4188   0013F6  2A3C               	incf	(getforstoreevent@i+1)^0,f,c
  4189   0013F8  BE3C               	btfsc	(getforstoreevent@i+1)^0,7,c
  4190   0013FA  EF08  F00A         	goto	u2531
  4191   0013FE  503C               	movf	(getforstoreevent@i+1)^0,w,c
  4192   001400  E109               	bnz	u2530
  4193   001402  0E10               	movlw	16
  4194   001404  5C3B               	subwf	getforstoreevent@i^0,w,c
  4195   001406  A0D8               	btfss	status,0,c
  4196   001408  EF08  F00A         	goto	u2531
  4197   00140C  EF0A  F00A         	goto	u2530
  4198   001410                     u2531:
  4199   001410  EFF2  F009         	goto	l3473
  4200   001414                     u2530:
  4201   001414                     
  4202                           ;scrolldisplay.c: 26:     log[16] = '\0';
  4203   001414  0E00               	movlw	0
  4204   001416  0100               	movlb	0	; () banked
  4205   001418  6F70               	movwf	(_log+16)& (0+255),b
  4206   00141A                     
  4207                           ; BSR set to: 0
  4208                           ;scrolldisplay.c: 27:     get_time();
  4209   00141A  EC25  F00D         	call	_get_time	;wreg free
  4210   00141E                     
  4211                           ;scrolldisplay.c: 28:     for(int i=0; i<8; i++)
  4212   00141E  0E00               	movlw	0
  4213   001420  6E3E               	movwf	(getforstoreevent@i_691+1)^0,c
  4214   001422  0E00               	movlw	0
  4215   001424  6E3D               	movwf	getforstoreevent@i_691^0,c
  4216   001426                     l3489:
  4217                           
  4218                           ;scrolldisplay.c: 29:         log[i+2]=time[i];
  4219   001426  0E93               	movlw	low _time
  4220   001428  243D               	addwf	getforstoreevent@i_691^0,w,c
  4221   00142A  6ED9               	movwf	fsr2l,c
  4222   00142C  0E00               	movlw	high _time
  4223   00142E  203E               	addwfc	(getforstoreevent@i_691+1)^0,w,c
  4224   001430  6EDA               	movwf	fsr2h,c
  4225   001432  0E62               	movlw	low (_log+2)
  4226   001434  243D               	addwf	getforstoreevent@i_691^0,w,c
  4227   001436  6EE1               	movwf	fsr1l,c
  4228   001438  0E00               	movlw	high (_log+2)
  4229   00143A  203E               	addwfc	(getforstoreevent@i_691+1)^0,w,c
  4230   00143C  6EE2               	movwf	fsr1h,c
  4231   00143E  CFDF FFE7          	movff	indf2,indf1
  4232   001442  4A3D               	infsnz	getforstoreevent@i_691^0,f,c
  4233   001444  2A3E               	incf	(getforstoreevent@i_691+1)^0,f,c
  4234   001446  BE3E               	btfsc	(getforstoreevent@i_691+1)^0,7,c
  4235   001448  EF2F  F00A         	goto	u2541
  4236   00144C  503E               	movf	(getforstoreevent@i_691+1)^0,w,c
  4237   00144E  E109               	bnz	u2540
  4238   001450  0E08               	movlw	8
  4239   001452  5C3D               	subwf	getforstoreevent@i_691^0,w,c
  4240   001454  A0D8               	btfss	status,0,c
  4241   001456  EF2F  F00A         	goto	u2541
  4242   00145A  EF31  F00A         	goto	u2540
  4243   00145E                     u2541:
  4244   00145E  EF13  F00A         	goto	l3489
  4245   001462                     u2540:
  4246   001462                     
  4247                           ;scrolldisplay.c: 30:     get_speed();
  4248   001462  EC3F  F00C         	call	_get_speed	;wreg free
  4249   001466                     
  4250                           ;scrolldisplay.c: 31:     log[11]=signature[signindex][0];
  4251   001466  5051               	movf	_signindex^0,w,c
  4252   001468  0D02               	mullw	2
  4253   00146A  0EB0               	movlw	low _signature
  4254   00146C  24F3               	addwf	243,w,c
  4255   00146E  6ED9               	movwf	fsr2l,c
  4256   001470  0E00               	movlw	high _signature
  4257   001472  20F4               	addwfc	prodh,w,c
  4258   001474  6EDA               	movwf	fsr2h,c
  4259   001476  CFDE FFF6          	movff	postinc2,tblptrl
  4260   00147A  CFDD FFF7          	movff	postdec2,tblptrh
  4261   00147E                     	if	0	;tblptru may be non-zero
  4262   00147E                     	endif
  4263   00147E                     	if	0	;tblptru may be non-zero
  4264   00147E                     	endif
  4265   00147E  0008               	tblrd		*
  4266   001480  CFF5 F06B          	movff	tablat,_log+11
  4267   001484                     
  4268                           ;scrolldisplay.c: 32:     log[12]=signature[signindex][1];
  4269   001484  5051               	movf	_signindex^0,w,c
  4270   001486  0D02               	mullw	2
  4271   001488  0EB0               	movlw	low _signature
  4272   00148A  24F3               	addwf	243,w,c
  4273   00148C  6ED9               	movwf	fsr2l,c
  4274   00148E  0E00               	movlw	high _signature
  4275   001490  20F4               	addwfc	prodh,w,c
  4276   001492  6EDA               	movwf	fsr2h,c
  4277   001494  CFDE F039          	movff	postinc2,??_getforstoreevent
  4278   001498  CFDD F03A          	movff	postdec2,??_getforstoreevent+1
  4279   00149C  0E01               	movlw	1
  4280   00149E  2639               	addwf	??_getforstoreevent^0,f,c
  4281   0014A0  0E00               	movlw	0
  4282   0014A2  223A               	addwfc	(??_getforstoreevent+1)^0,f,c
  4283   0014A4  C039  FFF6         	movff	??_getforstoreevent,tblptrl
  4284   0014A8  C03A  FFF7         	movff	??_getforstoreevent+1,tblptrh
  4285   0014AC                     	if	0	;tblptru may be non-zero
  4286   0014AC                     	endif
  4287   0014AC                     	if	0	;tblptru may be non-zero
  4288   0014AC                     	endif
  4289   0014AC  0008               	tblrd		*
  4290   0014AE  CFF5 F06C          	movff	tablat,_log+12
  4291   0014B2                     
  4292                           ;scrolldisplay.c: 33:     log[0]= eventcount+48;
  4293   0014B2  5046               	movf	_eventcount^0,w,c
  4294   0014B4  0F30               	addlw	48
  4295   0014B6  0100               	movlb	0	; () banked
  4296   0014B8  6F60               	movwf	_log& (0+255),b
  4297   0014BA                     
  4298                           ; BSR set to: 0
  4299                           ;scrolldisplay.c: 34:     log_event();
  4300   0014BA  EC92  F00C         	call	_log_event	;wreg free
  4301   0014BE  0012               	return		;funcret
  4302   0014C0                     __end_of_getforstoreevent:
  4303                           	callstack 0
  4304                           
  4305 ;; *************** function _log_event *****************
  4306 ;; Defined at:
  4307 ;;		line 36 in file "scrolldisplay.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;		None
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  i               2    6[COMRAM] int 
  4312 ;;  address         1    5[COMRAM] unsigned char 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4322 ;;      Params:         0       0       0       0       0       0       0
  4323 ;;      Locals:         3       0       0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0
  4325 ;;      Totals:         3       0       0       0       0       0       0
  4326 ;;Total ram usage:        3 bytes
  4327 ;; Hardware stack levels used: 1
  4328 ;; Hardware stack levels required when called: 4
  4329 ;; This function calls:
  4330 ;;		_write_external_eeprom
  4331 ;; This function is called by:
  4332 ;;		_getforstoreevent
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text19
  4337   001924                     __ptext19:
  4338                           	callstack 0
  4339   001924                     _log_event:
  4340                           	callstack 25
  4341   001924                     
  4342                           ;scrolldisplay.c: 38:     unsigned char address;;scrolldisplay.c: 39:     logpos++;
  4343   001924  2A59               	incf	_logpos^0,f,c
  4344   001926                     
  4345                           ;scrolldisplay.c: 40:     if(logpos==10)
  4346   001926  0E0A               	movlw	10
  4347   001928  1859               	xorwf	_logpos^0,w,c
  4348   00192A  A4D8               	btfss	status,2,c
  4349   00192C  EF9A  F00C         	goto	u2441
  4350   001930  EF9C  F00C         	goto	u2440
  4351   001934                     u2441:
  4352   001934  EF9E  F00C         	goto	l3385
  4353   001938                     u2440:
  4354   001938                     
  4355                           ;scrolldisplay.c: 41:         logpos=0;
  4356   001938  0E00               	movlw	0
  4357   00193A  6E59               	movwf	_logpos^0,c
  4358   00193C                     l3385:
  4359                           
  4360                           ;scrolldisplay.c: 42:     address=(logpos*16)+5;
  4361   00193C  5059               	movf	_logpos^0,w,c
  4362   00193E  0D10               	mullw	16
  4363   001940  50F3               	movf	243,w,c
  4364   001942  0F05               	addlw	5
  4365   001944  6E06               	movwf	log_event@address^0,c
  4366   001946                     
  4367                           ;scrolldisplay.c: 43:     if(logpos > 9)
  4368   001946  0E09               	movlw	9
  4369   001948  6459               	cpfsgt	_logpos^0,c
  4370   00194A  EFA9  F00C         	goto	u2451
  4371   00194E  EFAB  F00C         	goto	u2450
  4372   001952                     u2451:
  4373   001952  EFAD  F00C         	goto	l3391
  4374   001956                     u2450:
  4375   001956                     
  4376                           ;scrolldisplay.c: 44:         logpos=0;
  4377   001956  0E00               	movlw	0
  4378   001958  6E59               	movwf	_logpos^0,c
  4379   00195A                     l3391:
  4380                           
  4381                           ;scrolldisplay.c: 45:     int i;;scrolldisplay.c: 46:     for(eventcount++, i=0; i<16 ;i
      +                          ++)
  4382   00195A  4A46               	infsnz	_eventcount^0,f,c
  4383   00195C  2A47               	incf	(_eventcount+1)^0,f,c
  4384   00195E  0E00               	movlw	0
  4385   001960  6E08               	movwf	(log_event@i+1)^0,c
  4386   001962  0E00               	movlw	0
  4387   001964  6E07               	movwf	log_event@i^0,c
  4388   001966                     l3399:
  4389                           
  4390                           ;scrolldisplay.c: 47:     {;scrolldisplay.c: 49:         write_external_eeprom(address,l
      +                          og[i]);
  4391   001966  0E60               	movlw	low _log
  4392   001968  2407               	addwf	log_event@i^0,w,c
  4393   00196A  6ED9               	movwf	fsr2l,c
  4394   00196C  0E00               	movlw	high _log
  4395   00196E  2008               	addwfc	(log_event@i+1)^0,w,c
  4396   001970  6EDA               	movwf	fsr2h,c
  4397   001972  50DF               	movf	indf2,w,c
  4398   001974  6E02               	movwf	write_external_eeprom@data^0,c
  4399   001976  5006               	movf	log_event@address^0,w,c
  4400   001978  EC84  F00F         	call	_write_external_eeprom
  4401   00197C                     
  4402                           ;scrolldisplay.c: 50:         address++;
  4403   00197C  2A06               	incf	log_event@address^0,f,c
  4404   00197E                     
  4405                           ;scrolldisplay.c: 51:     }
  4406   00197E  4A07               	infsnz	log_event@i^0,f,c
  4407   001980  2A08               	incf	(log_event@i+1)^0,f,c
  4408   001982  BE08               	btfsc	(log_event@i+1)^0,7,c
  4409   001984  EFCD  F00C         	goto	u2461
  4410   001988  5008               	movf	(log_event@i+1)^0,w,c
  4411   00198A  E109               	bnz	u2460
  4412   00198C  0E10               	movlw	16
  4413   00198E  5C07               	subwf	log_event@i^0,w,c
  4414   001990  A0D8               	btfss	status,0,c
  4415   001992  EFCD  F00C         	goto	u2461
  4416   001996  EFCF  F00C         	goto	u2460
  4417   00199A                     u2461:
  4418   00199A  EFB3  F00C         	goto	l3399
  4419   00199E                     u2460:
  4420   00199E                     
  4421                           ;scrolldisplay.c: 52:     if(eventcount>10)
  4422   00199E  5047               	movf	(_eventcount+1)^0,w,c
  4423   0019A0  E109               	bnz	u2470
  4424   0019A2  0E0B               	movlw	11
  4425   0019A4  5C46               	subwf	_eventcount^0,w,c
  4426   0019A6  A0D8               	btfss	status,0,c
  4427   0019A8  EFD8  F00C         	goto	u2471
  4428   0019AC  EFDA  F00C         	goto	u2470
  4429   0019B0                     u2471:
  4430   0019B0  EFDC  F00C         	goto	l488
  4431   0019B4                     u2470:
  4432   0019B4                     
  4433                           ;scrolldisplay.c: 53:         logpos=0;
  4434   0019B4  0E00               	movlw	0
  4435   0019B6  6E59               	movwf	_logpos^0,c
  4436   0019B8                     l488:
  4437   0019B8  0012               	return		;funcret
  4438   0019BA                     __end_of_log_event:
  4439                           	callstack 0
  4440                           
  4441 ;; *************** function _write_external_eeprom *****************
  4442 ;; Defined at:
  4443 ;;		line 9 in file "external.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  address         1    wreg     unsigned char 
  4446 ;;  data            1    1[COMRAM] unsigned char 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  address         1    4[COMRAM] unsigned char 
  4449 ;;  i               2    2[COMRAM] unsigned int 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4459 ;;      Params:         1       0       0       0       0       0       0
  4460 ;;      Locals:         3       0       0       0       0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0
  4462 ;;      Totals:         4       0       0       0       0       0       0
  4463 ;;Total ram usage:        4 bytes
  4464 ;; Hardware stack levels used: 1
  4465 ;; Hardware stack levels required when called: 3
  4466 ;; This function calls:
  4467 ;;		_i2c_start
  4468 ;;		_i2c_stop
  4469 ;;		_i2c_write
  4470 ;; This function is called by:
  4471 ;;		_main
  4472 ;;		_log_event
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           	psect	text20
  4477   001F08                     __ptext20:
  4478                           	callstack 0
  4479   001F08                     _write_external_eeprom:
  4480                           	callstack 27
  4481                           
  4482                           ;incstack = 0
  4483                           ;write_external_eeprom@address stored from wreg
  4484   001F08  6E05               	movwf	write_external_eeprom@address^0,c
  4485   001F0A                     
  4486                           ;external.c: 9: void write_external_eeprom(unsigned char address, unsigned char data);ex
      +                          ternal.c: 10: {;external.c: 11:  i2c_start();
  4487   001F0A  ECCC  F010         	call	_i2c_start	;wreg free
  4488   001F0E                     
  4489                           ;external.c: 12:  i2c_write(0xA0);
  4490   001F0E  0EA0               	movlw	160
  4491   001F10  ECB3  F010         	call	_i2c_write
  4492   001F14                     
  4493                           ;external.c: 13:  i2c_write(address);
  4494   001F14  5005               	movf	write_external_eeprom@address^0,w,c
  4495   001F16  ECB3  F010         	call	_i2c_write
  4496   001F1A                     
  4497                           ;external.c: 14:  i2c_write(data);
  4498   001F1A  5002               	movf	write_external_eeprom@data^0,w,c
  4499   001F1C  ECB3  F010         	call	_i2c_write
  4500   001F20                     
  4501                           ;external.c: 15:  i2c_stop();
  4502   001F20  ECC8  F010         	call	_i2c_stop	;wreg free
  4503   001F24                     
  4504                           ;external.c: 16:  for(unsigned int i = 3000;i--;);
  4505   001F24  0E0B               	movlw	11
  4506   001F26  6E04               	movwf	(write_external_eeprom@i+1)^0,c
  4507   001F28  0EB8               	movlw	184
  4508   001F2A  6E03               	movwf	write_external_eeprom@i^0,c
  4509   001F2C                     l2815:
  4510   001F2C  0603               	decf	write_external_eeprom@i^0,f,c
  4511   001F2E  A0D8               	btfss	status,0,c
  4512   001F30  0604               	decf	(write_external_eeprom@i+1)^0,f,c
  4513   001F32  2803               	incf	write_external_eeprom@i^0,w,c
  4514   001F34  E106               	bnz	u1731
  4515   001F36  2804               	incf	(write_external_eeprom@i+1)^0,w,c
  4516   001F38  A4D8               	btfss	status,2,c
  4517   001F3A  EFA1  F00F         	goto	u1731
  4518   001F3E  EFA3  F00F         	goto	u1730
  4519   001F42                     u1731:
  4520   001F42  EF96  F00F         	goto	l2815
  4521   001F46                     u1730:
  4522   001F46  0012               	return		;funcret
  4523   001F48                     __end_of_write_external_eeprom:
  4524                           	callstack 0
  4525                           
  4526 ;; *************** function _get_speed *****************
  4527 ;; Defined at:
  4528 ;;		line 16 in file "scrolldisplay.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  adc             2   54[COMRAM] unsigned short 
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, status,0, cstack
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4542 ;;      Params:         0       0       0       0       0       0       0
  4543 ;;      Locals:         2       0       0       0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0
  4545 ;;      Totals:         2       0       0       0       0       0       0
  4546 ;;Total ram usage:        2 bytes
  4547 ;; Hardware stack levels used: 1
  4548 ;; Hardware stack levels required when called: 2
  4549 ;; This function calls:
  4550 ;;		___fldiv
  4551 ;;		___fltol
  4552 ;;		___lwdiv
  4553 ;;		___lwmod
  4554 ;;		___xxtofl
  4555 ;;		_read_adc
  4556 ;; This function is called by:
  4557 ;;		_getforstoreevent
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text21
  4562   00187E                     __ptext21:
  4563                           	callstack 0
  4564   00187E                     _get_speed:
  4565                           	callstack 27
  4566   00187E                     
  4567                           ;scrolldisplay.c: 18:     unsigned short adc = (unsigned short)(read_adc(4)/10.33);
  4568   00187E  0EAE               	movlw	174
  4569   001880  6E18               	movwf	___fldiv@a^0,c
  4570   001882  0E47               	movlw	71
  4571   001884  6E19               	movwf	(___fldiv@a+1)^0,c
  4572   001886  0E25               	movlw	37
  4573   001888  6E1A               	movwf	(___fldiv@a+2)^0,c
  4574   00188A  0E41               	movlw	65
  4575   00188C  6E1B               	movwf	(___fldiv@a+3)^0,c
  4576   00188E  0E04               	movlw	4
  4577   001890  ECA4  F00F         	call	_read_adc
  4578   001894  C001  F006         	movff	?_read_adc,___xxtofl@val
  4579   001898  C002  F007         	movff	?_read_adc+1,___xxtofl@val+1
  4580   00189C  6A08               	clrf	(___xxtofl@val+2)^0,c
  4581   00189E  6A09               	clrf	(___xxtofl@val+3)^0,c
  4582   0018A0  0E00               	movlw	0
  4583   0018A2  ECE1  F006         	call	___xxtofl
  4584   0018A6  C006  F014         	movff	?___xxtofl,___fldiv@b
  4585   0018AA  C007  F015         	movff	?___xxtofl+1,___fldiv@b+1
  4586   0018AE  C008  F016         	movff	?___xxtofl+2,___fldiv@b+2
  4587   0018B2  C009  F017         	movff	?___xxtofl+3,___fldiv@b+3
  4588   0018B6  EC09  F000         	call	___fldiv	;wreg free
  4589   0018BA  C014  F02D         	movff	?___fldiv,___fltol@f1
  4590   0018BE  C015  F02E         	movff	?___fldiv+1,___fltol@f1+1
  4591   0018C2  C016  F02F         	movff	?___fldiv+2,___fltol@f1+2
  4592   0018C6  C017  F030         	movff	?___fldiv+3,___fltol@f1+3
  4593   0018CA  EC6B  F009         	call	___fltol	;wreg free
  4594   0018CE  C02D  F037         	movff	?___fltol,get_speed@adc
  4595   0018D2  C02E  F038         	movff	?___fltol+1,get_speed@adc+1
  4596                           
  4597                           ;scrolldisplay.c: 19:     log[14] = ((adc/10)%10)+'0';
  4598   0018D6  0E00               	movlw	0
  4599   0018D8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  4600   0018DA  0E0A               	movlw	10
  4601   0018DC  6E03               	movwf	___lwdiv@divisor^0,c
  4602   0018DE  C037  F001         	movff	get_speed@adc,___lwdiv@dividend
  4603   0018E2  C038  F002         	movff	get_speed@adc+1,___lwdiv@dividend+1
  4604   0018E6  ECA3  F00D         	call	___lwdiv	;wreg free
  4605   0018EA  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  4606   0018EE  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  4607   0018F2  0E00               	movlw	0
  4608   0018F4  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  4609   0018F6  0E0A               	movlw	10
  4610   0018F8  6E0A               	movwf	___lwmod@divisor^0,c
  4611   0018FA  EC82  F00E         	call	___lwmod	;wreg free
  4612   0018FE  5008               	movf	?___lwmod^0,w,c
  4613   001900  0F30               	addlw	48
  4614   001902  0100               	movlb	0	; () banked
  4615   001904  6F6E               	movwf	(_log+14)& (0+255),b
  4616                           
  4617                           ;scrolldisplay.c: 20:     log[15] = (adc%10)+'0';
  4618   001906  C037  F008         	movff	get_speed@adc,___lwmod@dividend
  4619   00190A  C038  F009         	movff	get_speed@adc+1,___lwmod@dividend+1
  4620   00190E  0E00               	movlw	0
  4621   001910  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  4622   001912  0E0A               	movlw	10
  4623   001914  6E0A               	movwf	___lwmod@divisor^0,c
  4624   001916  EC82  F00E         	call	___lwmod	;wreg free
  4625   00191A  5008               	movf	?___lwmod^0,w,c
  4626   00191C  0F30               	addlw	48
  4627   00191E  0100               	movlb	0	; () banked
  4628   001920  6F6F               	movwf	(_log+15)& (0+255),b
  4629   001922                     
  4630                           ; BSR set to: 0
  4631   001922  0012               	return		;funcret
  4632   001924                     __end_of_get_speed:
  4633                           	callstack 0
  4634                           
  4635 ;; *************** function _read_adc *****************
  4636 ;; Defined at:
  4637 ;;		line 12 in file "adc.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  channel         1    wreg     unsigned char 
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  channel         1    4[COMRAM] unsigned char 
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  2    0[COMRAM] unsigned short 
  4644 ;; Registers used:
  4645 ;;		wreg, status,2, status,0
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4651 ;;      Params:         2       0       0       0       0       0       0
  4652 ;;      Locals:         1       0       0       0       0       0       0
  4653 ;;      Temps:          2       0       0       0       0       0       0
  4654 ;;      Totals:         5       0       0       0       0       0       0
  4655 ;;Total ram usage:        5 bytes
  4656 ;; Hardware stack levels used: 1
  4657 ;; Hardware stack levels required when called: 1
  4658 ;; This function calls:
  4659 ;;		Nothing
  4660 ;; This function is called by:
  4661 ;;		_main
  4662 ;;		_get_speed
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text22
  4667   001F48                     __ptext22:
  4668                           	callstack 0
  4669   001F48                     _read_adc:
  4670                           	callstack 29
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;incstack = 0
  4674                           ;read_adc@channel stored from wreg
  4675   001F48  6E05               	movwf	read_adc@channel^0,c
  4676   001F4A                     
  4677                           ;adc.c: 12: unsigned short read_adc(unsigned char channel);adc.c: 13: {;adc.c: 14:     A
      +                          DCON0=(ADCON0 & 0xC3) |(unsigned char)(channel<<2);
  4678   001F4A  C005  F003         	movff	read_adc@channel,??_read_adc
  4679   001F4E  90D8               	bcf	status,0,c
  4680   001F50  3603               	rlcf	??_read_adc^0,f,c
  4681   001F52  90D8               	bcf	status,0,c
  4682   001F54  3603               	rlcf	??_read_adc^0,f,c
  4683   001F56  50C2               	movf	194,w,c	;volatile
  4684   001F58  0BC3               	andlw	195
  4685   001F5A  1003               	iorwf	??_read_adc^0,w,c
  4686   001F5C  6EC2               	movwf	194,c	;volatile
  4687   001F5E                     
  4688                           ;adc.c: 15:     GO=1;
  4689   001F5E  82C2               	bsf	4034,1,c	;volatile
  4690   001F60                     l115:
  4691   001F60  B2C2               	btfsc	4034,1,c	;volatile
  4692   001F62  EFB5  F00F         	goto	u1741
  4693   001F66  EFB7  F00F         	goto	u1740
  4694   001F6A                     u1741:
  4695   001F6A  EFB0  F00F         	goto	l115
  4696   001F6E                     u1740:
  4697   001F6E                     
  4698                           ;adc.c: 17:     return (unsigned short) ADRESL | (unsigned short)((ADRESH & 0x03) << 8);
  4699   001F6E  50C4               	movf	196,w,c	;volatile
  4700   001F70  0B03               	andlw	3
  4701   001F72  6E03               	movwf	??_read_adc^0,c
  4702   001F74  50C3               	movf	195,w,c	;volatile
  4703   001F76  6E01               	movwf	?_read_adc^0,c
  4704   001F78  C003  F002         	movff	??_read_adc,?_read_adc+1
  4705   001F7C  0012               	return		;funcret
  4706   001F7E                     __end_of_read_adc:
  4707                           	callstack 0
  4708                           
  4709 ;; *************** function ___xxtofl *****************
  4710 ;; Defined at:
  4711 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  sign            1    wreg     unsigned char 
  4714 ;;  val             4    5[COMRAM] long 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  sign            1   13[COMRAM] unsigned char 
  4717 ;;  arg             4   15[COMRAM] unsigned long 
  4718 ;;  exp             1   14[COMRAM] unsigned char 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  4    5[COMRAM] unsigned char 
  4721 ;; Registers used:
  4722 ;;		wreg, status,2, status,0
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4728 ;;      Params:         4       0       0       0       0       0       0
  4729 ;;      Locals:         6       0       0       0       0       0       0
  4730 ;;      Temps:          4       0       0       0       0       0       0
  4731 ;;      Totals:        14       0       0       0       0       0       0
  4732 ;;Total ram usage:       14 bytes
  4733 ;; Hardware stack levels used: 1
  4734 ;; Hardware stack levels required when called: 1
  4735 ;; This function calls:
  4736 ;;		Nothing
  4737 ;; This function is called by:
  4738 ;;		_main
  4739 ;;		_get_speed
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text23
  4744   000DC2                     __ptext23:
  4745                           	callstack 0
  4746   000DC2                     ___xxtofl:
  4747                           	callstack 27
  4748                           
  4749                           ;incstack = 0
  4750                           ;___xxtofl@sign stored from wreg
  4751   000DC2  6E0E               	movwf	___xxtofl@sign^0,c
  4752   000DC4  500E               	movf	___xxtofl@sign^0,w,c
  4753   000DC6  B4D8               	btfsc	status,2,c
  4754   000DC8  EFE8  F006         	goto	u2251
  4755   000DCC  EFEA  F006         	goto	u2250
  4756   000DD0                     u2251:
  4757   000DD0  EF0C  F007         	goto	l1381
  4758   000DD4                     u2250:
  4759   000DD4  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  4760   000DD6  EFF1  F006         	goto	u2260
  4761   000DDA  EFEF  F006         	goto	u2261
  4762   000DDE                     u2261:
  4763   000DDE  EF0C  F007         	goto	l1381
  4764   000DE2                     u2260:
  4765   000DE2  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  4766   000DE6  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  4767   000DEA  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  4768   000DEE  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  4769   000DF2  1E0A               	comf	??___xxtofl^0,f,c
  4770   000DF4  1E0B               	comf	(??___xxtofl+1)^0,f,c
  4771   000DF6  1E0C               	comf	(??___xxtofl+2)^0,f,c
  4772   000DF8  1E0D               	comf	(??___xxtofl+3)^0,f,c
  4773   000DFA  2A0A               	incf	??___xxtofl^0,f,c
  4774   000DFC  0E00               	movlw	0
  4775   000DFE  220B               	addwfc	(??___xxtofl+1)^0,f,c
  4776   000E00  220C               	addwfc	(??___xxtofl+2)^0,f,c
  4777   000E02  220D               	addwfc	(??___xxtofl+3)^0,f,c
  4778   000E04  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  4779   000E08  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  4780   000E0C  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  4781   000E10  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  4782   000E14  EF14  F007         	goto	l3165
  4783   000E18                     l1381:
  4784   000E18  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  4785   000E1C  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4786   000E20  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4787   000E24  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4788   000E28                     l3165:
  4789   000E28  5006               	movf	___xxtofl@val^0,w,c
  4790   000E2A  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  4791   000E2C  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  4792   000E2E  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  4793   000E30  A4D8               	btfss	status,2,c
  4794   000E32  EF1D  F007         	goto	u2271
  4795   000E36  EF1F  F007         	goto	u2270
  4796   000E3A                     u2271:
  4797   000E3A  EF29  F007         	goto	l3171
  4798   000E3E                     u2270:
  4799   000E3E  0E00               	movlw	0
  4800   000E40  6E06               	movwf	?___xxtofl^0,c
  4801   000E42  0E00               	movlw	0
  4802   000E44  6E07               	movwf	(?___xxtofl+1)^0,c
  4803   000E46  0E00               	movlw	0
  4804   000E48  6E08               	movwf	(?___xxtofl+2)^0,c
  4805   000E4A  0E00               	movlw	0
  4806   000E4C  6E09               	movwf	(?___xxtofl+3)^0,c
  4807   000E4E  EFBA  F007         	goto	l1384
  4808   000E52                     l3171:
  4809   000E52  0E96               	movlw	150
  4810   000E54  6E0F               	movwf	___xxtofl@exp^0,c
  4811   000E56  EF33  F007         	goto	l3175
  4812   000E5A                     l3173:
  4813   000E5A  2A0F               	incf	___xxtofl@exp^0,f,c
  4814   000E5C  90D8               	bcf	status,0,c
  4815   000E5E  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  4816   000E60  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  4817   000E62  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  4818   000E64  3210               	rrcf	___xxtofl@arg^0,f,c
  4819   000E66                     l3175:
  4820   000E66  0E00               	movlw	0
  4821   000E68  1410               	andwf	___xxtofl@arg^0,w,c
  4822   000E6A  6E0A               	movwf	??___xxtofl^0,c
  4823   000E6C  0E00               	movlw	0
  4824   000E6E  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  4825   000E70  6E0B               	movwf	(??___xxtofl+1)^0,c
  4826   000E72  0E00               	movlw	0
  4827   000E74  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  4828   000E76  6E0C               	movwf	(??___xxtofl+2)^0,c
  4829   000E78  0EFE               	movlw	254
  4830   000E7A  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  4831   000E7C  6E0D               	movwf	(??___xxtofl+3)^0,c
  4832   000E7E  500A               	movf	??___xxtofl^0,w,c
  4833   000E80  100B               	iorwf	(??___xxtofl+1)^0,w,c
  4834   000E82  100C               	iorwf	(??___xxtofl+2)^0,w,c
  4835   000E84  100D               	iorwf	(??___xxtofl+3)^0,w,c
  4836   000E86  A4D8               	btfss	status,2,c
  4837   000E88  EF48  F007         	goto	u2281
  4838   000E8C  EF4A  F007         	goto	u2280
  4839   000E90                     u2281:
  4840   000E90  EF2D  F007         	goto	l3173
  4841   000E94                     u2280:
  4842   000E94  EF58  F007         	goto	l1388
  4843   000E98                     l3177:
  4844   000E98  2A0F               	incf	___xxtofl@exp^0,f,c
  4845   000E9A  0E01               	movlw	1
  4846   000E9C  2610               	addwf	___xxtofl@arg^0,f,c
  4847   000E9E  0E00               	movlw	0
  4848   000EA0  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  4849   000EA2  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  4850   000EA4  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  4851   000EA6  90D8               	bcf	status,0,c
  4852   000EA8  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  4853   000EAA  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  4854   000EAC  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  4855   000EAE  3210               	rrcf	___xxtofl@arg^0,f,c
  4856   000EB0                     l1388:
  4857   000EB0  0E00               	movlw	0
  4858   000EB2  1410               	andwf	___xxtofl@arg^0,w,c
  4859   000EB4  6E0A               	movwf	??___xxtofl^0,c
  4860   000EB6  0E00               	movlw	0
  4861   000EB8  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  4862   000EBA  6E0B               	movwf	(??___xxtofl+1)^0,c
  4863   000EBC  0E00               	movlw	0
  4864   000EBE  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  4865   000EC0  6E0C               	movwf	(??___xxtofl+2)^0,c
  4866   000EC2  0EFF               	movlw	255
  4867   000EC4  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  4868   000EC6  6E0D               	movwf	(??___xxtofl+3)^0,c
  4869   000EC8  500A               	movf	??___xxtofl^0,w,c
  4870   000ECA  100B               	iorwf	(??___xxtofl+1)^0,w,c
  4871   000ECC  100C               	iorwf	(??___xxtofl+2)^0,w,c
  4872   000ECE  100D               	iorwf	(??___xxtofl+3)^0,w,c
  4873   000ED0  A4D8               	btfss	status,2,c
  4874   000ED2  EF6D  F007         	goto	u2291
  4875   000ED6  EF6F  F007         	goto	u2290
  4876   000EDA                     u2291:
  4877   000EDA  EF4C  F007         	goto	l3177
  4878   000EDE                     u2290:
  4879   000EDE  EF77  F007         	goto	l3185
  4880   000EE2                     l3183:
  4881   000EE2  060F               	decf	___xxtofl@exp^0,f,c
  4882   000EE4  90D8               	bcf	status,0,c
  4883   000EE6  3610               	rlcf	___xxtofl@arg^0,f,c
  4884   000EE8  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  4885   000EEA  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  4886   000EEC  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  4887   000EEE                     l3185:
  4888   000EEE  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  4889   000EF0  EF7C  F007         	goto	u2301
  4890   000EF4  EF7E  F007         	goto	u2300
  4891   000EF8                     u2301:
  4892   000EF8  EF86  F007         	goto	l1395
  4893   000EFC                     u2300:
  4894   000EFC  0E02               	movlw	2
  4895   000EFE  600F               	cpfslt	___xxtofl@exp^0,c
  4896   000F00  EF84  F007         	goto	u2311
  4897   000F04  EF86  F007         	goto	u2310
  4898   000F08                     u2311:
  4899   000F08  EF71  F007         	goto	l3183
  4900   000F0C                     u2310:
  4901   000F0C                     l1395:
  4902   000F0C  B00F               	btfsc	___xxtofl@exp^0,0,c
  4903   000F0E  EF8B  F007         	goto	u2321
  4904   000F12  EF8D  F007         	goto	u2320
  4905   000F16                     u2321:
  4906   000F16  EF8E  F007         	goto	l3191
  4907   000F1A                     u2320:
  4908   000F1A  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  4909   000F1C                     l3191:
  4910   000F1C  90D8               	bcf	status,0,c
  4911   000F1E  320F               	rrcf	___xxtofl@exp^0,f,c
  4912   000F20  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  4913   000F24  6A0B               	clrf	(??___xxtofl+1)^0,c
  4914   000F26  6A0C               	clrf	(??___xxtofl+2)^0,c
  4915   000F28  6A0D               	clrf	(??___xxtofl+3)^0,c
  4916   000F2A  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  4917   000F2E  6A0C               	clrf	(??___xxtofl+2)^0,c
  4918   000F30  6A0B               	clrf	(??___xxtofl+1)^0,c
  4919   000F32  6A0A               	clrf	??___xxtofl^0,c
  4920   000F34  500A               	movf	??___xxtofl^0,w,c
  4921   000F36  1210               	iorwf	___xxtofl@arg^0,f,c
  4922   000F38  500B               	movf	(??___xxtofl+1)^0,w,c
  4923   000F3A  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  4924   000F3C  500C               	movf	(??___xxtofl+2)^0,w,c
  4925   000F3E  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  4926   000F40  500D               	movf	(??___xxtofl+3)^0,w,c
  4927   000F42  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  4928   000F44  500E               	movf	___xxtofl@sign^0,w,c
  4929   000F46  B4D8               	btfsc	status,2,c
  4930   000F48  EFA8  F007         	goto	u2331
  4931   000F4C  EFAA  F007         	goto	u2330
  4932   000F50                     u2331:
  4933   000F50  EFB2  F007         	goto	l3201
  4934   000F54                     u2330:
  4935   000F54  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  4936   000F56  EFB1  F007         	goto	u2340
  4937   000F5A  EFAF  F007         	goto	u2341
  4938   000F5E                     u2341:
  4939   000F5E  EFB2  F007         	goto	l3201
  4940   000F62                     u2340:
  4941   000F62  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  4942   000F64                     l3201:
  4943   000F64  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  4944   000F68  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  4945   000F6C  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  4946   000F70  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  4947   000F74                     l1384:
  4948   000F74  0012               	return		;funcret
  4949   000F76                     __end_of___xxtofl:
  4950                           	callstack 0
  4951                           
  4952 ;; *************** function ___lwmod *****************
  4953 ;; Defined at:
  4954 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  dividend        2    7[COMRAM] unsigned int 
  4957 ;;  divisor         2    9[COMRAM] unsigned int 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  counter         1   11[COMRAM] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  2    7[COMRAM] unsigned int 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4969 ;;      Params:         4       0       0       0       0       0       0
  4970 ;;      Locals:         1       0       0       0       0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0
  4972 ;;      Totals:         5       0       0       0       0       0       0
  4973 ;;Total ram usage:        5 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; Hardware stack levels required when called: 1
  4976 ;; This function calls:
  4977 ;;		Nothing
  4978 ;; This function is called by:
  4979 ;;		_get_speed
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text24
  4984   001D04                     __ptext24:
  4985                           	callstack 0
  4986   001D04                     ___lwmod:
  4987                           	callstack 27
  4988   001D04  500A               	movf	___lwmod@divisor^0,w,c
  4989   001D06  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  4990   001D08  B4D8               	btfsc	status,2,c
  4991   001D0A  EF89  F00E         	goto	u2221
  4992   001D0E  EF8B  F00E         	goto	u2220
  4993   001D12                     u2221:
  4994   001D12  EFAF  F00E         	goto	l1227
  4995   001D16                     u2220:
  4996   001D16  0E01               	movlw	1
  4997   001D18  6E0C               	movwf	___lwmod@counter^0,c
  4998   001D1A  EF93  F00E         	goto	l3149
  4999   001D1E                     l3147:
  5000   001D1E  90D8               	bcf	status,0,c
  5001   001D20  360A               	rlcf	___lwmod@divisor^0,f,c
  5002   001D22  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  5003   001D24  2A0C               	incf	___lwmod@counter^0,f,c
  5004   001D26                     l3149:
  5005   001D26  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  5006   001D28  EF98  F00E         	goto	u2231
  5007   001D2C  EF9A  F00E         	goto	u2230
  5008   001D30                     u2231:
  5009   001D30  EF8F  F00E         	goto	l3147
  5010   001D34                     u2230:
  5011   001D34                     l3151:
  5012   001D34  500A               	movf	___lwmod@divisor^0,w,c
  5013   001D36  5C08               	subwf	___lwmod@dividend^0,w,c
  5014   001D38  500B               	movf	(___lwmod@divisor+1)^0,w,c
  5015   001D3A  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  5016   001D3C  A0D8               	btfss	status,0,c
  5017   001D3E  EFA3  F00E         	goto	u2241
  5018   001D42  EFA5  F00E         	goto	u2240
  5019   001D46                     u2241:
  5020   001D46  EFA9  F00E         	goto	l3155
  5021   001D4A                     u2240:
  5022   001D4A  500A               	movf	___lwmod@divisor^0,w,c
  5023   001D4C  5E08               	subwf	___lwmod@dividend^0,f,c
  5024   001D4E  500B               	movf	(___lwmod@divisor+1)^0,w,c
  5025   001D50  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  5026   001D52                     l3155:
  5027   001D52  90D8               	bcf	status,0,c
  5028   001D54  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  5029   001D56  320A               	rrcf	___lwmod@divisor^0,f,c
  5030   001D58  2E0C               	decfsz	___lwmod@counter^0,f,c
  5031   001D5A  EF9A  F00E         	goto	l3151
  5032   001D5E                     l1227:
  5033   001D5E  C008  F008         	movff	___lwmod@dividend,?___lwmod
  5034   001D62  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  5035   001D66  0012               	return		;funcret
  5036   001D68                     __end_of___lwmod:
  5037                           	callstack 0
  5038                           
  5039 ;; *************** function ___fltol *****************
  5040 ;; Defined at:
  5041 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;  f1              4   44[COMRAM] unsigned int 
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;  exp1            1   53[COMRAM] unsigned char 
  5046 ;;  sign1           1   52[COMRAM] unsigned char 
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  4   44[COMRAM] long 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2, status,0
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5056 ;;      Params:         4       0       0       0       0       0       0
  5057 ;;      Locals:         2       0       0       0       0       0       0
  5058 ;;      Temps:          4       0       0       0       0       0       0
  5059 ;;      Totals:        10       0       0       0       0       0       0
  5060 ;;Total ram usage:       10 bytes
  5061 ;; Hardware stack levels used: 1
  5062 ;; Hardware stack levels required when called: 1
  5063 ;; This function calls:
  5064 ;;		Nothing
  5065 ;; This function is called by:
  5066 ;;		_main
  5067 ;;		_get_speed
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text25
  5072   0012D6                     __ptext25:
  5073                           	callstack 0
  5074   0012D6                     ___fltol:
  5075                           	callstack 27
  5076   0012D6  342F               	rlcf	(___fltol@f1+2)^0,w,c
  5077   0012D8  3430               	rlcf	(___fltol@f1+3)^0,w,c
  5078   0012DA  6E36               	movwf	___fltol@exp1^0,c
  5079   0012DC  5036               	movf	___fltol@exp1^0,w,c
  5080   0012DE  A4D8               	btfss	status,2,c
  5081   0012E0  EF74  F009         	goto	u2121
  5082   0012E4  EF76  F009         	goto	u2120
  5083   0012E8                     u2121:
  5084   0012E8  EF80  F009         	goto	l3083
  5085   0012EC                     u2120:
  5086   0012EC                     l3079:
  5087   0012EC  0E00               	movlw	0
  5088   0012EE  6E2D               	movwf	?___fltol^0,c
  5089   0012F0  0E00               	movlw	0
  5090   0012F2  6E2E               	movwf	(?___fltol+1)^0,c
  5091   0012F4  0E00               	movlw	0
  5092   0012F6  6E2F               	movwf	(?___fltol+2)^0,c
  5093   0012F8  0E00               	movlw	0
  5094   0012FA  6E30               	movwf	(?___fltol+3)^0,c
  5095   0012FC  EFED  F009         	goto	l1023
  5096   001300                     l3083:
  5097   001300  C02D  F031         	movff	___fltol@f1,??___fltol
  5098   001304  C02E  F032         	movff	___fltol@f1+1,??___fltol+1
  5099   001308  C02F  F033         	movff	___fltol@f1+2,??___fltol+2
  5100   00130C  C030  F034         	movff	___fltol@f1+3,??___fltol+3
  5101   001310  0E20               	movlw	32
  5102   001312  EF90  F009         	goto	u2130
  5103   001316                     u2135:
  5104   001316  90D8               	bcf	status,0,c
  5105   001318  3234               	rrcf	(??___fltol+3)^0,f,c
  5106   00131A  3233               	rrcf	(??___fltol+2)^0,f,c
  5107   00131C  3232               	rrcf	(??___fltol+1)^0,f,c
  5108   00131E  3231               	rrcf	??___fltol^0,f,c
  5109   001320                     u2130:
  5110   001320  2EE8               	decfsz	wreg,f,c
  5111   001322  EF8B  F009         	goto	u2135
  5112   001326  5031               	movf	??___fltol^0,w,c
  5113   001328  6E35               	movwf	___fltol@sign1^0,c
  5114   00132A  8E2F               	bsf	(___fltol@f1+2)^0,7,c
  5115   00132C  0EFF               	movlw	255
  5116   00132E  162D               	andwf	___fltol@f1^0,f,c
  5117   001330  0EFF               	movlw	255
  5118   001332  162E               	andwf	(___fltol@f1+1)^0,f,c
  5119   001334  0EFF               	movlw	255
  5120   001336  162F               	andwf	(___fltol@f1+2)^0,f,c
  5121   001338  0E00               	movlw	0
  5122   00133A  1630               	andwf	(___fltol@f1+3)^0,f,c
  5123   00133C  0E96               	movlw	150
  5124   00133E  5E36               	subwf	___fltol@exp1^0,f,c
  5125   001340  BE36               	btfsc	___fltol@exp1^0,7,c
  5126   001342  EFA7  F009         	goto	u2140
  5127   001346  EFA5  F009         	goto	u2141
  5128   00134A                     u2141:
  5129   00134A  EFBD  F009         	goto	l3103
  5130   00134E                     u2140:
  5131   00134E  5036               	movf	___fltol@exp1^0,w,c
  5132   001350  0A80               	xorlw	128
  5133   001352  0F97               	addlw	151
  5134   001354  B0D8               	btfsc	status,0,c
  5135   001356  EFAF  F009         	goto	u2151
  5136   00135A  EFB1  F009         	goto	u2150
  5137   00135E                     u2151:
  5138   00135E  EFB3  F009         	goto	l3099
  5139   001362                     u2150:
  5140   001362  EF76  F009         	goto	l3079
  5141   001366                     l3099:
  5142   001366  90D8               	bcf	status,0,c
  5143   001368  3230               	rrcf	(___fltol@f1+3)^0,f,c
  5144   00136A  322F               	rrcf	(___fltol@f1+2)^0,f,c
  5145   00136C  322E               	rrcf	(___fltol@f1+1)^0,f,c
  5146   00136E  322D               	rrcf	___fltol@f1^0,f,c
  5147   001370  3E36               	incfsz	___fltol@exp1^0,f,c
  5148   001372  EFB3  F009         	goto	l3099
  5149   001376  EFD5  F009         	goto	l3113
  5150   00137A                     l3103:
  5151   00137A  0E1F               	movlw	31
  5152   00137C  6436               	cpfsgt	___fltol@exp1^0,c
  5153   00137E  EFC3  F009         	goto	u2161
  5154   001382  EFC5  F009         	goto	u2160
  5155   001386                     u2161:
  5156   001386  EFCD  F009         	goto	l3111
  5157   00138A                     u2160:
  5158   00138A  EF76  F009         	goto	l3079
  5159   00138E                     l3109:
  5160   00138E  90D8               	bcf	status,0,c
  5161   001390  362D               	rlcf	___fltol@f1^0,f,c
  5162   001392  362E               	rlcf	(___fltol@f1+1)^0,f,c
  5163   001394  362F               	rlcf	(___fltol@f1+2)^0,f,c
  5164   001396  3630               	rlcf	(___fltol@f1+3)^0,f,c
  5165   001398  0636               	decf	___fltol@exp1^0,f,c
  5166   00139A                     l3111:
  5167   00139A  5036               	movf	___fltol@exp1^0,w,c
  5168   00139C  A4D8               	btfss	status,2,c
  5169   00139E  EFD3  F009         	goto	u2171
  5170   0013A2  EFD5  F009         	goto	u2170
  5171   0013A6                     u2171:
  5172   0013A6  EFC7  F009         	goto	l3109
  5173   0013AA                     u2170:
  5174   0013AA                     l3113:
  5175   0013AA  5035               	movf	___fltol@sign1^0,w,c
  5176   0013AC  B4D8               	btfsc	status,2,c
  5177   0013AE  EFDB  F009         	goto	u2181
  5178   0013B2  EFDD  F009         	goto	u2180
  5179   0013B6                     u2181:
  5180   0013B6  EFE5  F009         	goto	l3117
  5181   0013BA                     u2180:
  5182   0013BA  1E30               	comf	(___fltol@f1+3)^0,f,c
  5183   0013BC  1E2F               	comf	(___fltol@f1+2)^0,f,c
  5184   0013BE  1E2E               	comf	(___fltol@f1+1)^0,f,c
  5185   0013C0  6C2D               	negf	___fltol@f1^0,c
  5186   0013C2  0E00               	movlw	0
  5187   0013C4  222E               	addwfc	(___fltol@f1+1)^0,f,c
  5188   0013C6  222F               	addwfc	(___fltol@f1+2)^0,f,c
  5189   0013C8  2230               	addwfc	(___fltol@f1+3)^0,f,c
  5190   0013CA                     l3117:
  5191   0013CA  C02D  F02D         	movff	___fltol@f1,?___fltol
  5192   0013CE  C02E  F02E         	movff	___fltol@f1+1,?___fltol+1
  5193   0013D2  C02F  F02F         	movff	___fltol@f1+2,?___fltol+2
  5194   0013D6  C030  F030         	movff	___fltol@f1+3,?___fltol+3
  5195   0013DA                     l1023:
  5196   0013DA  0012               	return		;funcret
  5197   0013DC                     __end_of___fltol:
  5198                           	callstack 0
  5199                           
  5200 ;; *************** function ___fldiv *****************
  5201 ;; Defined at:
  5202 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  b               4   19[COMRAM] long 
  5205 ;;  a               4   23[COMRAM] long 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  grs             4   38[COMRAM] unsigned long 
  5208 ;;  rem             4   31[COMRAM] unsigned long 
  5209 ;;  new_exp         2   36[COMRAM] short 
  5210 ;;  aexp            1   43[COMRAM] unsigned char 
  5211 ;;  bexp            1   42[COMRAM] unsigned char 
  5212 ;;  sign            1   35[COMRAM] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  4   19[COMRAM] unsigned char 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5222 ;;      Params:         8       0       0       0       0       0       0
  5223 ;;      Locals:        13       0       0       0       0       0       0
  5224 ;;      Temps:          4       0       0       0       0       0       0
  5225 ;;      Totals:        25       0       0       0       0       0       0
  5226 ;;Total ram usage:       25 bytes
  5227 ;; Hardware stack levels used: 1
  5228 ;; Hardware stack levels required when called: 1
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_main
  5233 ;;		_get_speed
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text26
  5238   000012                     __ptext26:
  5239                           	callstack 0
  5240   000012                     ___fldiv:
  5241                           	callstack 27
  5242   000012  5017               	movf	(___fldiv@b+3)^0,w,c
  5243   000014  0B80               	andlw	128
  5244   000016  6E24               	movwf	___fldiv@sign^0,c
  5245   000018  5017               	movf	(___fldiv@b+3)^0,w,c
  5246   00001A  2417               	addwf	(___fldiv@b+3)^0,w,c
  5247   00001C  6E2B               	movwf	___fldiv@bexp^0,c
  5248   00001E  AE16               	btfss	(___fldiv@b+2)^0,7,c
  5249   000020  EF14  F000         	goto	u1771
  5250   000024  EF16  F000         	goto	u1770
  5251   000028                     u1771:
  5252   000028  EF17  F000         	goto	l2865
  5253   00002C                     u1770:
  5254   00002C  802B               	bsf	___fldiv@bexp^0,0,c
  5255   00002E                     l2865:
  5256   00002E  502B               	movf	___fldiv@bexp^0,w,c
  5257   000030  B4D8               	btfsc	status,2,c
  5258   000032  EF1D  F000         	goto	u1781
  5259   000036  EF1F  F000         	goto	u1780
  5260   00003A                     u1781:
  5261   00003A  EF34  F000         	goto	l2875
  5262   00003E                     u1780:
  5263   00003E  282B               	incf	___fldiv@bexp^0,w,c
  5264   000040  A4D8               	btfss	status,2,c
  5265   000042  EF25  F000         	goto	u1791
  5266   000046  EF27  F000         	goto	u1790
  5267   00004A                     u1791:
  5268   00004A  EF2F  F000         	goto	l2871
  5269   00004E                     u1790:
  5270   00004E  0E00               	movlw	0
  5271   000050  6E14               	movwf	___fldiv@b^0,c
  5272   000052  0E00               	movlw	0
  5273   000054  6E15               	movwf	(___fldiv@b+1)^0,c
  5274   000056  0E00               	movlw	0
  5275   000058  6E16               	movwf	(___fldiv@b+2)^0,c
  5276   00005A  0E00               	movlw	0
  5277   00005C  6E17               	movwf	(___fldiv@b+3)^0,c
  5278   00005E                     l2871:
  5279   00005E  8E16               	bsf	(___fldiv@b+2)^0,7,c
  5280   000060  0E00               	movlw	0
  5281   000062  6E17               	movwf	(___fldiv@b+3)^0,c
  5282   000064  EF3C  F000         	goto	l2877
  5283   000068                     l2875:
  5284   000068  0E00               	movlw	0
  5285   00006A  6E14               	movwf	___fldiv@b^0,c
  5286   00006C  0E00               	movlw	0
  5287   00006E  6E15               	movwf	(___fldiv@b+1)^0,c
  5288   000070  0E00               	movlw	0
  5289   000072  6E16               	movwf	(___fldiv@b+2)^0,c
  5290   000074  0E00               	movlw	0
  5291   000076  6E17               	movwf	(___fldiv@b+3)^0,c
  5292   000078                     l2877:
  5293   000078  501B               	movf	(___fldiv@a+3)^0,w,c
  5294   00007A  0B80               	andlw	128
  5295   00007C  1A24               	xorwf	___fldiv@sign^0,f,c
  5296   00007E  501B               	movf	(___fldiv@a+3)^0,w,c
  5297   000080  241B               	addwf	(___fldiv@a+3)^0,w,c
  5298   000082  6E2C               	movwf	___fldiv@aexp^0,c
  5299   000084  AE1A               	btfss	(___fldiv@a+2)^0,7,c
  5300   000086  EF47  F000         	goto	u1801
  5301   00008A  EF49  F000         	goto	u1800
  5302   00008E                     u1801:
  5303   00008E  EF4A  F000         	goto	l2885
  5304   000092                     u1800:
  5305   000092  802C               	bsf	___fldiv@aexp^0,0,c
  5306   000094                     l2885:
  5307   000094  502C               	movf	___fldiv@aexp^0,w,c
  5308   000096  B4D8               	btfsc	status,2,c
  5309   000098  EF50  F000         	goto	u1811
  5310   00009C  EF52  F000         	goto	u1810
  5311   0000A0                     u1811:
  5312   0000A0  EF67  F000         	goto	l2895
  5313   0000A4                     u1810:
  5314   0000A4  282C               	incf	___fldiv@aexp^0,w,c
  5315   0000A6  A4D8               	btfss	status,2,c
  5316   0000A8  EF58  F000         	goto	u1821
  5317   0000AC  EF5A  F000         	goto	u1820
  5318   0000B0                     u1821:
  5319   0000B0  EF62  F000         	goto	l2891
  5320   0000B4                     u1820:
  5321   0000B4  0E00               	movlw	0
  5322   0000B6  6E18               	movwf	___fldiv@a^0,c
  5323   0000B8  0E00               	movlw	0
  5324   0000BA  6E19               	movwf	(___fldiv@a+1)^0,c
  5325   0000BC  0E00               	movlw	0
  5326   0000BE  6E1A               	movwf	(___fldiv@a+2)^0,c
  5327   0000C0  0E00               	movlw	0
  5328   0000C2  6E1B               	movwf	(___fldiv@a+3)^0,c
  5329   0000C4                     l2891:
  5330   0000C4  8E1A               	bsf	(___fldiv@a+2)^0,7,c
  5331   0000C6  0E00               	movlw	0
  5332   0000C8  6E1B               	movwf	(___fldiv@a+3)^0,c
  5333   0000CA  EF6F  F000         	goto	l2897
  5334   0000CE                     l2895:
  5335   0000CE  0E00               	movlw	0
  5336   0000D0  6E18               	movwf	___fldiv@a^0,c
  5337   0000D2  0E00               	movlw	0
  5338   0000D4  6E19               	movwf	(___fldiv@a+1)^0,c
  5339   0000D6  0E00               	movlw	0
  5340   0000D8  6E1A               	movwf	(___fldiv@a+2)^0,c
  5341   0000DA  0E00               	movlw	0
  5342   0000DC  6E1B               	movwf	(___fldiv@a+3)^0,c
  5343   0000DE                     l2897:
  5344   0000DE  5018               	movf	___fldiv@a^0,w,c
  5345   0000E0  1019               	iorwf	(___fldiv@a+1)^0,w,c
  5346   0000E2  101A               	iorwf	(___fldiv@a+2)^0,w,c
  5347   0000E4  101B               	iorwf	(___fldiv@a+3)^0,w,c
  5348   0000E6  A4D8               	btfss	status,2,c
  5349   0000E8  EF78  F000         	goto	u1831
  5350   0000EC  EF7A  F000         	goto	u1830
  5351   0000F0                     u1831:
  5352   0000F0  EF92  F000         	goto	l2909
  5353   0000F4                     u1830:
  5354   0000F4  0E00               	movlw	0
  5355   0000F6  6E14               	movwf	___fldiv@b^0,c
  5356   0000F8  0E00               	movlw	0
  5357   0000FA  6E15               	movwf	(___fldiv@b+1)^0,c
  5358   0000FC  0E00               	movlw	0
  5359   0000FE  6E16               	movwf	(___fldiv@b+2)^0,c
  5360   000100  0E00               	movlw	0
  5361   000102  6E17               	movwf	(___fldiv@b+3)^0,c
  5362   000104  0E80               	movlw	128
  5363   000106  1216               	iorwf	(___fldiv@b+2)^0,f,c
  5364   000108  0E7F               	movlw	127
  5365   00010A  1217               	iorwf	(___fldiv@b+3)^0,f,c
  5366   00010C                     l2903:
  5367   00010C  5024               	movf	___fldiv@sign^0,w,c
  5368   00010E  1217               	iorwf	(___fldiv@b+3)^0,f,c
  5369   000110  C014  F014         	movff	___fldiv@b,?___fldiv
  5370   000114  C015  F015         	movff	___fldiv@b+1,?___fldiv+1
  5371   000118  C016  F016         	movff	___fldiv@b+2,?___fldiv+2
  5372   00011C  C017  F017         	movff	___fldiv@b+3,?___fldiv+3
  5373   000120  EFD5  F001         	goto	l1308
  5374   000124                     l2909:
  5375   000124  502B               	movf	___fldiv@bexp^0,w,c
  5376   000126  A4D8               	btfss	status,2,c
  5377   000128  EF98  F000         	goto	u1841
  5378   00012C  EF9A  F000         	goto	u1840
  5379   000130                     u1841:
  5380   000130  EFA4  F000         	goto	l2917
  5381   000134                     u1840:
  5382   000134  0E00               	movlw	0
  5383   000136  6E14               	movwf	?___fldiv^0,c
  5384   000138  0E00               	movlw	0
  5385   00013A  6E15               	movwf	(?___fldiv+1)^0,c
  5386   00013C  0E00               	movlw	0
  5387   00013E  6E16               	movwf	(?___fldiv+2)^0,c
  5388   000140  0E00               	movlw	0
  5389   000142  6E17               	movwf	(?___fldiv+3)^0,c
  5390   000144  EFD5  F001         	goto	l1308
  5391   000148                     l2917:
  5392   000148  502C               	movf	___fldiv@aexp^0,w,c
  5393   00014A  C02B  F01C         	movff	___fldiv@bexp,??___fldiv
  5394   00014E  6A1D               	clrf	(??___fldiv+1)^0,c
  5395   000150  5E1C               	subwf	??___fldiv^0,f,c
  5396   000152  0E00               	movlw	0
  5397   000154  5A1D               	subwfb	(??___fldiv+1)^0,f,c
  5398   000156  0E7F               	movlw	127
  5399   000158  241C               	addwf	??___fldiv^0,w,c
  5400   00015A  6E25               	movwf	___fldiv@new_exp^0,c
  5401   00015C  0E00               	movlw	0
  5402   00015E  201D               	addwfc	(??___fldiv+1)^0,w,c
  5403   000160  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  5404   000162  C014  F020         	movff	___fldiv@b,___fldiv@rem
  5405   000166  C015  F021         	movff	___fldiv@b+1,___fldiv@rem+1
  5406   00016A  C016  F022         	movff	___fldiv@b+2,___fldiv@rem+2
  5407   00016E  C017  F023         	movff	___fldiv@b+3,___fldiv@rem+3
  5408   000172  0E00               	movlw	0
  5409   000174  6E14               	movwf	___fldiv@b^0,c
  5410   000176  0E00               	movlw	0
  5411   000178  6E15               	movwf	(___fldiv@b+1)^0,c
  5412   00017A  0E00               	movlw	0
  5413   00017C  6E16               	movwf	(___fldiv@b+2)^0,c
  5414   00017E  0E00               	movlw	0
  5415   000180  6E17               	movwf	(___fldiv@b+3)^0,c
  5416   000182  0E00               	movlw	0
  5417   000184  6E27               	movwf	___fldiv@grs^0,c
  5418   000186  0E00               	movlw	0
  5419   000188  6E28               	movwf	(___fldiv@grs+1)^0,c
  5420   00018A  0E00               	movlw	0
  5421   00018C  6E29               	movwf	(___fldiv@grs+2)^0,c
  5422   00018E  0E00               	movlw	0
  5423   000190  6E2A               	movwf	(___fldiv@grs+3)^0,c
  5424   000192  0E00               	movlw	0
  5425   000194  6E2C               	movwf	___fldiv@aexp^0,c
  5426   000196  EF05  F001         	goto	l1310
  5427   00019A                     l2927:
  5428   00019A  502C               	movf	___fldiv@aexp^0,w,c
  5429   00019C  B4D8               	btfsc	status,2,c
  5430   00019E  EFD3  F000         	goto	u1851
  5431   0001A2  EFD5  F000         	goto	u1850
  5432   0001A6                     u1851:
  5433   0001A6  EFEC  F000         	goto	l2935
  5434   0001AA                     u1850:
  5435   0001AA  90D8               	bcf	status,0,c
  5436   0001AC  3620               	rlcf	___fldiv@rem^0,f,c
  5437   0001AE  3621               	rlcf	(___fldiv@rem+1)^0,f,c
  5438   0001B0  3622               	rlcf	(___fldiv@rem+2)^0,f,c
  5439   0001B2  3623               	rlcf	(___fldiv@rem+3)^0,f,c
  5440   0001B4  90D8               	bcf	status,0,c
  5441   0001B6  3614               	rlcf	___fldiv@b^0,f,c
  5442   0001B8  3615               	rlcf	(___fldiv@b+1)^0,f,c
  5443   0001BA  3616               	rlcf	(___fldiv@b+2)^0,f,c
  5444   0001BC  3617               	rlcf	(___fldiv@b+3)^0,f,c
  5445   0001BE  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  5446   0001C0  EFE4  F000         	goto	u1861
  5447   0001C4  EFE6  F000         	goto	u1860
  5448   0001C8                     u1861:
  5449   0001C8  EFE7  F000         	goto	l1313
  5450   0001CC                     u1860:
  5451   0001CC  8014               	bsf	___fldiv@b^0,0,c
  5452   0001CE                     l1313:
  5453   0001CE  90D8               	bcf	status,0,c
  5454   0001D0  3627               	rlcf	___fldiv@grs^0,f,c
  5455   0001D2  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  5456   0001D4  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  5457   0001D6  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  5458   0001D8                     l2935:
  5459   0001D8  5018               	movf	___fldiv@a^0,w,c
  5460   0001DA  5C20               	subwf	___fldiv@rem^0,w,c
  5461   0001DC  5019               	movf	(___fldiv@a+1)^0,w,c
  5462   0001DE  5821               	subwfb	(___fldiv@rem+1)^0,w,c
  5463   0001E0  501A               	movf	(___fldiv@a+2)^0,w,c
  5464   0001E2  5822               	subwfb	(___fldiv@rem+2)^0,w,c
  5465   0001E4  501B               	movf	(___fldiv@a+3)^0,w,c
  5466   0001E6  5823               	subwfb	(___fldiv@rem+3)^0,w,c
  5467   0001E8  A0D8               	btfss	status,0,c
  5468   0001EA  EFF9  F000         	goto	u1871
  5469   0001EE  EFFB  F000         	goto	u1870
  5470   0001F2                     u1871:
  5471   0001F2  EF04  F001         	goto	l2941
  5472   0001F6                     u1870:
  5473   0001F6  8C2A               	bsf	(___fldiv@grs+3)^0,6,c
  5474   0001F8  5018               	movf	___fldiv@a^0,w,c
  5475   0001FA  5E20               	subwf	___fldiv@rem^0,f,c
  5476   0001FC  5019               	movf	(___fldiv@a+1)^0,w,c
  5477   0001FE  5A21               	subwfb	(___fldiv@rem+1)^0,f,c
  5478   000200  501A               	movf	(___fldiv@a+2)^0,w,c
  5479   000202  5A22               	subwfb	(___fldiv@rem+2)^0,f,c
  5480   000204  501B               	movf	(___fldiv@a+3)^0,w,c
  5481   000206  5A23               	subwfb	(___fldiv@rem+3)^0,f,c
  5482   000208                     l2941:
  5483   000208  2A2C               	incf	___fldiv@aexp^0,f,c
  5484   00020A                     l1310:
  5485   00020A  0E19               	movlw	25
  5486   00020C  642C               	cpfsgt	___fldiv@aexp^0,c
  5487   00020E  EF0B  F001         	goto	u1881
  5488   000212  EF0D  F001         	goto	u1880
  5489   000216                     u1881:
  5490   000216  EFCD  F000         	goto	l2927
  5491   00021A                     u1880:
  5492   00021A  5020               	movf	___fldiv@rem^0,w,c
  5493   00021C  1021               	iorwf	(___fldiv@rem+1)^0,w,c
  5494   00021E  1022               	iorwf	(___fldiv@rem+2)^0,w,c
  5495   000220  1023               	iorwf	(___fldiv@rem+3)^0,w,c
  5496   000222  B4D8               	btfsc	status,2,c
  5497   000224  EF16  F001         	goto	u1891
  5498   000228  EF18  F001         	goto	u1890
  5499   00022C                     u1891:
  5500   00022C  EF30  F001         	goto	l2953
  5501   000230                     u1890:
  5502   000230  8027               	bsf	___fldiv@grs^0,0,c
  5503   000232  EF30  F001         	goto	l2953
  5504   000236                     l2947:
  5505   000236  90D8               	bcf	status,0,c
  5506   000238  3614               	rlcf	___fldiv@b^0,f,c
  5507   00023A  3615               	rlcf	(___fldiv@b+1)^0,f,c
  5508   00023C  3616               	rlcf	(___fldiv@b+2)^0,f,c
  5509   00023E  3617               	rlcf	(___fldiv@b+3)^0,f,c
  5510   000240  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  5511   000242  EF25  F001         	goto	u1901
  5512   000246  EF27  F001         	goto	u1900
  5513   00024A                     u1901:
  5514   00024A  EF28  F001         	goto	l1319
  5515   00024E                     u1900:
  5516   00024E  8014               	bsf	___fldiv@b^0,0,c
  5517   000250                     l1319:
  5518   000250  90D8               	bcf	status,0,c
  5519   000252  3627               	rlcf	___fldiv@grs^0,f,c
  5520   000254  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  5521   000256  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  5522   000258  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  5523   00025A  0625               	decf	___fldiv@new_exp^0,f,c
  5524   00025C  A0D8               	btfss	status,0,c
  5525   00025E  0626               	decf	(___fldiv@new_exp+1)^0,f,c
  5526   000260                     l2953:
  5527   000260  AE16               	btfss	(___fldiv@b+2)^0,7,c
  5528   000262  EF35  F001         	goto	u1911
  5529   000266  EF37  F001         	goto	u1910
  5530   00026A                     u1911:
  5531   00026A  EF1B  F001         	goto	l2947
  5532   00026E                     u1910:
  5533   00026E  0E00               	movlw	0
  5534   000270  6E2C               	movwf	___fldiv@aexp^0,c
  5535   000272  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  5536   000274  EF3E  F001         	goto	u1921
  5537   000278  EF40  F001         	goto	u1920
  5538   00027C                     u1921:
  5539   00027C  EF64  F001         	goto	l1321
  5540   000280                     u1920:
  5541   000280  0EFF               	movlw	255
  5542   000282  1427               	andwf	___fldiv@grs^0,w,c
  5543   000284  6E1C               	movwf	??___fldiv^0,c
  5544   000286  0EFF               	movlw	255
  5545   000288  1428               	andwf	(___fldiv@grs+1)^0,w,c
  5546   00028A  6E1D               	movwf	(??___fldiv+1)^0,c
  5547   00028C  0EFF               	movlw	255
  5548   00028E  1429               	andwf	(___fldiv@grs+2)^0,w,c
  5549   000290  6E1E               	movwf	(??___fldiv+2)^0,c
  5550   000292  0E7F               	movlw	127
  5551   000294  142A               	andwf	(___fldiv@grs+3)^0,w,c
  5552   000296  6E1F               	movwf	(??___fldiv+3)^0,c
  5553   000298  501C               	movf	??___fldiv^0,w,c
  5554   00029A  101D               	iorwf	(??___fldiv+1)^0,w,c
  5555   00029C  101E               	iorwf	(??___fldiv+2)^0,w,c
  5556   00029E  101F               	iorwf	(??___fldiv+3)^0,w,c
  5557   0002A0  B4D8               	btfsc	status,2,c
  5558   0002A2  EF55  F001         	goto	u1931
  5559   0002A6  EF57  F001         	goto	u1930
  5560   0002AA                     u1931:
  5561   0002AA  EF5B  F001         	goto	l1322
  5562   0002AE                     u1930:
  5563   0002AE                     l2961:
  5564   0002AE  0E01               	movlw	1
  5565   0002B0  6E2C               	movwf	___fldiv@aexp^0,c
  5566   0002B2  EF64  F001         	goto	l1321
  5567   0002B6                     l1322:
  5568   0002B6  A014               	btfss	___fldiv@b^0,0,c
  5569   0002B8  EF60  F001         	goto	u1941
  5570   0002BC  EF62  F001         	goto	u1940
  5571   0002C0                     u1941:
  5572   0002C0  EF64  F001         	goto	l1321
  5573   0002C4                     u1940:
  5574   0002C4  EF57  F001         	goto	l2961
  5575   0002C8                     l1321:
  5576   0002C8  502C               	movf	___fldiv@aexp^0,w,c
  5577   0002CA  B4D8               	btfsc	status,2,c
  5578   0002CC  EF6A  F001         	goto	u1951
  5579   0002D0  EF6C  F001         	goto	u1950
  5580   0002D4                     u1951:
  5581   0002D4  EF90  F001         	goto	l2973
  5582   0002D8                     u1950:
  5583   0002D8  0E01               	movlw	1
  5584   0002DA  2614               	addwf	___fldiv@b^0,f,c
  5585   0002DC  0E00               	movlw	0
  5586   0002DE  2215               	addwfc	(___fldiv@b+1)^0,f,c
  5587   0002E0  2216               	addwfc	(___fldiv@b+2)^0,f,c
  5588   0002E2  2217               	addwfc	(___fldiv@b+3)^0,f,c
  5589   0002E4  A017               	btfss	(___fldiv@b+3)^0,0,c
  5590   0002E6  EF77  F001         	goto	u1961
  5591   0002EA  EF79  F001         	goto	u1960
  5592   0002EE                     u1961:
  5593   0002EE  EF90  F001         	goto	l2973
  5594   0002F2                     u1960:
  5595   0002F2  C014  F01C         	movff	___fldiv@b,??___fldiv
  5596   0002F6  C015  F01D         	movff	___fldiv@b+1,??___fldiv+1
  5597   0002FA  C016  F01E         	movff	___fldiv@b+2,??___fldiv+2
  5598   0002FE  C017  F01F         	movff	___fldiv@b+3,??___fldiv+3
  5599   000302  341F               	rlcf	(??___fldiv+3)^0,w,c
  5600   000304  321F               	rrcf	(??___fldiv+3)^0,f,c
  5601   000306  321E               	rrcf	(??___fldiv+2)^0,f,c
  5602   000308  321D               	rrcf	(??___fldiv+1)^0,f,c
  5603   00030A  321C               	rrcf	??___fldiv^0,f,c
  5604   00030C  C01C  F014         	movff	??___fldiv,___fldiv@b
  5605   000310  C01D  F015         	movff	??___fldiv+1,___fldiv@b+1
  5606   000314  C01E  F016         	movff	??___fldiv+2,___fldiv@b+2
  5607   000318  C01F  F017         	movff	??___fldiv+3,___fldiv@b+3
  5608   00031C  4A25               	infsnz	___fldiv@new_exp^0,f,c
  5609   00031E  2A26               	incf	(___fldiv@new_exp+1)^0,f,c
  5610   000320                     l2973:
  5611   000320  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5612   000322  EF9B  F001         	goto	u1971
  5613   000326  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  5614   000328  E108               	bnz	u1970
  5615   00032A  2825               	incf	___fldiv@new_exp^0,w,c
  5616   00032C  A0D8               	btfss	status,0,c
  5617   00032E  EF9B  F001         	goto	u1971
  5618   000332  EF9D  F001         	goto	u1970
  5619   000336                     u1971:
  5620   000336  EFA8  F001         	goto	l2977
  5621   00033A                     u1970:
  5622   00033A  0E00               	movlw	0
  5623   00033C  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  5624   00033E  6825               	setf	___fldiv@new_exp^0,c
  5625   000340  0E00               	movlw	0
  5626   000342  6E14               	movwf	___fldiv@b^0,c
  5627   000344  0E00               	movlw	0
  5628   000346  6E15               	movwf	(___fldiv@b+1)^0,c
  5629   000348  0E00               	movlw	0
  5630   00034A  6E16               	movwf	(___fldiv@b+2)^0,c
  5631   00034C  0E00               	movlw	0
  5632   00034E  6E17               	movwf	(___fldiv@b+3)^0,c
  5633   000350                     l2977:
  5634   000350  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5635   000352  EFB5  F001         	goto	u1980
  5636   000356  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  5637   000358  E106               	bnz	u1981
  5638   00035A  0425               	decf	___fldiv@new_exp^0,w,c
  5639   00035C  B0D8               	btfsc	status,0,c
  5640   00035E  EFB3  F001         	goto	u1981
  5641   000362  EFB5  F001         	goto	u1980
  5642   000366                     u1981:
  5643   000366  EFC3  F001         	goto	l2981
  5644   00036A                     u1980:
  5645   00036A  0E00               	movlw	0
  5646   00036C  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  5647   00036E  0E00               	movlw	0
  5648   000370  6E25               	movwf	___fldiv@new_exp^0,c
  5649   000372  0E00               	movlw	0
  5650   000374  6E14               	movwf	___fldiv@b^0,c
  5651   000376  0E00               	movlw	0
  5652   000378  6E15               	movwf	(___fldiv@b+1)^0,c
  5653   00037A  0E00               	movlw	0
  5654   00037C  6E16               	movwf	(___fldiv@b+2)^0,c
  5655   00037E  0E00               	movlw	0
  5656   000380  6E17               	movwf	(___fldiv@b+3)^0,c
  5657   000382  0E00               	movlw	0
  5658   000384  6E24               	movwf	___fldiv@sign^0,c
  5659   000386                     l2981:
  5660   000386  C025  F02B         	movff	___fldiv@new_exp,___fldiv@bexp
  5661   00038A  A02B               	btfss	___fldiv@bexp^0,0,c
  5662   00038C  EFCA  F001         	goto	u1991
  5663   000390  EFCC  F001         	goto	u1990
  5664   000394                     u1991:
  5665   000394  EFCF  F001         	goto	l2987
  5666   000398                     u1990:
  5667   000398  8E16               	bsf	(___fldiv@b+2)^0,7,c
  5668   00039A  EFD0  F001         	goto	l2989
  5669   00039E                     l2987:
  5670   00039E  9E16               	bcf	(___fldiv@b+2)^0,7,c
  5671   0003A0                     l2989:
  5672   0003A0  90D8               	bcf	status,0,c
  5673   0003A2  302B               	rrcf	___fldiv@bexp^0,w,c
  5674   0003A4  6E17               	movwf	(___fldiv@b+3)^0,c
  5675   0003A6  EF86  F000         	goto	l2903
  5676   0003AA                     l1308:
  5677   0003AA  0012               	return		;funcret
  5678   0003AC                     __end_of___fldiv:
  5679                           	callstack 0
  5680                           
  5681 ;; *************** function _gear_monitor *****************
  5682 ;; Defined at:
  5683 ;;		line 56 in file "car_black_box.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  uckey           1    wreg     unsigned char 
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;  uckey           1    0[COMRAM] unsigned char 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  1    wreg      void 
  5690 ;; Registers used:
  5691 ;;		wreg, status,2, status,0
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5697 ;;      Params:         0       0       0       0       0       0       0
  5698 ;;      Locals:         1       0       0       0       0       0       0
  5699 ;;      Temps:          0       0       0       0       0       0       0
  5700 ;;      Totals:         1       0       0       0       0       0       0
  5701 ;;Total ram usage:        1 bytes
  5702 ;; Hardware stack levels used: 1
  5703 ;; Hardware stack levels required when called: 1
  5704 ;; This function calls:
  5705 ;;		Nothing
  5706 ;; This function is called by:
  5707 ;;		_main
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           	psect	text27
  5712   000F76                     __ptext27:
  5713                           	callstack 0
  5714   000F76                     _gear_monitor:
  5715                           	callstack 29
  5716                           
  5717                           ;incstack = 0
  5718                           ;gear_monitor@uckey stored from wreg
  5719   000F76  6E01               	movwf	gear_monitor@uckey^0,c
  5720   000F78                     
  5721                           ;car_black_box.c: 57:     static unsigned char crashflag=0, prekey=0xFF;;car_black_box.c
      +                          : 58:     static long int delay=0;;car_black_box.c: 59:     if(uckey==1 || uckey==2 || u
      +                          ckey==3)
  5722   000F78  0401               	decf	gear_monitor@uckey^0,w,c
  5723   000F7A  B4D8               	btfsc	status,2,c
  5724   000F7C  EFC2  F007         	goto	u2601
  5725   000F80  EFC4  F007         	goto	u2600
  5726   000F84                     u2601:
  5727   000F84  EFD6  F007         	goto	l3541
  5728   000F88                     u2600:
  5729   000F88  0E02               	movlw	2
  5730   000F8A  1801               	xorwf	gear_monitor@uckey^0,w,c
  5731   000F8C  B4D8               	btfsc	status,2,c
  5732   000F8E  EFCB  F007         	goto	u2611
  5733   000F92  EFCD  F007         	goto	u2610
  5734   000F96                     u2611:
  5735   000F96  EFD6  F007         	goto	l3541
  5736   000F9A                     u2610:
  5737   000F9A  0E03               	movlw	3
  5738   000F9C  1801               	xorwf	gear_monitor@uckey^0,w,c
  5739   000F9E  A4D8               	btfss	status,2,c
  5740   000FA0  EFD4  F007         	goto	u2621
  5741   000FA4  EFD6  F007         	goto	u2620
  5742   000FA8                     u2621:
  5743   000FA8  EFFA  F007         	goto	l3547
  5744   000FAC                     u2620:
  5745   000FAC                     l3541:
  5746                           
  5747                           ;car_black_box.c: 60:     {;car_black_box.c: 61:         delay++;
  5748   000FAC  0E01               	movlw	1
  5749   000FAE  0100               	movlb	0	; () banked
  5750   000FB0  277E               	addwf	gear_monitor@delay& (0+255),f,b
  5751   000FB2  0E00               	movlw	0
  5752   000FB4  237F               	addwfc	(gear_monitor@delay+1)& (0+255),f,b
  5753   000FB6  2380               	addwfc	(gear_monitor@delay+2)& (0+255),f,b
  5754   000FB8  2381               	addwfc	(gear_monitor@delay+3)& (0+255),f,b
  5755   000FBA                     
  5756                           ; BSR set to: 0
  5757                           ;car_black_box.c: 62:         prekey=uckey;
  5758   000FBA  C001  F05B         	movff	gear_monitor@uckey,gear_monitor@prekey
  5759                           
  5760                           ;car_black_box.c: 63:         if(delay>4000)
  5761   000FBE  BF81               	btfsc	(gear_monitor@delay+3)& (0+255),7,b
  5762   000FC0  EFEE  F007         	goto	u2631
  5763   000FC4  5181               	movf	(gear_monitor@delay+3)& (0+255),w,b
  5764   000FC6  1180               	iorwf	(gear_monitor@delay+2)& (0+255),w,b
  5765   000FC8  E10B               	bnz	u2630
  5766   000FCA  0EA1               	movlw	161
  5767   000FCC  5D7E               	subwf	gear_monitor@delay& (0+255),w,b
  5768   000FCE  0E0F               	movlw	15
  5769   000FD0  597F               	subwfb	(gear_monitor@delay+1)& (0+255),w,b
  5770   000FD2  A0D8               	btfss	status,0,c
  5771   000FD4  EFEE  F007         	goto	u2631
  5772   000FD8  EFF0  F007         	goto	u2630
  5773   000FDC                     u2631:
  5774   000FDC  EF54  F008         	goto	l183
  5775   000FE0                     u2630:
  5776   000FE0                     
  5777                           ; BSR set to: 0
  5778                           ;car_black_box.c: 64:             delay=0;
  5779   000FE0  0E00               	movlw	0
  5780   000FE2  6F7E               	movwf	gear_monitor@delay& (0+255),b
  5781   000FE4  0E00               	movlw	0
  5782   000FE6  6F7F               	movwf	(gear_monitor@delay+1)& (0+255),b
  5783   000FE8  0E00               	movlw	0
  5784   000FEA  6F80               	movwf	(gear_monitor@delay+2)& (0+255),b
  5785   000FEC  0E00               	movlw	0
  5786   000FEE  6F81               	movwf	(gear_monitor@delay+3)& (0+255),b
  5787   000FF0  EF54  F008         	goto	l183
  5788   000FF4                     l3547:
  5789   000FF4  0100               	movlb	0	; () banked
  5790   000FF6  517E               	movf	gear_monitor@delay& (0+255),w,b
  5791   000FF8  117F               	iorwf	(gear_monitor@delay+1)& (0+255),w,b
  5792   000FFA  1180               	iorwf	(gear_monitor@delay+2)& (0+255),w,b
  5793   000FFC  1181               	iorwf	(gear_monitor@delay+3)& (0+255),w,b
  5794   000FFE  B4D8               	btfsc	status,2,c
  5795   001000  EF04  F008         	goto	u2641
  5796   001004  EF06  F008         	goto	u2640
  5797   001008                     u2641:
  5798   001008  EF54  F008         	goto	l183
  5799   00100C                     u2640:
  5800   00100C                     
  5801                           ; BSR set to: 0
  5802                           ;car_black_box.c: 67:     {;car_black_box.c: 68:         if(prekey == 1)
  5803   00100C  045B               	decf	gear_monitor@prekey^0,w,c
  5804   00100E  A4D8               	btfss	status,2,c
  5805   001010  EF0C  F008         	goto	u2651
  5806   001014  EF0E  F008         	goto	u2650
  5807   001018                     u2651:
  5808   001018  EF14  F008         	goto	l3553
  5809   00101C                     u2650:
  5810   00101C                     
  5811                           ; BSR set to: 0
  5812                           ;car_black_box.c: 69:         {;car_black_box.c: 70:             crashflag=1;
  5813   00101C  0E01               	movlw	1
  5814   00101E  6E50               	movwf	gear_monitor@crashflag^0,c
  5815                           
  5816                           ;car_black_box.c: 71:             signindex=7;
  5817   001020  0E07               	movlw	7
  5818   001022  6E51               	movwf	_signindex^0,c
  5819                           
  5820                           ;car_black_box.c: 72:         }
  5821   001024  EF53  F008         	goto	l3571
  5822   001028                     l3553:
  5823                           
  5824                           ; BSR set to: 0
  5825   001028  0E02               	movlw	2
  5826   00102A  185B               	xorwf	gear_monitor@prekey^0,w,c
  5827   00102C  A4D8               	btfss	status,2,c
  5828   00102E  EF1B  F008         	goto	u2661
  5829   001032  EF1D  F008         	goto	u2660
  5830   001036                     u2661:
  5831   001036  EF37  F008         	goto	l3563
  5832   00103A                     u2660:
  5833   00103A                     
  5834                           ; BSR set to: 0
  5835                           ;car_black_box.c: 74:         {;car_black_box.c: 75:             if(signindex < 6)
  5836   00103A  0E06               	movlw	6
  5837   00103C  6051               	cpfslt	_signindex^0,c
  5838   00103E  EF23  F008         	goto	u2671
  5839   001042  EF25  F008         	goto	u2670
  5840   001046                     u2671:
  5841   001046  EF28  F008         	goto	l3559
  5842   00104A                     u2670:
  5843   00104A                     
  5844                           ; BSR set to: 0
  5845                           ;car_black_box.c: 76:                 signindex++;
  5846   00104A  2A51               	incf	_signindex^0,f,c
  5847   00104C  EF53  F008         	goto	l3571
  5848   001050                     l3559:
  5849                           
  5850                           ; BSR set to: 0
  5851   001050  0E07               	movlw	7
  5852   001052  1851               	xorwf	_signindex^0,w,c
  5853   001054  A4D8               	btfss	status,2,c
  5854   001056  EF2F  F008         	goto	u2681
  5855   00105A  EF31  F008         	goto	u2680
  5856   00105E                     u2681:
  5857   00105E  EF53  F008         	goto	l180
  5858   001062                     u2680:
  5859   001062                     
  5860                           ; BSR set to: 0
  5861                           ;car_black_box.c: 78:             {;car_black_box.c: 79:                 signindex=1;
  5862   001062  0E01               	movlw	1
  5863   001064  6E51               	movwf	_signindex^0,c
  5864                           
  5865                           ;car_black_box.c: 80:                 crashflag=0;
  5866   001066  0E00               	movlw	0
  5867   001068  6E50               	movwf	gear_monitor@crashflag^0,c
  5868   00106A  EF53  F008         	goto	l3571
  5869   00106E                     l3563:
  5870                           
  5871                           ; BSR set to: 0
  5872   00106E  0E03               	movlw	3
  5873   001070  185B               	xorwf	gear_monitor@prekey^0,w,c
  5874   001072  A4D8               	btfss	status,2,c
  5875   001074  EF3E  F008         	goto	u2691
  5876   001078  EF40  F008         	goto	u2690
  5877   00107C                     u2691:
  5878   00107C  EF53  F008         	goto	l3571
  5879   001080                     u2690:
  5880   001080                     
  5881                           ; BSR set to: 0
  5882                           ;car_black_box.c: 84:         {;car_black_box.c: 85:               if(crashflag ==0 && s
      +                          ignindex > 1)
  5883   001080  5050               	movf	gear_monitor@crashflag^0,w,c
  5884   001082  A4D8               	btfss	status,2,c
  5885   001084  EF46  F008         	goto	u2701
  5886   001088  EF48  F008         	goto	u2700
  5887   00108C                     u2701:
  5888   00108C  EF53  F008         	goto	l180
  5889   001090                     u2700:
  5890   001090                     
  5891                           ; BSR set to: 0
  5892   001090  0E01               	movlw	1
  5893   001092  6451               	cpfsgt	_signindex^0,c
  5894   001094  EF4E  F008         	goto	u2711
  5895   001098  EF50  F008         	goto	u2710
  5896   00109C                     u2711:
  5897   00109C  EF53  F008         	goto	l180
  5898   0010A0                     u2710:
  5899   0010A0                     
  5900                           ; BSR set to: 0
  5901                           ;car_black_box.c: 86:                   signindex--;
  5902   0010A0  0651               	decf	_signindex^0,f,c
  5903   0010A2  EF53  F008         	goto	l3571
  5904   0010A6                     l180:
  5905   0010A6                     l3571:
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;car_black_box.c: 88:         prekey=0xFF;
  5909   0010A6  685B               	setf	gear_monitor@prekey^0,c
  5910   0010A8                     l183:
  5911                           
  5912                           ; BSR set to: 0
  5913   0010A8  0012               	return		;funcret
  5914   0010AA                     __end_of_gear_monitor:
  5915                           	callstack 0
  5916                           
  5917 ;; *************** function _download_log *****************
  5918 ;; Defined at:
  5919 ;;		line 177 in file "scrolldisplay.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  ucKey           1    wreg     unsigned char 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  ucKey           1    0[COMRAM] unsigned char 
  5924 ;;  i               2   12[COMRAM] int 
  5925 ;;  j               2   10[COMRAM] int 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      void 
  5928 ;; Registers used:
  5929 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5935 ;;      Params:         0       0       0       0       0       0       0
  5936 ;;      Locals:         4       0       0       0       0       0       0
  5937 ;;      Temps:          2       0       0       0       0       0       0
  5938 ;;      Totals:         6       0       0       0       0       0       0
  5939 ;;Total ram usage:        6 bytes
  5940 ;; Hardware stack levels used: 1
  5941 ;; Hardware stack levels required when called: 5
  5942 ;; This function calls:
  5943 ;;		___wmul
  5944 ;;		_clcd_print
  5945 ;;		_putch
  5946 ;;		_puts
  5947 ;;		_read_external_eeprom
  5948 ;; This function is called by:
  5949 ;;		_main
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           	psect	text28
  5954   001586                     __ptext28:
  5955                           	callstack 0
  5956   001586                     _download_log:
  5957                           	callstack 25
  5958   001586                     
  5959                           ;scrolldisplay.c: 177: void download_log(unsigned char ucKey);scrolldisplay.c: 178: {;sc
      +                          rolldisplay.c: 179:     static char k=0x05;;scrolldisplay.c: 180:      clcd_print((unsig
      +                          ned char*) "Downloading logs ..", (0x80 + (0)));
  5960   001586  0E79               	movlw	low STR_32
  5961   001588  6E03               	movwf	clcd_print@data^0,c
  5962   00158A  0E2E               	movlw	high STR_32
  5963   00158C  6E04               	movwf	(clcd_print@data+1)^0,c
  5964   00158E  0E80               	movlw	128
  5965   001590  6E05               	movwf	clcd_print@addr^0,c
  5966   001592  EC4C  F00E         	call	_clcd_print	;wreg free
  5967   001596                     
  5968                           ;scrolldisplay.c: 181:       for(int j=0; j<10; j++)
  5969   001596  0E00               	movlw	0
  5970   001598  6E0C               	movwf	(download_log@j+1)^0,c
  5971   00159A  0E00               	movlw	0
  5972   00159C  6E0B               	movwf	download_log@j^0,c
  5973   00159E                     l3943:
  5974                           
  5975                           ;scrolldisplay.c: 182:     {;scrolldisplay.c: 183:         for(int i=0;i<16;i++)
  5976   00159E  0E00               	movlw	0
  5977   0015A0  6E0E               	movwf	(download_log@i+1)^0,c
  5978   0015A2  0E00               	movlw	0
  5979   0015A4  6E0D               	movwf	download_log@i^0,c
  5980   0015A6                     l3949:
  5981                           
  5982                           ;scrolldisplay.c: 184:         {;scrolldisplay.c: 185:             eventdata[j][i]= read
      +                          _external_eeprom( k + (unsigned char)i);
  5983   0015A6  C00B  F001         	movff	download_log@j,___wmul@multiplier
  5984   0015AA  C00C  F002         	movff	download_log@j+1,___wmul@multiplier+1
  5985   0015AE  0E00               	movlw	0
  5986   0015B0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5987   0015B2  0E11               	movlw	17
  5988   0015B4  6E03               	movwf	___wmul@multiplicand^0,c
  5989   0015B6  EC1A  F010         	call	___wmul	;wreg free
  5990   0015BA  0E00               	movlw	low _eventdata
  5991   0015BC  2401               	addwf	?___wmul^0,w,c
  5992   0015BE  6E09               	movwf	??_download_log^0,c
  5993   0015C0  0E01               	movlw	high _eventdata
  5994   0015C2  2002               	addwfc	(?___wmul+1)^0,w,c
  5995   0015C4  6E0A               	movwf	(??_download_log+1)^0,c
  5996   0015C6  500D               	movf	download_log@i^0,w,c
  5997   0015C8  2409               	addwf	??_download_log^0,w,c
  5998   0015CA  6ED9               	movwf	fsr2l,c
  5999   0015CC  500E               	movf	(download_log@i+1)^0,w,c
  6000   0015CE  200A               	addwfc	(??_download_log+1)^0,w,c
  6001   0015D0  6EDA               	movwf	fsr2h,c
  6002   0015D2  5057               	movf	download_log@k^0,w,c
  6003   0015D4  240D               	addwf	download_log@i^0,w,c
  6004   0015D6  ECF0  F00F         	call	_read_external_eeprom
  6005   0015DA  6EDF               	movwf	indf2,c
  6006   0015DC                     
  6007                           ;scrolldisplay.c: 186:         }
  6008   0015DC  4A0D               	infsnz	download_log@i^0,f,c
  6009   0015DE  2A0E               	incf	(download_log@i+1)^0,f,c
  6010   0015E0  BE0E               	btfsc	(download_log@i+1)^0,7,c
  6011   0015E2  EFFC  F00A         	goto	u3251
  6012   0015E6  500E               	movf	(download_log@i+1)^0,w,c
  6013   0015E8  E109               	bnz	u3250
  6014   0015EA  0E10               	movlw	16
  6015   0015EC  5C0D               	subwf	download_log@i^0,w,c
  6016   0015EE  A0D8               	btfss	status,0,c
  6017   0015F0  EFFC  F00A         	goto	u3251
  6018   0015F4  EFFE  F00A         	goto	u3250
  6019   0015F8                     u3251:
  6020   0015F8  EFD3  F00A         	goto	l3949
  6021   0015FC                     u3250:
  6022   0015FC                     
  6023                           ;scrolldisplay.c: 187:         puts(eventdata[j]);
  6024   0015FC  C00B  F001         	movff	download_log@j,___wmul@multiplier
  6025   001600  C00C  F002         	movff	download_log@j+1,___wmul@multiplier+1
  6026   001604  0E00               	movlw	0
  6027   001606  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6028   001608  0E11               	movlw	17
  6029   00160A  6E03               	movwf	___wmul@multiplicand^0,c
  6030   00160C  EC1A  F010         	call	___wmul	;wreg free
  6031   001610  0E00               	movlw	low _eventdata
  6032   001612  2401               	addwf	?___wmul^0,w,c
  6033   001614  6E07               	movwf	puts@data^0,c
  6034   001616  0E01               	movlw	high _eventdata
  6035   001618  2002               	addwfc	(?___wmul+1)^0,w,c
  6036   00161A  6E08               	movwf	(puts@data+1)^0,c
  6037   00161C  ECD8  F00F         	call	_puts	;wreg free
  6038   001620                     
  6039                           ;scrolldisplay.c: 188:         putch('\n');
  6040   001620  0E0A               	movlw	10
  6041   001622  EC5B  F010         	call	_putch
  6042   001626                     
  6043                           ;scrolldisplay.c: 189:         k+=16;
  6044   001626  0E10               	movlw	16
  6045   001628  2657               	addwf	download_log@k^0,f,c
  6046   00162A                     
  6047                           ;scrolldisplay.c: 190:     }
  6048   00162A  4A0B               	infsnz	download_log@j^0,f,c
  6049   00162C  2A0C               	incf	(download_log@j+1)^0,f,c
  6050   00162E  BE0C               	btfsc	(download_log@j+1)^0,7,c
  6051   001630  EF23  F00B         	goto	u3261
  6052   001634  500C               	movf	(download_log@j+1)^0,w,c
  6053   001636  E109               	bnz	u3260
  6054   001638  0E0A               	movlw	10
  6055   00163A  5C0B               	subwf	download_log@j^0,w,c
  6056   00163C  A0D8               	btfss	status,0,c
  6057   00163E  EF23  F00B         	goto	u3261
  6058   001642  EF25  F00B         	goto	u3260
  6059   001646                     u3261:
  6060   001646  EFCF  F00A         	goto	l3943
  6061   00164A                     u3260:
  6062   00164A  0012               	return		;funcret
  6063   00164C                     __end_of_download_log:
  6064                           	callstack 0
  6065                           
  6066 ;; *************** function _read_external_eeprom *****************
  6067 ;; Defined at:
  6068 ;;		line 19 in file "external.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  address         1    wreg     unsigned char 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  address         1    1[COMRAM] unsigned char 
  6073 ;;  data            1    2[COMRAM] unsigned char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      unsigned char 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6083 ;;      Params:         0       0       0       0       0       0       0
  6084 ;;      Locals:         2       0       0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0
  6086 ;;      Totals:         2       0       0       0       0       0       0
  6087 ;;Total ram usage:        2 bytes
  6088 ;; Hardware stack levels used: 1
  6089 ;; Hardware stack levels required when called: 4
  6090 ;; This function calls:
  6091 ;;		_i2c_read
  6092 ;;		_i2c_rep_start
  6093 ;;		_i2c_start
  6094 ;;		_i2c_stop
  6095 ;;		_i2c_write
  6096 ;; This function is called by:
  6097 ;;		_main
  6098 ;;		_view_log
  6099 ;;		_download_log
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text29
  6104   001FE0                     __ptext29:
  6105                           	callstack 0
  6106   001FE0                     _read_external_eeprom:
  6107                           	callstack 25
  6108                           
  6109                           ;incstack = 0
  6110                           ;read_external_eeprom@address stored from wreg
  6111   001FE0  6E02               	movwf	read_external_eeprom@address^0,c
  6112   001FE2                     
  6113                           ;external.c: 19: unsigned char read_external_eeprom(unsigned char address);external.c: 2
      +                          0: {;external.c: 21:  unsigned char data;;external.c: 23:  i2c_start();
  6114   001FE2  ECCC  F010         	call	_i2c_start	;wreg free
  6115   001FE6                     
  6116                           ;external.c: 24:  i2c_write(0xA0);
  6117   001FE6  0EA0               	movlw	160
  6118   001FE8  ECB3  F010         	call	_i2c_write
  6119   001FEC                     
  6120                           ;external.c: 25:  i2c_write(address);
  6121   001FEC  5002               	movf	read_external_eeprom@address^0,w,c
  6122   001FEE  ECB3  F010         	call	_i2c_write
  6123   001FF2                     
  6124                           ;external.c: 26:  i2c_rep_start();
  6125   001FF2  ECD0  F010         	call	_i2c_rep_start	;wreg free
  6126   001FF6                     
  6127                           ;external.c: 27:  i2c_write(0xA1);
  6128   001FF6  0EA1               	movlw	161
  6129   001FF8  ECB3  F010         	call	_i2c_write
  6130                           
  6131                           ;external.c: 28:  data = i2c_read();
  6132   001FFC  ECB9  F010         	call	_i2c_read	;wreg free
  6133   002000  6E03               	movwf	read_external_eeprom@data^0,c
  6134   002002                     
  6135                           ;external.c: 29:  i2c_stop();
  6136   002002  ECC8  F010         	call	_i2c_stop	;wreg free
  6137                           
  6138                           ;external.c: 31:  return data;
  6139   002006  5003               	movf	read_external_eeprom@data^0,w,c
  6140   002008  0012               	return		;funcret
  6141   00200A                     __end_of_read_external_eeprom:
  6142                           	callstack 0
  6143                           
  6144 ;; *************** function _puts *****************
  6145 ;; Defined at:
  6146 ;;		line 49 in file "uart.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  data            2    6[COMRAM] PTR unsigned char 
  6149 ;;		 -> eventdata(170), 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;		None
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1    wreg      void 
  6154 ;; Registers used:
  6155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6161 ;;      Params:         2       0       0       0       0       0       0
  6162 ;;      Locals:         0       0       0       0       0       0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0
  6164 ;;      Totals:         2       0       0       0       0       0       0
  6165 ;;Total ram usage:        2 bytes
  6166 ;; Hardware stack levels used: 1
  6167 ;; Hardware stack levels required when called: 2
  6168 ;; This function calls:
  6169 ;;		_putch
  6170 ;; This function is called by:
  6171 ;;		_download_log
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text30
  6176   001FB0                     __ptext30:
  6177                           	callstack 0
  6178   001FB0                     _puts:
  6179                           	callstack 27
  6180   001FB0                     
  6181                           ;uart.c: 49: void puts(char*data);uart.c: 50: {;uart.c: 51:     while(*data)
  6182   001FB0  EFE3  F00F         	goto	l3449
  6183   001FB4                     l3445:
  6184                           
  6185                           ;uart.c: 52:     {;uart.c: 53:         putch(*data);
  6186   001FB4  C007  FFD9         	movff	puts@data,fsr2l
  6187   001FB8  C008  FFDA         	movff	puts@data+1,fsr2h
  6188   001FBC  50DF               	movf	indf2,w,c
  6189   001FBE  EC5B  F010         	call	_putch
  6190   001FC2                     
  6191                           ;uart.c: 54:         data++;
  6192   001FC2  4A07               	infsnz	puts@data^0,f,c
  6193   001FC4  2A08               	incf	(puts@data+1)^0,f,c
  6194   001FC6                     l3449:
  6195                           
  6196                           ;uart.c: 51:     while(*data)
  6197   001FC6  C007  FFD9         	movff	puts@data,fsr2l
  6198   001FCA  C008  FFDA         	movff	puts@data+1,fsr2h
  6199   001FCE  50DF               	movf	indf2,w,c
  6200   001FD0  A4D8               	btfss	status,2,c
  6201   001FD2  EFED  F00F         	goto	u2521
  6202   001FD6  EFEF  F00F         	goto	u2520
  6203   001FDA                     u2521:
  6204   001FDA  EFDA  F00F         	goto	l3445
  6205   001FDE                     u2520:
  6206   001FDE  0012               	return		;funcret
  6207   001FE0                     __end_of_puts:
  6208                           	callstack 0
  6209                           
  6210 ;; *************** function _putch *****************
  6211 ;; Defined at:
  6212 ;;		line 43 in file "uart.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;  data            1    wreg     unsigned char 
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;  data            1    0[COMRAM] unsigned char 
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		wreg
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6226 ;;      Params:         0       0       0       0       0       0       0
  6227 ;;      Locals:         1       0       0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0
  6229 ;;      Totals:         1       0       0       0       0       0       0
  6230 ;;Total ram usage:        1 bytes
  6231 ;; Hardware stack levels used: 1
  6232 ;; Hardware stack levels required when called: 1
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_download_log
  6237 ;;		_puts
  6238 ;;		_getche
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text31
  6243   0020B6                     __ptext31:
  6244                           	callstack 0
  6245   0020B6                     _putch:
  6246                           	callstack 27
  6247                           
  6248                           ;incstack = 0
  6249                           ;putch@data stored from wreg
  6250   0020B6  6E01               	movwf	putch@data^0,c
  6251   0020B8                     
  6252                           ;uart.c: 43: void putch(unsigned char data);uart.c: 44: {;uart.c: 45:     TXREG=data;
  6253   0020B8  C001  FFAD         	movff	putch@data,4013	;volatile
  6254                           
  6255                           ;uart.c: 46:     while(!TXIF)
  6256   0020BC  EF61  F010         	goto	l714
  6257   0020C0                     l715:
  6258                           
  6259                           ;uart.c: 47:         TXIF=0;
  6260   0020C0  989E               	bcf	3998,4,c	;volatile
  6261   0020C2                     l714:
  6262                           
  6263                           ;uart.c: 46:     while(!TXIF)
  6264   0020C2  A89E               	btfss	3998,4,c	;volatile
  6265   0020C4  EF66  F010         	goto	u1761
  6266   0020C8  EF68  F010         	goto	u1760
  6267   0020CC                     u1761:
  6268   0020CC  EF60  F010         	goto	l715
  6269   0020D0                     u1760:
  6270   0020D0  0012               	return		;funcret
  6271   0020D2                     __end_of_putch:
  6272                           	callstack 0
  6273                           
  6274 ;; *************** function ___wmul *****************
  6275 ;; Defined at:
  6276 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  multiplier      2    0[COMRAM] unsigned int 
  6279 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  product         2    4[COMRAM] unsigned int 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  2    0[COMRAM] unsigned int 
  6284 ;; Registers used:
  6285 ;;		wreg, status,2, status,0, prodl, prodh
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6291 ;;      Params:         4       0       0       0       0       0       0
  6292 ;;      Locals:         2       0       0       0       0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0
  6294 ;;      Totals:         6       0       0       0       0       0       0
  6295 ;;Total ram usage:        6 bytes
  6296 ;; Hardware stack levels used: 1
  6297 ;; Hardware stack levels required when called: 1
  6298 ;; This function calls:
  6299 ;;		Nothing
  6300 ;; This function is called by:
  6301 ;;		_view_log
  6302 ;;		_download_log
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text32
  6307   002034                     __ptext32:
  6308                           	callstack 0
  6309   002034                     ___wmul:
  6310                           	callstack 28
  6311   002034  5001               	movf	___wmul@multiplier^0,w,c
  6312   002036  0203               	mulwf	___wmul@multiplicand^0,c
  6313   002038  CFF3 F005          	movff	prodl,___wmul@product
  6314   00203C  CFF4 F006          	movff	prodh,___wmul@product+1
  6315   002040  5001               	movf	___wmul@multiplier^0,w,c
  6316   002042  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6317   002044  50F3               	movf	243,w,c
  6318   002046  2606               	addwf	(___wmul@product+1)^0,f,c
  6319   002048  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6320   00204A  0203               	mulwf	___wmul@multiplicand^0,c
  6321   00204C  50F3               	movf	243,w,c
  6322   00204E  2606               	addwf	(___wmul@product+1)^0,f,c
  6323   002050  C005  F001         	movff	___wmul@product,?___wmul
  6324   002054  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6325   002058  0012               	return		;funcret
  6326   00205A                     __end_of___wmul:
  6327                           	callstack 0
  6328                           
  6329 ;; *************** function _display_dashboard *****************
  6330 ;; Defined at:
  6331 ;;		line 8 in file "car_black_box.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  uckey           1    wreg     unsigned char 
  6334 ;;  usads           2   18[COMRAM] unsigned short 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  uckey           1   20[COMRAM] unsigned char 
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  1    wreg      void 
  6339 ;; Registers used:
  6340 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6346 ;;      Params:         2       0       0       0       0       0       0
  6347 ;;      Locals:         1       0       0       0       0       0       0
  6348 ;;      Temps:          0       0       0       0       0       0       0
  6349 ;;      Totals:         3       0       0       0       0       0       0
  6350 ;;Total ram usage:        3 bytes
  6351 ;; Hardware stack levels used: 1
  6352 ;; Hardware stack levels required when called: 7
  6353 ;; This function calls:
  6354 ;;		_clcd_print
  6355 ;;		_clcd_putch
  6356 ;;		_clcd_write
  6357 ;;		_display_speed
  6358 ;;		_display_time
  6359 ;; This function is called by:
  6360 ;;		_main
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text33
  6365   001DCA                     __ptext33:
  6366                           	callstack 0
  6367   001DCA                     _display_dashboard:
  6368                           	callstack 23
  6369                           
  6370                           ;incstack = 0
  6371                           ;display_dashboard@uckey stored from wreg
  6372   001DCA  6E15               	movwf	display_dashboard@uckey^0,c
  6373   001DCC                     
  6374                           ;car_black_box.c: 8: void display_dashboard(unsigned char uckey, unsigned short usads);c
      +                          ar_black_box.c: 9: {;car_black_box.c: 10:     clcd_print( (unsigned char*) "   Time    E
      +                            S" , (0x80 + (0)));
  6375   001DCC  0E39               	movlw	low STR_10
  6376   001DCE  6E03               	movwf	clcd_print@data^0,c
  6377   001DD0  0E2F               	movlw	high STR_10
  6378   001DD2  6E04               	movwf	(clcd_print@data+1)^0,c
  6379   001DD4  0E80               	movlw	128
  6380   001DD6  6E05               	movwf	clcd_print@addr^0,c
  6381   001DD8  EC4C  F00E         	call	_clcd_print	;wreg free
  6382   001DDC                     
  6383                           ;car_black_box.c: 11:     clcd_putch(0x70,(0x80 + (15)));
  6384   001DDC  0E8F               	movlw	143
  6385   001DDE  6E0F               	movwf	clcd_putch@addr^0,c
  6386   001DE0  0E70               	movlw	112
  6387   001DE2  EC83  F010         	call	_clcd_putch
  6388   001DE6                     
  6389                           ;car_black_box.c: 12:     if(uckey == 10)
  6390   001DE6  0E0A               	movlw	10
  6391   001DE8  1815               	xorwf	display_dashboard@uckey^0,w,c
  6392   001DEA  A4D8               	btfss	status,2,c
  6393   001DEC  EFFA  F00E         	goto	u2871
  6394   001DF0  EFFC  F00E         	goto	u2870
  6395   001DF4                     u2871:
  6396   001DF4  EF07  F00F         	goto	l3699
  6397   001DF8                     u2870:
  6398   001DF8                     
  6399                           ;car_black_box.c: 13:         {;car_black_box.c: 14:             controlflag=0;
  6400   001DF8  0E00               	movlw	0
  6401   001DFA  6E56               	movwf	(_controlflag+1)^0,c
  6402   001DFC  0E00               	movlw	0
  6403   001DFE  6E55               	movwf	_controlflag^0,c
  6404   001E00                     
  6405                           ;car_black_box.c: 15:             clcd_write(0x01, 0);
  6406   001E00  0E00               	movlw	0
  6407   001E02  6E01               	movwf	clcd_write@control_bit^0,c
  6408   001E04  0E01               	movlw	1
  6409   001E06  ECBF  F00F         	call	_clcd_write
  6410   001E0A  EF0F  F00F         	goto	l148
  6411   001E0E                     l3699:
  6412                           
  6413                           ;car_black_box.c: 18:     display_time();
  6414   001E0E  ECB4  F00E         	call	_display_time	;wreg free
  6415   001E12                     
  6416                           ;car_black_box.c: 19:     display_speed(usads);
  6417   001E12  C013  F011         	movff	display_dashboard@usads,display_speed@usadc
  6418   001E16  C014  F012         	movff	display_dashboard@usads+1,display_speed@usadc+1
  6419   001E1A  EC10  F00F         	call	_display_speed	;wreg free
  6420   001E1E                     l148:
  6421   001E1E  0012               	return		;funcret
  6422   001E20                     __end_of_display_dashboard:
  6423                           	callstack 0
  6424                           
  6425 ;; *************** function _display_time *****************
  6426 ;; Defined at:
  6427 ;;		line 21 in file "car_black_box.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  1    wreg      void 
  6434 ;; Registers used:
  6435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6441 ;;      Params:         0       0       0       0       0       0       0
  6442 ;;      Locals:         0       0       0       0       0       0       0
  6443 ;;      Temps:          2       0       0       0       0       0       0
  6444 ;;      Totals:         2       0       0       0       0       0       0
  6445 ;;Total ram usage:        2 bytes
  6446 ;; Hardware stack levels used: 1
  6447 ;; Hardware stack levels required when called: 6
  6448 ;; This function calls:
  6449 ;;		_clcd_putch
  6450 ;;		_display_times
  6451 ;;		_get_time
  6452 ;; This function is called by:
  6453 ;;		_display_dashboard
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text34
  6458   001D68                     __ptext34:
  6459                           	callstack 0
  6460   001D68                     _display_time:
  6461                           	callstack 23
  6462   001D68                     
  6463                           ;car_black_box.c: 22:      get_time();
  6464   001D68  EC25  F00D         	call	_get_time	;wreg free
  6465   001D6C                     
  6466                           ;car_black_box.c: 23:   display_times();
  6467   001D6C  ECA3  F010         	call	_display_times	;wreg free
  6468   001D70                     
  6469                           ;car_black_box.c: 24:      clcd_putch(signature[signindex][0], (0xC0 + (11)));
  6470   001D70  0ECB               	movlw	203
  6471   001D72  6E0F               	movwf	clcd_putch@addr^0,c
  6472   001D74  5051               	movf	_signindex^0,w,c
  6473   001D76  0D02               	mullw	2
  6474   001D78  0EB0               	movlw	low _signature
  6475   001D7A  24F3               	addwf	243,w,c
  6476   001D7C  6ED9               	movwf	fsr2l,c
  6477   001D7E  0E00               	movlw	high _signature
  6478   001D80  20F4               	addwfc	prodh,w,c
  6479   001D82  6EDA               	movwf	fsr2h,c
  6480   001D84  CFDE FFF6          	movff	postinc2,tblptrl
  6481   001D88  CFDD FFF7          	movff	postdec2,tblptrh
  6482   001D8C                     	if	0	;tblptru may be non-zero
  6483   001D8C                     	endif
  6484   001D8C                     	if	0	;tblptru may be non-zero
  6485   001D8C                     	endif
  6486   001D8C  0008               	tblrd		*
  6487   001D8E  50F5               	movf	tablat,w,c
  6488   001D90  EC83  F010         	call	_clcd_putch
  6489   001D94                     
  6490                           ;car_black_box.c: 25:      clcd_putch(signature[signindex][1], (0xC0 + (12)));
  6491   001D94  0ECC               	movlw	204
  6492   001D96  6E0F               	movwf	clcd_putch@addr^0,c
  6493   001D98  5051               	movf	_signindex^0,w,c
  6494   001D9A  0D02               	mullw	2
  6495   001D9C  0EB0               	movlw	low _signature
  6496   001D9E  24F3               	addwf	243,w,c
  6497   001DA0  6ED9               	movwf	fsr2l,c
  6498   001DA2  0E00               	movlw	high _signature
  6499   001DA4  20F4               	addwfc	prodh,w,c
  6500   001DA6  6EDA               	movwf	fsr2h,c
  6501   001DA8  CFDE F011          	movff	postinc2,??_display_time
  6502   001DAC  CFDD F012          	movff	postdec2,??_display_time+1
  6503   001DB0  0E01               	movlw	1
  6504   001DB2  2611               	addwf	??_display_time^0,f,c
  6505   001DB4  0E00               	movlw	0
  6506   001DB6  2212               	addwfc	(??_display_time+1)^0,f,c
  6507   001DB8  C011  FFF6         	movff	??_display_time,tblptrl
  6508   001DBC  C012  FFF7         	movff	??_display_time+1,tblptrh
  6509   001DC0                     	if	0	;tblptru may be non-zero
  6510   001DC0                     	endif
  6511   001DC0                     	if	0	;tblptru may be non-zero
  6512   001DC0                     	endif
  6513   001DC0  0008               	tblrd		*
  6514   001DC2  50F5               	movf	tablat,w,c
  6515   001DC4  EC83  F010         	call	_clcd_putch
  6516   001DC8  0012               	return		;funcret
  6517   001DCA                     __end_of_display_time:
  6518                           	callstack 0
  6519                           
  6520 ;; *************** function _get_time *****************
  6521 ;; Defined at:
  6522 ;;		line 32 in file "car_black_box.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;		None
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;		None
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  1    wreg      void 
  6529 ;; Registers used:
  6530 ;;		wreg, status,2, status,0, cstack
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6536 ;;      Params:         0       0       0       0       0       0       0
  6537 ;;      Locals:         0       0       0       0       0       0       0
  6538 ;;      Temps:          0       0       0       0       0       0       0
  6539 ;;      Totals:         0       0       0       0       0       0       0
  6540 ;;Total ram usage:        0 bytes
  6541 ;; Hardware stack levels used: 1
  6542 ;; Hardware stack levels required when called: 5
  6543 ;; This function calls:
  6544 ;;		_read_ds1307
  6545 ;; This function is called by:
  6546 ;;		_display_time
  6547 ;;		_getforstoreevent
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text35
  6552   001A4A                     __ptext35:
  6553                           	callstack 0
  6554   001A4A                     _get_time:
  6555                           	callstack 24
  6556   001A4A                     
  6557                           ;car_black_box.c: 34:  clock_reg[0] = read_ds1307(0x02);
  6558   001A4A  0E02               	movlw	2
  6559   001A4C  EC05  F010         	call	_read_ds1307
  6560   001A50  0100               	movlb	0	; () banked
  6561   001A52  6F82               	movwf	_clock_reg& (0+255),b
  6562                           
  6563                           ;car_black_box.c: 35:  clock_reg[1] = read_ds1307(0x01);
  6564   001A54  0E01               	movlw	1
  6565   001A56  EC05  F010         	call	_read_ds1307
  6566   001A5A  0100               	movlb	0	; () banked
  6567   001A5C  6F83               	movwf	(_clock_reg+1)& (0+255),b
  6568                           
  6569                           ;car_black_box.c: 36:  clock_reg[2] = read_ds1307(0x00);
  6570   001A5E  0E00               	movlw	0
  6571   001A60  EC05  F010         	call	_read_ds1307
  6572   001A64  0100               	movlb	0	; () banked
  6573   001A66  6F84               	movwf	(_clock_reg+2)& (0+255),b
  6574   001A68                     
  6575                           ; BSR set to: 0
  6576                           ;car_black_box.c: 38:  if (clock_reg[0] & 0x40)
  6577   001A68  AD82               	btfss	_clock_reg& (0+255),6,b
  6578   001A6A  EF39  F00D         	goto	u1751
  6579   001A6E  EF3B  F00D         	goto	u1750
  6580   001A72                     u1751:
  6581   001A72  EF46  F00D         	goto	l2833
  6582   001A76                     u1750:
  6583   001A76                     
  6584                           ; BSR set to: 0
  6585                           ;car_black_box.c: 39:  {;car_black_box.c: 40:   time[0] = '0' + ((clock_reg[0] >> 4) & 0
      +                          x01);
  6586   001A76  3982               	swapf	_clock_reg& (0+255),w,b
  6587   001A78  0B0F               	andlw	15
  6588   001A7A  0B01               	andlw	1
  6589   001A7C  0F30               	addlw	48
  6590   001A7E  6F93               	movwf	_time& (0+255),b
  6591                           
  6592                           ;car_black_box.c: 41:   time[1] = '0' + (clock_reg[0] & 0x0F);
  6593   001A80  5182               	movf	_clock_reg& (0+255),w,b
  6594   001A82  0B0F               	andlw	15
  6595   001A84  0F30               	addlw	48
  6596   001A86  6F94               	movwf	(_time+1)& (0+255),b
  6597                           
  6598                           ;car_black_box.c: 42:  }
  6599   001A88  EF4F  F00D         	goto	l2835
  6600   001A8C                     l2833:
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;car_black_box.c: 44:  {;car_black_box.c: 45:   time[0] = '0' + ((clock_reg[0] >> 4) & 0
      +                          x03);
  6604   001A8C  3982               	swapf	_clock_reg& (0+255),w,b
  6605   001A8E  0B0F               	andlw	15
  6606   001A90  0B03               	andlw	3
  6607   001A92  0F30               	addlw	48
  6608   001A94  6F93               	movwf	_time& (0+255),b
  6609                           
  6610                           ;car_black_box.c: 46:   time[1] = '0' + (clock_reg[0] & 0x0F);
  6611   001A96  5182               	movf	_clock_reg& (0+255),w,b
  6612   001A98  0B0F               	andlw	15
  6613   001A9A  0F30               	addlw	48
  6614   001A9C  6F94               	movwf	(_time+1)& (0+255),b
  6615   001A9E                     l2835:
  6616                           
  6617                           ; BSR set to: 0
  6618                           ;car_black_box.c: 48:  time[2] = ':';
  6619   001A9E  0E3A               	movlw	58
  6620   001AA0  6F95               	movwf	(_time+2)& (0+255),b
  6621   001AA2                     
  6622                           ; BSR set to: 0
  6623                           ;car_black_box.c: 49:  time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  6624   001AA2  3983               	swapf	(_clock_reg+1)& (0+255),w,b
  6625   001AA4  0B0F               	andlw	15
  6626   001AA6  0B0F               	andlw	15
  6627   001AA8  0F30               	addlw	48
  6628   001AAA  6F96               	movwf	(_time+3)& (0+255),b
  6629   001AAC                     
  6630                           ; BSR set to: 0
  6631                           ;car_black_box.c: 50:  time[4] = '0' + (clock_reg[1] & 0x0F);
  6632   001AAC  5183               	movf	(_clock_reg+1)& (0+255),w,b
  6633   001AAE  0B0F               	andlw	15
  6634   001AB0  0F30               	addlw	48
  6635   001AB2  6F97               	movwf	(_time+4)& (0+255),b
  6636   001AB4                     
  6637                           ; BSR set to: 0
  6638                           ;car_black_box.c: 51:  time[5] = ':';
  6639   001AB4  0E3A               	movlw	58
  6640   001AB6  6F98               	movwf	(_time+5)& (0+255),b
  6641                           
  6642                           ;car_black_box.c: 52:  time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  6643   001AB8  3984               	swapf	(_clock_reg+2)& (0+255),w,b
  6644   001ABA  0B0F               	andlw	15
  6645   001ABC  0B0F               	andlw	15
  6646   001ABE  0F30               	addlw	48
  6647   001AC0  6F99               	movwf	(_time+6)& (0+255),b
  6648                           
  6649                           ;car_black_box.c: 53:  time[7] = '0' + (clock_reg[2] & 0x0F);
  6650   001AC2  5184               	movf	(_clock_reg+2)& (0+255),w,b
  6651   001AC4  0B0F               	andlw	15
  6652   001AC6  0F30               	addlw	48
  6653   001AC8  6F9A               	movwf	(_time+7)& (0+255),b
  6654   001ACA                     
  6655                           ; BSR set to: 0
  6656                           ;car_black_box.c: 54:  time[8] = '\0';
  6657   001ACA  0E00               	movlw	0
  6658   001ACC  6F9B               	movwf	(_time+8)& (0+255),b
  6659   001ACE                     
  6660                           ; BSR set to: 0
  6661   001ACE  0012               	return		;funcret
  6662   001AD0                     __end_of_get_time:
  6663                           	callstack 0
  6664                           
  6665 ;; *************** function _read_ds1307 *****************
  6666 ;; Defined at:
  6667 ;;		line 55 in file "ds1307.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;  address         1    wreg     unsigned char 
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;  address         1    1[COMRAM] unsigned char 
  6672 ;;  data            1    2[COMRAM] unsigned char 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  1    wreg      unsigned char 
  6675 ;; Registers used:
  6676 ;;		wreg, status,2, cstack
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6682 ;;      Params:         0       0       0       0       0       0       0
  6683 ;;      Locals:         2       0       0       0       0       0       0
  6684 ;;      Temps:          0       0       0       0       0       0       0
  6685 ;;      Totals:         2       0       0       0       0       0       0
  6686 ;;Total ram usage:        2 bytes
  6687 ;; Hardware stack levels used: 1
  6688 ;; Hardware stack levels required when called: 4
  6689 ;; This function calls:
  6690 ;;		_i2c_read
  6691 ;;		_i2c_rep_start
  6692 ;;		_i2c_start
  6693 ;;		_i2c_stop
  6694 ;;		_i2c_write
  6695 ;; This function is called by:
  6696 ;;		_get_time
  6697 ;;		_init_ds1307
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           	psect	text36
  6702   00200A                     __ptext36:
  6703                           	callstack 0
  6704   00200A                     _read_ds1307:
  6705                           	callstack 24
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;incstack = 0
  6709                           ;read_ds1307@address stored from wreg
  6710   00200A  6E02               	movwf	read_ds1307@address^0,c
  6711   00200C                     
  6712                           ;ds1307.c: 55: unsigned char read_ds1307(unsigned char address);ds1307.c: 56: {;ds1307.c
      +                          : 57:  unsigned char data;;ds1307.c: 59:  i2c_start();
  6713   00200C  ECCC  F010         	call	_i2c_start	;wreg free
  6714   002010                     
  6715                           ;ds1307.c: 60:  i2c_write(0xD0);
  6716   002010  0ED0               	movlw	208
  6717   002012  ECB3  F010         	call	_i2c_write
  6718   002016                     
  6719                           ;ds1307.c: 61:  i2c_write(address);
  6720   002016  5002               	movf	read_ds1307@address^0,w,c
  6721   002018  ECB3  F010         	call	_i2c_write
  6722   00201C                     
  6723                           ;ds1307.c: 62:  i2c_rep_start();
  6724   00201C  ECD0  F010         	call	_i2c_rep_start	;wreg free
  6725   002020                     
  6726                           ;ds1307.c: 63:  i2c_write(0xD1);
  6727   002020  0ED1               	movlw	209
  6728   002022  ECB3  F010         	call	_i2c_write
  6729                           
  6730                           ;ds1307.c: 64:  data = i2c_read();
  6731   002026  ECB9  F010         	call	_i2c_read	;wreg free
  6732   00202A  6E03               	movwf	read_ds1307@data^0,c
  6733   00202C                     
  6734                           ;ds1307.c: 65:  i2c_stop();
  6735   00202C  ECC8  F010         	call	_i2c_stop	;wreg free
  6736                           
  6737                           ;ds1307.c: 67:  return data;
  6738   002030  5003               	movf	read_ds1307@data^0,w,c
  6739   002032  0012               	return		;funcret
  6740   002034                     __end_of_read_ds1307:
  6741                           	callstack 0
  6742                           
  6743 ;; *************** function _i2c_write *****************
  6744 ;; Defined at:
  6745 ;;		line 55 in file "i2c.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  data            1    wreg     unsigned char 
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;  data            1    0[COMRAM] unsigned char 
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1    wreg      void 
  6752 ;; Registers used:
  6753 ;;		wreg, cstack
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6759 ;;      Params:         0       0       0       0       0       0       0
  6760 ;;      Locals:         1       0       0       0       0       0       0
  6761 ;;      Temps:          0       0       0       0       0       0       0
  6762 ;;      Totals:         1       0       0       0       0       0       0
  6763 ;;Total ram usage:        1 bytes
  6764 ;; Hardware stack levels used: 1
  6765 ;; Hardware stack levels required when called: 2
  6766 ;; This function calls:
  6767 ;;		_i2c_idle
  6768 ;; This function is called by:
  6769 ;;		_write_ds1307
  6770 ;;		_read_ds1307
  6771 ;;		_write_external_eeprom
  6772 ;;		_read_external_eeprom
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text37
  6777   002166                     __ptext37:
  6778                           	callstack 0
  6779   002166                     _i2c_write:
  6780                           	callstack 27
  6781                           
  6782                           ;incstack = 0
  6783                           ;i2c_write@data stored from wreg
  6784   002166  6E01               	movwf	i2c_write@data^0,c
  6785   002168                     
  6786                           ;i2c.c: 55: void i2c_write(unsigned char data);i2c.c: 56: {;i2c.c: 57:  SSPBUF = data;
  6787   002168  C001  FFC9         	movff	i2c_write@data,4041	;volatile
  6788   00216C                     
  6789                           ;i2c.c: 58:  i2c_idle();
  6790   00216C  EC9A  F010         	call	_i2c_idle	;wreg free
  6791   002170  0012               	return		;funcret
  6792   002172                     __end_of_i2c_write:
  6793                           	callstack 0
  6794                           
  6795 ;; *************** function _i2c_stop *****************
  6796 ;; Defined at:
  6797 ;;		line 43 in file "i2c.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;		None
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;		None
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  1    wreg      void 
  6804 ;; Registers used:
  6805 ;;		cstack
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6811 ;;      Params:         0       0       0       0       0       0       0
  6812 ;;      Locals:         0       0       0       0       0       0       0
  6813 ;;      Temps:          0       0       0       0       0       0       0
  6814 ;;      Totals:         0       0       0       0       0       0       0
  6815 ;;Total ram usage:        0 bytes
  6816 ;; Hardware stack levels used: 1
  6817 ;; Hardware stack levels required when called: 2
  6818 ;; This function calls:
  6819 ;;		_i2c_idle
  6820 ;; This function is called by:
  6821 ;;		_write_ds1307
  6822 ;;		_read_ds1307
  6823 ;;		_write_external_eeprom
  6824 ;;		_read_external_eeprom
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828                           	psect	text38
  6829   002190                     __ptext38:
  6830                           	callstack 0
  6831   002190                     _i2c_stop:
  6832                           	callstack 27
  6833   002190                     
  6834                           ;i2c.c: 45:  PEN = 1;
  6835   002190  84C5               	bsf	4037,2,c	;volatile
  6836   002192                     
  6837                           ;i2c.c: 46:  i2c_idle();
  6838   002192  EC9A  F010         	call	_i2c_idle	;wreg free
  6839   002196  0012               	return		;funcret
  6840   002198                     __end_of_i2c_stop:
  6841                           	callstack 0
  6842                           
  6843 ;; *************** function _i2c_start *****************
  6844 ;; Defined at:
  6845 ;;		line 37 in file "i2c.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;		None
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;		None
  6850 ;; Return value:  Size  Location     Type
  6851 ;;                  1    wreg      void 
  6852 ;; Registers used:
  6853 ;;		cstack
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6859 ;;      Params:         0       0       0       0       0       0       0
  6860 ;;      Locals:         0       0       0       0       0       0       0
  6861 ;;      Temps:          0       0       0       0       0       0       0
  6862 ;;      Totals:         0       0       0       0       0       0       0
  6863 ;;Total ram usage:        0 bytes
  6864 ;; Hardware stack levels used: 1
  6865 ;; Hardware stack levels required when called: 2
  6866 ;; This function calls:
  6867 ;;		_i2c_idle
  6868 ;; This function is called by:
  6869 ;;		_write_ds1307
  6870 ;;		_read_ds1307
  6871 ;;		_write_external_eeprom
  6872 ;;		_read_external_eeprom
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text39
  6877   002198                     __ptext39:
  6878                           	callstack 0
  6879   002198                     _i2c_start:
  6880                           	callstack 27
  6881   002198                     
  6882                           ;i2c.c: 39:  SEN = 1;
  6883   002198  80C5               	bsf	4037,0,c	;volatile
  6884   00219A                     
  6885                           ;i2c.c: 40:  i2c_idle();
  6886   00219A  EC9A  F010         	call	_i2c_idle	;wreg free
  6887   00219E  0012               	return		;funcret
  6888   0021A0                     __end_of_i2c_start:
  6889                           	callstack 0
  6890                           
  6891 ;; *************** function _i2c_rep_start *****************
  6892 ;; Defined at:
  6893 ;;		line 49 in file "i2c.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;		None
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;		None
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  1    wreg      void 
  6900 ;; Registers used:
  6901 ;;		cstack
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6907 ;;      Params:         0       0       0       0       0       0       0
  6908 ;;      Locals:         0       0       0       0       0       0       0
  6909 ;;      Temps:          0       0       0       0       0       0       0
  6910 ;;      Totals:         0       0       0       0       0       0       0
  6911 ;;Total ram usage:        0 bytes
  6912 ;; Hardware stack levels used: 1
  6913 ;; Hardware stack levels required when called: 2
  6914 ;; This function calls:
  6915 ;;		_i2c_idle
  6916 ;; This function is called by:
  6917 ;;		_read_ds1307
  6918 ;;		_read_external_eeprom
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text40
  6923   0021A0                     __ptext40:
  6924                           	callstack 0
  6925   0021A0                     _i2c_rep_start:
  6926                           	callstack 26
  6927   0021A0                     
  6928                           ;i2c.c: 51: 
  6929   0021A0  82C5               	bsf	4037,1,c	;volatile
  6930   0021A2                     
  6931                           ;i2c.c: 52:  i2c_idle();
  6932   0021A2  EC9A  F010         	call	_i2c_idle	;wreg free
  6933   0021A6  0012               	return		;funcret
  6934   0021A8                     __end_of_i2c_rep_start:
  6935                           	callstack 0
  6936                           
  6937 ;; *************** function _i2c_read *****************
  6938 ;; Defined at:
  6939 ;;		line 73 in file "i2c.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;		None
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  1    wreg      unsigned char 
  6946 ;; Registers used:
  6947 ;;		wreg, status,2, cstack
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6953 ;;      Params:         0       0       0       0       0       0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0
  6955 ;;      Temps:          0       0       0       0       0       0       0
  6956 ;;      Totals:         0       0       0       0       0       0       0
  6957 ;;Total ram usage:        0 bytes
  6958 ;; Hardware stack levels used: 1
  6959 ;; Hardware stack levels required when called: 3
  6960 ;; This function calls:
  6961 ;;		_i2c_no_ack
  6962 ;;		_i2c_rx_mode
  6963 ;; This function is called by:
  6964 ;;		_read_ds1307
  6965 ;;		_read_external_eeprom
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text41
  6970   002172                     __ptext41:
  6971                           	callstack 0
  6972   002172                     _i2c_read:
  6973                           	callstack 25
  6974   002172                     
  6975                           ;i2c.c: 75:  i2c_rx_mode();
  6976   002172  ECD4  F010         	call	_i2c_rx_mode	;wreg free
  6977                           
  6978                           ;i2c.c: 76:  i2c_no_ack();
  6979   002176  ECD8  F010         	call	_i2c_no_ack	;wreg free
  6980   00217A                     
  6981                           ;i2c.c: 78:  return SSPBUF;
  6982   00217A  50C9               	movf	201,w,c	;volatile
  6983   00217C  0012               	return		;funcret
  6984   00217E                     __end_of_i2c_read:
  6985                           	callstack 0
  6986                           
  6987 ;; *************** function _i2c_rx_mode *****************
  6988 ;; Defined at:
  6989 ;;		line 61 in file "i2c.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;		None
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;		None
  6994 ;; Return value:  Size  Location     Type
  6995 ;;                  1    wreg      void 
  6996 ;; Registers used:
  6997 ;;		cstack
  6998 ;; Tracked objects:
  6999 ;;		On entry : 0/0
  7000 ;;		On exit  : 0/0
  7001 ;;		Unchanged: 0/0
  7002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7003 ;;      Params:         0       0       0       0       0       0       0
  7004 ;;      Locals:         0       0       0       0       0       0       0
  7005 ;;      Temps:          0       0       0       0       0       0       0
  7006 ;;      Totals:         0       0       0       0       0       0       0
  7007 ;;Total ram usage:        0 bytes
  7008 ;; Hardware stack levels used: 1
  7009 ;; Hardware stack levels required when called: 2
  7010 ;; This function calls:
  7011 ;;		_i2c_idle
  7012 ;; This function is called by:
  7013 ;;		_i2c_read
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text42
  7018   0021A8                     __ptext42:
  7019                           	callstack 0
  7020   0021A8                     _i2c_rx_mode:
  7021                           	callstack 25
  7022   0021A8                     
  7023                           ;i2c.c: 63:  RCEN = 1;
  7024   0021A8  86C5               	bsf	4037,3,c	;volatile
  7025   0021AA                     
  7026                           ;i2c.c: 64:  i2c_idle();
  7027   0021AA  EC9A  F010         	call	_i2c_idle	;wreg free
  7028   0021AE  0012               	return		;funcret
  7029   0021B0                     __end_of_i2c_rx_mode:
  7030                           	callstack 0
  7031                           
  7032 ;; *************** function _i2c_idle *****************
  7033 ;; Defined at:
  7034 ;;		line 23 in file "i2c.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;		None
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;		None
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      void 
  7041 ;; Registers used:
  7042 ;;		None
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7048 ;;      Params:         0       0       0       0       0       0       0
  7049 ;;      Locals:         0       0       0       0       0       0       0
  7050 ;;      Temps:          0       0       0       0       0       0       0
  7051 ;;      Totals:         0       0       0       0       0       0       0
  7052 ;;Total ram usage:        0 bytes
  7053 ;; Hardware stack levels used: 1
  7054 ;; Hardware stack levels required when called: 1
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		_i2c_start
  7059 ;;		_i2c_stop
  7060 ;;		_i2c_rep_start
  7061 ;;		_i2c_write
  7062 ;;		_i2c_rx_mode
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text43
  7067   002134                     __ptext43:
  7068                           	callstack 0
  7069   002134                     _i2c_idle:
  7070                           	callstack 27
  7071   002134                     l611:
  7072   002134  A69E               	btfss	3998,3,c	;volatile
  7073   002136  EF9F  F010         	goto	u1671
  7074   00213A  EFA1  F010         	goto	u1670
  7075   00213E                     u1671:
  7076   00213E  EF9A  F010         	goto	l611
  7077   002142                     u1670:
  7078   002142                     
  7079                           ;i2c.c: 26:  SSPIF = 0;
  7080   002142  969E               	bcf	3998,3,c	;volatile
  7081   002144  0012               	return		;funcret
  7082   002146                     __end_of_i2c_idle:
  7083                           	callstack 0
  7084                           
  7085 ;; *************** function _i2c_no_ack *****************
  7086 ;; Defined at:
  7087 ;;		line 67 in file "i2c.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;		None
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;		None
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  1    wreg      void 
  7094 ;; Registers used:
  7095 ;;		None
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7101 ;;      Params:         0       0       0       0       0       0       0
  7102 ;;      Locals:         0       0       0       0       0       0       0
  7103 ;;      Temps:          0       0       0       0       0       0       0
  7104 ;;      Totals:         0       0       0       0       0       0       0
  7105 ;;Total ram usage:        0 bytes
  7106 ;; Hardware stack levels used: 1
  7107 ;; Hardware stack levels required when called: 1
  7108 ;; This function calls:
  7109 ;;		Nothing
  7110 ;; This function is called by:
  7111 ;;		_i2c_read
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text44
  7116   0021B0                     __ptext44:
  7117                           	callstack 0
  7118   0021B0                     _i2c_no_ack:
  7119                           	callstack 26
  7120   0021B0                     
  7121                           ;i2c.c: 69:  ACKDT = 1;
  7122   0021B0  8AC5               	bsf	4037,5,c	;volatile
  7123                           
  7124                           ;i2c.c: 70:  ACKEN = 1;
  7125   0021B2  88C5               	bsf	4037,4,c	;volatile
  7126   0021B4  0012               	return		;funcret
  7127   0021B6                     __end_of_i2c_no_ack:
  7128                           	callstack 0
  7129                           
  7130 ;; *************** function _display_times *****************
  7131 ;; Defined at:
  7132 ;;		line 27 in file "car_black_box.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;		None
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;		None
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7146 ;;      Params:         0       0       0       0       0       0       0
  7147 ;;      Locals:         0       0       0       0       0       0       0
  7148 ;;      Temps:          0       0       0       0       0       0       0
  7149 ;;      Totals:         0       0       0       0       0       0       0
  7150 ;;Total ram usage:        0 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 3
  7153 ;; This function calls:
  7154 ;;		_clcd_print
  7155 ;; This function is called by:
  7156 ;;		_display_time
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           	psect	text45
  7161   002146                     __ptext45:
  7162                           	callstack 0
  7163   002146                     _display_times:
  7164                           	callstack 25
  7165   002146                     
  7166                           ;car_black_box.c: 29:  clcd_print(time, (0xC0 + (2)));
  7167   002146  0E93               	movlw	low _time
  7168   002148  6E03               	movwf	clcd_print@data^0,c
  7169   00214A  0E00               	movlw	high _time
  7170   00214C  6E04               	movwf	(clcd_print@data+1)^0,c
  7171   00214E  0EC2               	movlw	194
  7172   002150  6E05               	movwf	clcd_print@addr^0,c
  7173   002152  EC4C  F00E         	call	_clcd_print	;wreg free
  7174   002156  0012               	return		;funcret
  7175   002158                     __end_of_display_times:
  7176                           	callstack 0
  7177                           
  7178 ;; *************** function _display_speed *****************
  7179 ;; Defined at:
  7180 ;;		line 91 in file "car_black_box.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  usadc           2   16[COMRAM] unsigned short 
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;		None
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  1    wreg      void 
  7187 ;; Registers used:
  7188 ;;		wreg, status,2, status,0, cstack
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7194 ;;      Params:         2       0       0       0       0       0       0
  7195 ;;      Locals:         0       0       0       0       0       0       0
  7196 ;;      Temps:          0       0       0       0       0       0       0
  7197 ;;      Totals:         2       0       0       0       0       0       0
  7198 ;;Total ram usage:        2 bytes
  7199 ;; Hardware stack levels used: 1
  7200 ;; Hardware stack levels required when called: 3
  7201 ;; This function calls:
  7202 ;;		___awmod
  7203 ;;		___lwdiv
  7204 ;;		_clcd_putch
  7205 ;; This function is called by:
  7206 ;;		_display_dashboard
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           	psect	text46
  7211   001E20                     __ptext46:
  7212                           	callstack 0
  7213   001E20                     _display_speed:
  7214                           	callstack 26
  7215   001E20                     
  7216                           ;car_black_box.c: 92:         clcd_putch((unsigned char)(usadc/10)%10+48, (0xC0 + (14)))
      +                          ;
  7217   001E20  0ECE               	movlw	206
  7218   001E22  6E0F               	movwf	clcd_putch@addr^0,c
  7219   001E24  0E00               	movlw	0
  7220   001E26  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  7221   001E28  0E0A               	movlw	10
  7222   001E2A  6E03               	movwf	___lwdiv@divisor^0,c
  7223   001E2C  C011  F001         	movff	display_speed@usadc,___lwdiv@dividend
  7224   001E30  C012  F002         	movff	display_speed@usadc+1,___lwdiv@dividend+1
  7225   001E34  ECA3  F00D         	call	___lwdiv	;wreg free
  7226   001E38  5001               	movf	?___lwdiv^0,w,c
  7227   001E3A  6E09               	movwf	___awmod@dividend^0,c
  7228   001E3C  6A0A               	clrf	(___awmod@dividend+1)^0,c
  7229   001E3E  0E00               	movlw	0
  7230   001E40  6E0C               	movwf	(___awmod@divisor+1)^0,c
  7231   001E42  0E0A               	movlw	10
  7232   001E44  6E0B               	movwf	___awmod@divisor^0,c
  7233   001E46  ECE7  F00B         	call	___awmod	;wreg free
  7234   001E4A  5009               	movf	?___awmod^0,w,c
  7235   001E4C  0F30               	addlw	48
  7236   001E4E  EC83  F010         	call	_clcd_putch
  7237                           
  7238                           ;car_black_box.c: 93:         clcd_putch((unsigned char)usadc%10+48, (0xC0 + (15)));
  7239   001E52  0ECF               	movlw	207
  7240   001E54  6E0F               	movwf	clcd_putch@addr^0,c
  7241   001E56  C011  F009         	movff	display_speed@usadc,___awmod@dividend
  7242   001E5A  6A0A               	clrf	(___awmod@dividend+1)^0,c
  7243   001E5C  0E00               	movlw	0
  7244   001E5E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  7245   001E60  0E0A               	movlw	10
  7246   001E62  6E0B               	movwf	___awmod@divisor^0,c
  7247   001E64  ECE7  F00B         	call	___awmod	;wreg free
  7248   001E68  5009               	movf	?___awmod^0,w,c
  7249   001E6A  0F30               	addlw	48
  7250   001E6C  EC83  F010         	call	_clcd_putch
  7251   001E70  0012               	return		;funcret
  7252   001E72                     __end_of_display_speed:
  7253                           	callstack 0
  7254                           
  7255 ;; *************** function _clcd_putch *****************
  7256 ;; Defined at:
  7257 ;;		line 69 in file "clcd.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  data            1    wreg     const unsigned char 
  7260 ;;  addr            1   14[COMRAM] unsigned char 
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;  data            1   15[COMRAM] const unsigned char 
  7263 ;; Return value:  Size  Location     Type
  7264 ;;                  1    wreg      void 
  7265 ;; Registers used:
  7266 ;;		wreg, status,2, cstack
  7267 ;; Tracked objects:
  7268 ;;		On entry : 0/0
  7269 ;;		On exit  : 0/0
  7270 ;;		Unchanged: 0/0
  7271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7272 ;;      Params:         1       0       0       0       0       0       0
  7273 ;;      Locals:         1       0       0       0       0       0       0
  7274 ;;      Temps:          0       0       0       0       0       0       0
  7275 ;;      Totals:         2       0       0       0       0       0       0
  7276 ;;Total ram usage:        2 bytes
  7277 ;; Hardware stack levels used: 1
  7278 ;; Hardware stack levels required when called: 2
  7279 ;; This function calls:
  7280 ;;		_clcd_write
  7281 ;; This function is called by:
  7282 ;;		_display_dashboard
  7283 ;;		_display_time
  7284 ;;		_display_speed
  7285 ;;		_logscreen
  7286 ;;		_timeleft
  7287 ;;		_print
  7288 ;;		_scrolllog
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text47
  7293   002106                     __ptext47:
  7294                           	callstack 0
  7295   002106                     _clcd_putch:
  7296                           	callstack 26
  7297                           
  7298                           ;incstack = 0
  7299                           ;clcd_putch@data stored from wreg
  7300   002106  6E10               	movwf	clcd_putch@data^0,c
  7301   002108                     
  7302                           ;clcd.c: 69: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 70: {
      +                          ;clcd.c: 71:  clcd_write(addr, 0);
  7303   002108  0E00               	movlw	0
  7304   00210A  6E01               	movwf	clcd_write@control_bit^0,c
  7305   00210C  500F               	movf	clcd_putch@addr^0,w,c
  7306   00210E  ECBF  F00F         	call	_clcd_write
  7307                           
  7308                           ;clcd.c: 72:  clcd_write(data, 1);
  7309   002112  0E01               	movlw	1
  7310   002114  6E01               	movwf	clcd_write@control_bit^0,c
  7311   002116  5010               	movf	clcd_putch@data^0,w,c
  7312   002118  ECBF  F00F         	call	_clcd_write
  7313   00211C  0012               	return		;funcret
  7314   00211E                     __end_of_clcd_putch:
  7315                           	callstack 0
  7316                           
  7317 ;; *************** function ___lwdiv *****************
  7318 ;; Defined at:
  7319 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  dividend        2    0[COMRAM] unsigned int 
  7322 ;;  divisor         2    2[COMRAM] unsigned int 
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;  quotient        2    4[COMRAM] unsigned int 
  7325 ;;  counter         1    6[COMRAM] unsigned char 
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  2    0[COMRAM] unsigned int 
  7328 ;; Registers used:
  7329 ;;		wreg, status,2, status,0
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7335 ;;      Params:         4       0       0       0       0       0       0
  7336 ;;      Locals:         3       0       0       0       0       0       0
  7337 ;;      Temps:          0       0       0       0       0       0       0
  7338 ;;      Totals:         7       0       0       0       0       0       0
  7339 ;;Total ram usage:        7 bytes
  7340 ;; Hardware stack levels used: 1
  7341 ;; Hardware stack levels required when called: 1
  7342 ;; This function calls:
  7343 ;;		Nothing
  7344 ;; This function is called by:
  7345 ;;		_display_speed
  7346 ;;		_get_speed
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text48
  7351   001B46                     __ptext48:
  7352                           	callstack 0
  7353   001B46                     ___lwdiv:
  7354                           	callstack 27
  7355   001B46  0E00               	movlw	0
  7356   001B48  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  7357   001B4A  0E00               	movlw	0
  7358   001B4C  6E05               	movwf	___lwdiv@quotient^0,c
  7359   001B4E  5003               	movf	___lwdiv@divisor^0,w,c
  7360   001B50  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7361   001B52  B4D8               	btfsc	status,2,c
  7362   001B54  EFAE  F00D         	goto	u2191
  7363   001B58  EFB0  F00D         	goto	u2190
  7364   001B5C                     u2191:
  7365   001B5C  EFD8  F00D         	goto	l1217
  7366   001B60                     u2190:
  7367   001B60  0E01               	movlw	1
  7368   001B62  6E07               	movwf	___lwdiv@counter^0,c
  7369   001B64  EFB8  F00D         	goto	l3129
  7370   001B68                     l3127:
  7371   001B68  90D8               	bcf	status,0,c
  7372   001B6A  3603               	rlcf	___lwdiv@divisor^0,f,c
  7373   001B6C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7374   001B6E  2A07               	incf	___lwdiv@counter^0,f,c
  7375   001B70                     l3129:
  7376   001B70  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  7377   001B72  EFBD  F00D         	goto	u2201
  7378   001B76  EFBF  F00D         	goto	u2200
  7379   001B7A                     u2201:
  7380   001B7A  EFB4  F00D         	goto	l3127
  7381   001B7E                     u2200:
  7382   001B7E                     l3131:
  7383   001B7E  90D8               	bcf	status,0,c
  7384   001B80  3605               	rlcf	___lwdiv@quotient^0,f,c
  7385   001B82  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7386   001B84  5003               	movf	___lwdiv@divisor^0,w,c
  7387   001B86  5C01               	subwf	___lwdiv@dividend^0,w,c
  7388   001B88  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7389   001B8A  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7390   001B8C  A0D8               	btfss	status,0,c
  7391   001B8E  EFCB  F00D         	goto	u2211
  7392   001B92  EFCD  F00D         	goto	u2210
  7393   001B96                     u2211:
  7394   001B96  EFD2  F00D         	goto	l3139
  7395   001B9A                     u2210:
  7396   001B9A  5003               	movf	___lwdiv@divisor^0,w,c
  7397   001B9C  5E01               	subwf	___lwdiv@dividend^0,f,c
  7398   001B9E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7399   001BA0  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7400   001BA2  8005               	bsf	___lwdiv@quotient^0,0,c
  7401   001BA4                     l3139:
  7402   001BA4  90D8               	bcf	status,0,c
  7403   001BA6  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7404   001BA8  3203               	rrcf	___lwdiv@divisor^0,f,c
  7405   001BAA  2E07               	decfsz	___lwdiv@counter^0,f,c
  7406   001BAC  EFBF  F00D         	goto	l3131
  7407   001BB0                     l1217:
  7408   001BB0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  7409   001BB4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7410   001BB8  0012               	return		;funcret
  7411   001BBA                     __end_of___lwdiv:
  7412                           	callstack 0
  7413                           
  7414 ;; *************** function ___awmod *****************
  7415 ;; Defined at:
  7416 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  dividend        2    8[COMRAM] int 
  7419 ;;  divisor         2   10[COMRAM] int 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  sign            1   13[COMRAM] unsigned char 
  7422 ;;  counter         1   12[COMRAM] unsigned char 
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  2    8[COMRAM] int 
  7425 ;; Registers used:
  7426 ;;		wreg, status,2, status,0
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7432 ;;      Params:         4       0       0       0       0       0       0
  7433 ;;      Locals:         2       0       0       0       0       0       0
  7434 ;;      Temps:          0       0       0       0       0       0       0
  7435 ;;      Totals:         6       0       0       0       0       0       0
  7436 ;;Total ram usage:        6 bytes
  7437 ;; Hardware stack levels used: 1
  7438 ;; Hardware stack levels required when called: 1
  7439 ;; This function calls:
  7440 ;;		Nothing
  7441 ;; This function is called by:
  7442 ;;		_display_speed
  7443 ;;		_timeleft
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           	psect	text49
  7448   0017CE                     __ptext49:
  7449                           	callstack 0
  7450   0017CE                     ___awmod:
  7451                           	callstack 27
  7452   0017CE  0E00               	movlw	0
  7453   0017D0  6E0E               	movwf	___awmod@sign^0,c
  7454   0017D2  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  7455   0017D4  EFF0  F00B         	goto	u2060
  7456   0017D8  EFEE  F00B         	goto	u2061
  7457   0017DC                     u2061:
  7458   0017DC  EFF6  F00B         	goto	l3049
  7459   0017E0                     u2060:
  7460   0017E0  6C09               	negf	___awmod@dividend^0,c
  7461   0017E2  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  7462   0017E4  B0D8               	btfsc	status,0,c
  7463   0017E6  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  7464   0017E8  0E01               	movlw	1
  7465   0017EA  6E0E               	movwf	___awmod@sign^0,c
  7466   0017EC                     l3049:
  7467   0017EC  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  7468   0017EE  EFFD  F00B         	goto	u2070
  7469   0017F2  EFFB  F00B         	goto	u2071
  7470   0017F6                     u2071:
  7471   0017F6  EF01  F00C         	goto	l3053
  7472   0017FA                     u2070:
  7473   0017FA  6C0B               	negf	___awmod@divisor^0,c
  7474   0017FC  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  7475   0017FE  B0D8               	btfsc	status,0,c
  7476   001800  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  7477   001802                     l3053:
  7478   001802  500B               	movf	___awmod@divisor^0,w,c
  7479   001804  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  7480   001806  B4D8               	btfsc	status,2,c
  7481   001808  EF08  F00C         	goto	u2081
  7482   00180C  EF0A  F00C         	goto	u2080
  7483   001810                     u2081:
  7484   001810  EF2E  F00C         	goto	l3069
  7485   001814                     u2080:
  7486   001814  0E01               	movlw	1
  7487   001816  6E0D               	movwf	___awmod@counter^0,c
  7488   001818  EF12  F00C         	goto	l3059
  7489   00181C                     l3057:
  7490   00181C  90D8               	bcf	status,0,c
  7491   00181E  360B               	rlcf	___awmod@divisor^0,f,c
  7492   001820  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  7493   001822  2A0D               	incf	___awmod@counter^0,f,c
  7494   001824                     l3059:
  7495   001824  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  7496   001826  EF17  F00C         	goto	u2091
  7497   00182A  EF19  F00C         	goto	u2090
  7498   00182E                     u2091:
  7499   00182E  EF0E  F00C         	goto	l3057
  7500   001832                     u2090:
  7501   001832                     l3061:
  7502   001832  500B               	movf	___awmod@divisor^0,w,c
  7503   001834  5C09               	subwf	___awmod@dividend^0,w,c
  7504   001836  500C               	movf	(___awmod@divisor+1)^0,w,c
  7505   001838  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  7506   00183A  A0D8               	btfss	status,0,c
  7507   00183C  EF22  F00C         	goto	u2101
  7508   001840  EF24  F00C         	goto	u2100
  7509   001844                     u2101:
  7510   001844  EF28  F00C         	goto	l3065
  7511   001848                     u2100:
  7512   001848  500B               	movf	___awmod@divisor^0,w,c
  7513   00184A  5E09               	subwf	___awmod@dividend^0,f,c
  7514   00184C  500C               	movf	(___awmod@divisor+1)^0,w,c
  7515   00184E  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  7516   001850                     l3065:
  7517   001850  90D8               	bcf	status,0,c
  7518   001852  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  7519   001854  320B               	rrcf	___awmod@divisor^0,f,c
  7520   001856  2E0D               	decfsz	___awmod@counter^0,f,c
  7521   001858  EF19  F00C         	goto	l3061
  7522   00185C                     l3069:
  7523   00185C  500E               	movf	___awmod@sign^0,w,c
  7524   00185E  B4D8               	btfsc	status,2,c
  7525   001860  EF34  F00C         	goto	u2111
  7526   001864  EF36  F00C         	goto	u2110
  7527   001868                     u2111:
  7528   001868  EF3A  F00C         	goto	l3073
  7529   00186C                     u2110:
  7530   00186C  6C09               	negf	___awmod@dividend^0,c
  7531   00186E  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  7532   001870  B0D8               	btfsc	status,0,c
  7533   001872  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  7534   001874                     l3073:
  7535   001874  C009  F009         	movff	___awmod@dividend,?___awmod
  7536   001878  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  7537   00187C  0012               	return		;funcret
  7538   00187E                     __end_of___awmod:
  7539                           	callstack 0
  7540                           
  7541 ;; *************** function _change_pass *****************
  7542 ;; Defined at:
  7543 ;;		line 127 in file "password.c"
  7544 ;; Parameters:    Size  Location     Type
  7545 ;;  ucKey           1    wreg     unsigned char 
  7546 ;; Auto vars:     Size  Location     Type
  7547 ;;  ucKey           1   20[COMRAM] unsigned char 
  7548 ;;  wait            4   16[COMRAM] unsigned long 
  7549 ;;  wait            4   12[COMRAM] unsigned long 
  7550 ;;  wait            4    8[COMRAM] unsigned long 
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  1    wreg      void 
  7553 ;; Registers used:
  7554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7560 ;;      Params:         0       0       0       0       0       0       0
  7561 ;;      Locals:        13       0       0       0       0       0       0
  7562 ;;      Temps:          0       0       0       0       0       0       0
  7563 ;;      Totals:        13       0       0       0       0       0       0
  7564 ;;Total ram usage:       13 bytes
  7565 ;; Hardware stack levels used: 1
  7566 ;; Hardware stack levels required when called: 3
  7567 ;; This function calls:
  7568 ;;		_clcd_print
  7569 ;;		_clcd_write
  7570 ;;		_mystrcmp
  7571 ;; This function is called by:
  7572 ;;		_main
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	text50
  7577   0006FC                     __ptext50:
  7578                           	callstack 0
  7579   0006FC                     _change_pass:
  7580                           	callstack 27
  7581                           
  7582                           ;incstack = 0
  7583                           ;change_pass@ucKey stored from wreg
  7584   0006FC  6E15               	movwf	change_pass@ucKey^0,c
  7585   0006FE                     
  7586                           ;password.c: 127: void change_pass(unsigned char ucKey);password.c: 128: {;password.c: 1
      +                          29:     static char count=0,flag=0;;password.c: 130:     static char passcheck[5];;passw
      +                          ord.c: 131:     static char passcheck1[5];;password.c: 132:     passcheck1[4]='\0';
  7587   0006FE  0E00               	movlw	0
  7588   000700  0100               	movlb	0	; () banked
  7589   000702  6FA0               	movwf	(change_pass@passcheck1+4)& (0+255),b
  7590                           
  7591                           ;password.c: 133:     passcheck[4]='\0';
  7592   000704  0E00               	movlw	0
  7593   000706  6FA5               	movwf	(change_pass@passcheck+4)& (0+255),b
  7594   000708                     
  7595                           ; BSR set to: 0
  7596                           ;password.c: 134:     clcd_print((unsigned char*) "changing password", (0x80 + (0)));
  7597   000708  0E8D               	movlw	low STR_19
  7598   00070A  6E03               	movwf	clcd_print@data^0,c
  7599   00070C  0E2E               	movlw	high STR_19
  7600   00070E  6E04               	movwf	(clcd_print@data+1)^0,c
  7601   000710  0E80               	movlw	128
  7602   000712  6E05               	movwf	clcd_print@addr^0,c
  7603   000714  EC4C  F00E         	call	_clcd_print	;wreg free
  7604   000718                     
  7605                           ;password.c: 135:     for(unsigned long int wait=10000; wait--;);
  7606   000718  0E10               	movlw	16
  7607   00071A  6E09               	movwf	change_pass@wait^0,c
  7608   00071C  0E27               	movlw	39
  7609   00071E  6E0A               	movwf	(change_pass@wait+1)^0,c
  7610   000720  0E00               	movlw	0
  7611   000722  6E0B               	movwf	(change_pass@wait+2)^0,c
  7612   000724  0E00               	movlw	0
  7613   000726  6E0C               	movwf	(change_pass@wait+3)^0,c
  7614   000728                     l3859:
  7615   000728  0609               	decf	change_pass@wait^0,f,c
  7616   00072A  0E00               	movlw	0
  7617   00072C  5A0A               	subwfb	(change_pass@wait+1)^0,f,c
  7618   00072E  5A0B               	subwfb	(change_pass@wait+2)^0,f,c
  7619   000730  5A0C               	subwfb	(change_pass@wait+3)^0,f,c
  7620   000732  2809               	incf	change_pass@wait^0,w,c
  7621   000734  E10A               	bnz	u3111
  7622   000736  280A               	incf	(change_pass@wait+1)^0,w,c
  7623   000738  E108               	bnz	u3111
  7624   00073A  280B               	incf	(change_pass@wait+2)^0,w,c
  7625   00073C  E106               	bnz	u3111
  7626   00073E  280C               	incf	(change_pass@wait+3)^0,w,c
  7627   000740  A4D8               	btfss	status,2,c
  7628   000742  EFA5  F003         	goto	u3111
  7629   000746  EFA7  F003         	goto	u3110
  7630   00074A                     u3111:
  7631   00074A  EF94  F003         	goto	l3859
  7632   00074E                     u3110:
  7633   00074E                     
  7634                           ;password.c: 136:     if(flag==0)
  7635   00074E  504C               	movf	change_pass@flag^0,w,c
  7636   000750  A4D8               	btfss	status,2,c
  7637   000752  EFAD  F003         	goto	u3121
  7638   000756  EFAF  F003         	goto	u3120
  7639   00075A                     u3121:
  7640   00075A  EF17  F004         	goto	l3889
  7641   00075E                     u3120:
  7642   00075E                     
  7643                           ;password.c: 137:     {;password.c: 138:             clcd_print((unsigned char*) "\n cur
      +                          rent Pass", (0x80 + (0)));
  7644   00075E  0E67               	movlw	low STR_20
  7645   000760  6E03               	movwf	clcd_print@data^0,c
  7646   000762  0E2F               	movlw	high STR_20
  7647   000764  6E04               	movwf	(clcd_print@data+1)^0,c
  7648   000766  0E80               	movlw	128
  7649   000768  6E05               	movwf	clcd_print@addr^0,c
  7650   00076A  EC4C  F00E         	call	_clcd_print	;wreg free
  7651   00076E                     
  7652                           ;password.c: 139:             if(count<4)
  7653   00076E  0E04               	movlw	4
  7654   000770  604D               	cpfslt	change_pass@count^0,c
  7655   000772  EFBD  F003         	goto	u3131
  7656   000776  EFBF  F003         	goto	u3130
  7657   00077A                     u3131:
  7658   00077A  EFD3  F003         	goto	l3873
  7659   00077E                     u3130:
  7660   00077E                     
  7661                           ;password.c: 140:             {;password.c: 141:                 if(ucKey!=0xFF)
  7662   00077E  2815               	incf	change_pass@ucKey^0,w,c
  7663   000780  B4D8               	btfsc	status,2,c
  7664   000782  EFC5  F003         	goto	u3141
  7665   000786  EFC7  F003         	goto	u3140
  7666   00078A                     u3141:
  7667   00078A  EF17  F004         	goto	l3889
  7668   00078E                     u3140:
  7669   00078E                     
  7670                           ;password.c: 142:                 {;password.c: 143:                     passcheck[count
      +                          ]=ucKey+48-11;
  7671   00078E  0EA1               	movlw	low change_pass@passcheck
  7672   000790  244D               	addwf	change_pass@count^0,w,c
  7673   000792  6ED9               	movwf	fsr2l,c
  7674   000794  6ADA               	clrf	fsr2h,c
  7675   000796  0E00               	movlw	high change_pass@passcheck
  7676   000798  22DA               	addwfc	fsr2h,f,c
  7677   00079A  5015               	movf	change_pass@ucKey^0,w,c
  7678   00079C  0F25               	addlw	37
  7679   00079E  6EDF               	movwf	indf2,c
  7680   0007A0                     
  7681                           ;password.c: 144:                     count++;
  7682   0007A0  2A4D               	incf	change_pass@count^0,f,c
  7683   0007A2  EF17  F004         	goto	l3889
  7684   0007A6                     l3873:
  7685                           
  7686                           ;password.c: 148:             {;password.c: 149:                 clcd_write(0x01, 0);
  7687   0007A6  0E00               	movlw	0
  7688   0007A8  6E01               	movwf	clcd_write@control_bit^0,c
  7689   0007AA  0E01               	movlw	1
  7690   0007AC  ECBF  F00F         	call	_clcd_write
  7691   0007B0                     
  7692                           ;password.c: 150:                 count=0;
  7693   0007B0  0E00               	movlw	0
  7694   0007B2  6E4D               	movwf	change_pass@count^0,c
  7695   0007B4                     
  7696                           ;password.c: 151:                 if(!mystrcmp(pass, passcheck))
  7697   0007B4  0EAB               	movlw	low _pass
  7698   0007B6  6E01               	movwf	mystrcmp@s1^0,c
  7699   0007B8  0E00               	movlw	high _pass
  7700   0007BA  6E02               	movwf	(mystrcmp@s1+1)^0,c
  7701   0007BC  0EA1               	movlw	low change_pass@passcheck
  7702   0007BE  6E03               	movwf	mystrcmp@s2^0,c
  7703   0007C0  0E00               	movlw	high change_pass@passcheck
  7704   0007C2  6E04               	movwf	(mystrcmp@s2+1)^0,c
  7705   0007C4  EC16  F00E         	call	_mystrcmp	;wreg free
  7706   0007C8  5001               	movf	?_mystrcmp^0,w,c
  7707   0007CA  1002               	iorwf	(?_mystrcmp+1)^0,w,c
  7708   0007CC  A4D8               	btfss	status,2,c
  7709   0007CE  EFEB  F003         	goto	u3151
  7710   0007D2  EFED  F003         	goto	u3150
  7711   0007D6                     u3151:
  7712   0007D6  EF17  F004         	goto	l3889
  7713   0007DA                     u3150:
  7714   0007DA                     
  7715                           ;password.c: 152:                 {;password.c: 153:                     clcd_print((uns
      +                          igned char*) "Password Correct", (0x80 + (0)));
  7716   0007DA  0E28               	movlw	low STR_21
  7717   0007DC  6E03               	movwf	clcd_print@data^0,c
  7718   0007DE  0E2F               	movlw	high STR_21
  7719   0007E0  6E04               	movwf	(clcd_print@data+1)^0,c
  7720   0007E2  0E80               	movlw	128
  7721   0007E4  6E05               	movwf	clcd_print@addr^0,c
  7722   0007E6  EC4C  F00E         	call	_clcd_print	;wreg free
  7723   0007EA                     
  7724                           ;password.c: 154:                     for(unsigned long int wait=10000; wait--;);
  7725   0007EA  0E10               	movlw	16
  7726   0007EC  6E0D               	movwf	change_pass@wait_626^0,c
  7727   0007EE  0E27               	movlw	39
  7728   0007F0  6E0E               	movwf	(change_pass@wait_626+1)^0,c
  7729   0007F2  0E00               	movlw	0
  7730   0007F4  6E0F               	movwf	(change_pass@wait_626+2)^0,c
  7731   0007F6  0E00               	movlw	0
  7732   0007F8  6E10               	movwf	(change_pass@wait_626+3)^0,c
  7733   0007FA                     l3883:
  7734   0007FA  060D               	decf	change_pass@wait_626^0,f,c
  7735   0007FC  0E00               	movlw	0
  7736   0007FE  5A0E               	subwfb	(change_pass@wait_626+1)^0,f,c
  7737   000800  5A0F               	subwfb	(change_pass@wait_626+2)^0,f,c
  7738   000802  5A10               	subwfb	(change_pass@wait_626+3)^0,f,c
  7739   000804  280D               	incf	change_pass@wait_626^0,w,c
  7740   000806  E10A               	bnz	u3161
  7741   000808  280E               	incf	(change_pass@wait_626+1)^0,w,c
  7742   00080A  E108               	bnz	u3161
  7743   00080C  280F               	incf	(change_pass@wait_626+2)^0,w,c
  7744   00080E  E106               	bnz	u3161
  7745   000810  2810               	incf	(change_pass@wait_626+3)^0,w,c
  7746   000812  A4D8               	btfss	status,2,c
  7747   000814  EF0E  F004         	goto	u3161
  7748   000818  EF10  F004         	goto	u3160
  7749   00081C                     u3161:
  7750   00081C  EFFD  F003         	goto	l3883
  7751   000820                     u3160:
  7752   000820                     
  7753                           ;password.c: 155:                     clcd_write(0x01, 0);
  7754   000820  0E00               	movlw	0
  7755   000822  6E01               	movwf	clcd_write@control_bit^0,c
  7756   000824  0E01               	movlw	1
  7757   000826  ECBF  F00F         	call	_clcd_write
  7758   00082A                     
  7759                           ;password.c: 156:                     flag=1;
  7760   00082A  0E01               	movlw	1
  7761   00082C  6E4C               	movwf	change_pass@flag^0,c
  7762   00082E                     l3889:
  7763                           
  7764                           ;password.c: 160:     if(flag==1)
  7765   00082E  044C               	decf	change_pass@flag^0,w,c
  7766   000830  A4D8               	btfss	status,2,c
  7767   000832  EF1D  F004         	goto	u3171
  7768   000836  EF1F  F004         	goto	u3170
  7769   00083A                     u3171:
  7770   00083A  EF4C  F004         	goto	l3907
  7771   00083E                     u3170:
  7772   00083E                     
  7773                           ;password.c: 161:     {;password.c: 162:         clcd_print((unsigned char*) "\n New Pas
      +                          sword", (0x80 + (0)));
  7774   00083E  0E49               	movlw	low STR_22
  7775   000840  6E03               	movwf	clcd_print@data^0,c
  7776   000842  0E2F               	movlw	high STR_22
  7777   000844  6E04               	movwf	(clcd_print@data+1)^0,c
  7778   000846  0E80               	movlw	128
  7779   000848  6E05               	movwf	clcd_print@addr^0,c
  7780   00084A  EC4C  F00E         	call	_clcd_print	;wreg free
  7781   00084E                     
  7782                           ;password.c: 163:         if(count<4)
  7783   00084E  0E04               	movlw	4
  7784   000850  604D               	cpfslt	change_pass@count^0,c
  7785   000852  EF2D  F004         	goto	u3181
  7786   000856  EF2F  F004         	goto	u3180
  7787   00085A                     u3181:
  7788   00085A  EF43  F004         	goto	l3901
  7789   00085E                     u3180:
  7790   00085E                     
  7791                           ;password.c: 164:             {;password.c: 165:                 if(ucKey!=0xFF)
  7792   00085E  2815               	incf	change_pass@ucKey^0,w,c
  7793   000860  B4D8               	btfsc	status,2,c
  7794   000862  EF35  F004         	goto	u3191
  7795   000866  EF37  F004         	goto	u3190
  7796   00086A                     u3191:
  7797   00086A  EF4C  F004         	goto	l3907
  7798   00086E                     u3190:
  7799   00086E                     
  7800                           ;password.c: 166:                 {;password.c: 167:                     passcheck1[coun
      +                          t]=ucKey+48-11;
  7801   00086E  0E9C               	movlw	low change_pass@passcheck1
  7802   000870  244D               	addwf	change_pass@count^0,w,c
  7803   000872  6ED9               	movwf	fsr2l,c
  7804   000874  6ADA               	clrf	fsr2h,c
  7805   000876  0E00               	movlw	high change_pass@passcheck1
  7806   000878  22DA               	addwfc	fsr2h,f,c
  7807   00087A  5015               	movf	change_pass@ucKey^0,w,c
  7808   00087C  0F25               	addlw	37
  7809   00087E  6EDF               	movwf	indf2,c
  7810   000880                     
  7811                           ;password.c: 168:                     count++;
  7812   000880  2A4D               	incf	change_pass@count^0,f,c
  7813   000882  EF4C  F004         	goto	l3907
  7814   000886                     l3901:
  7815                           
  7816                           ;password.c: 172:             {;password.c: 173:                 clcd_write(0x01, 0);
  7817   000886  0E00               	movlw	0
  7818   000888  6E01               	movwf	clcd_write@control_bit^0,c
  7819   00088A  0E01               	movlw	1
  7820   00088C  ECBF  F00F         	call	_clcd_write
  7821   000890                     
  7822                           ;password.c: 174:                 count=0;
  7823   000890  0E00               	movlw	0
  7824   000892  6E4D               	movwf	change_pass@count^0,c
  7825   000894                     
  7826                           ;password.c: 175:                 flag=2;
  7827   000894  0E02               	movlw	2
  7828   000896  6E4C               	movwf	change_pass@flag^0,c
  7829   000898                     l3907:
  7830                           
  7831                           ;password.c: 178:     if(flag==2)
  7832   000898  0E02               	movlw	2
  7833   00089A  184C               	xorwf	change_pass@flag^0,w,c
  7834   00089C  A4D8               	btfss	status,2,c
  7835   00089E  EF53  F004         	goto	u3201
  7836   0008A2  EF55  F004         	goto	u3200
  7837   0008A6                     u3201:
  7838   0008A6  EFC7  F004         	goto	l392
  7839   0008AA                     u3200:
  7840   0008AA                     
  7841                           ;password.c: 179:     {;password.c: 180:             clcd_print((unsigned char*) "RE-Ent
      +                          er  Pass", (0x80 + (0)));
  7842   0008AA  0E58               	movlw	low STR_23
  7843   0008AC  6E03               	movwf	clcd_print@data^0,c
  7844   0008AE  0E2F               	movlw	high STR_23
  7845   0008B0  6E04               	movwf	(clcd_print@data+1)^0,c
  7846   0008B2  0E80               	movlw	128
  7847   0008B4  6E05               	movwf	clcd_print@addr^0,c
  7848   0008B6  EC4C  F00E         	call	_clcd_print	;wreg free
  7849   0008BA                     
  7850                           ;password.c: 181:             if(count<4)
  7851   0008BA  0E04               	movlw	4
  7852   0008BC  604D               	cpfslt	change_pass@count^0,c
  7853   0008BE  EF63  F004         	goto	u3211
  7854   0008C2  EF65  F004         	goto	u3210
  7855   0008C6                     u3211:
  7856   0008C6  EF79  F004         	goto	l3919
  7857   0008CA                     u3210:
  7858   0008CA                     
  7859                           ;password.c: 182:             {;password.c: 183:                 if(ucKey!=0xFF)
  7860   0008CA  2815               	incf	change_pass@ucKey^0,w,c
  7861   0008CC  B4D8               	btfsc	status,2,c
  7862   0008CE  EF6B  F004         	goto	u3221
  7863   0008D2  EF6D  F004         	goto	u3220
  7864   0008D6                     u3221:
  7865   0008D6  EFC7  F004         	goto	l392
  7866   0008DA                     u3220:
  7867   0008DA                     
  7868                           ;password.c: 184:                 {;password.c: 185:                     passcheck1[coun
      +                          t]=ucKey+48-11;
  7869   0008DA  0E9C               	movlw	low change_pass@passcheck1
  7870   0008DC  244D               	addwf	change_pass@count^0,w,c
  7871   0008DE  6ED9               	movwf	fsr2l,c
  7872   0008E0  6ADA               	clrf	fsr2h,c
  7873   0008E2  0E00               	movlw	high change_pass@passcheck1
  7874   0008E4  22DA               	addwfc	fsr2h,f,c
  7875   0008E6  5015               	movf	change_pass@ucKey^0,w,c
  7876   0008E8  0F25               	addlw	37
  7877   0008EA  6EDF               	movwf	indf2,c
  7878   0008EC                     
  7879                           ;password.c: 186:                     count++;
  7880   0008EC  2A4D               	incf	change_pass@count^0,f,c
  7881   0008EE  EFC7  F004         	goto	l392
  7882   0008F2                     l3919:
  7883                           
  7884                           ;password.c: 190:             {;password.c: 191:                 clcd_write(0x01, 0);
  7885   0008F2  0E00               	movlw	0
  7886   0008F4  6E01               	movwf	clcd_write@control_bit^0,c
  7887   0008F6  0E01               	movlw	1
  7888   0008F8  ECBF  F00F         	call	_clcd_write
  7889   0008FC                     
  7890                           ;password.c: 192:                 count=0;
  7891   0008FC  0E00               	movlw	0
  7892   0008FE  6E4D               	movwf	change_pass@count^0,c
  7893   000900                     
  7894                           ;password.c: 193:                 if(!mystrcmp(passcheck1, passcheck))
  7895   000900  0E9C               	movlw	low change_pass@passcheck1
  7896   000902  6E01               	movwf	mystrcmp@s1^0,c
  7897   000904  0E00               	movlw	high change_pass@passcheck1
  7898   000906  6E02               	movwf	(mystrcmp@s1+1)^0,c
  7899   000908  0EA1               	movlw	low change_pass@passcheck
  7900   00090A  6E03               	movwf	mystrcmp@s2^0,c
  7901   00090C  0E00               	movlw	high change_pass@passcheck
  7902   00090E  6E04               	movwf	(mystrcmp@s2+1)^0,c
  7903   000910  EC16  F00E         	call	_mystrcmp	;wreg free
  7904   000914  5001               	movf	?_mystrcmp^0,w,c
  7905   000916  1002               	iorwf	(?_mystrcmp+1)^0,w,c
  7906   000918  A4D8               	btfss	status,2,c
  7907   00091A  EF91  F004         	goto	u3231
  7908   00091E  EF93  F004         	goto	u3230
  7909   000922                     u3231:
  7910   000922  EFC7  F004         	goto	l392
  7911   000926                     u3230:
  7912   000926                     
  7913                           ;password.c: 194:                 {;password.c: 195:                     clcd_print((uns
      +                          igned char*)"  Pass Changed  ", (0x80 + (0)));
  7914   000926  0EC2               	movlw	low STR_24
  7915   000928  6E03               	movwf	clcd_print@data^0,c
  7916   00092A  0E2E               	movlw	high STR_24
  7917   00092C  6E04               	movwf	(clcd_print@data+1)^0,c
  7918   00092E  0E80               	movlw	128
  7919   000930  6E05               	movwf	clcd_print@addr^0,c
  7920   000932  EC4C  F00E         	call	_clcd_print	;wreg free
  7921                           
  7922                           ;password.c: 196:                     clcd_print((unsigned char*)"  Successfully  ", (0x
      +                          C0 + (0)));
  7923   000936  0EE4               	movlw	low STR_25
  7924   000938  6E03               	movwf	clcd_print@data^0,c
  7925   00093A  0E2E               	movlw	high STR_25
  7926   00093C  6E04               	movwf	(clcd_print@data+1)^0,c
  7927   00093E  0EC0               	movlw	192
  7928   000940  6E05               	movwf	clcd_print@addr^0,c
  7929   000942  EC4C  F00E         	call	_clcd_print	;wreg free
  7930   000946                     
  7931                           ;password.c: 197:                     for(unsigned long int wait=10000; wait--;);
  7932   000946  0E10               	movlw	16
  7933   000948  6E11               	movwf	change_pass@wait_631^0,c
  7934   00094A  0E27               	movlw	39
  7935   00094C  6E12               	movwf	(change_pass@wait_631+1)^0,c
  7936   00094E  0E00               	movlw	0
  7937   000950  6E13               	movwf	(change_pass@wait_631+2)^0,c
  7938   000952  0E00               	movlw	0
  7939   000954  6E14               	movwf	(change_pass@wait_631+3)^0,c
  7940   000956                     l3929:
  7941   000956  0611               	decf	change_pass@wait_631^0,f,c
  7942   000958  0E00               	movlw	0
  7943   00095A  5A12               	subwfb	(change_pass@wait_631+1)^0,f,c
  7944   00095C  5A13               	subwfb	(change_pass@wait_631+2)^0,f,c
  7945   00095E  5A14               	subwfb	(change_pass@wait_631+3)^0,f,c
  7946   000960  2811               	incf	change_pass@wait_631^0,w,c
  7947   000962  E10A               	bnz	u3241
  7948   000964  2812               	incf	(change_pass@wait_631+1)^0,w,c
  7949   000966  E108               	bnz	u3241
  7950   000968  2813               	incf	(change_pass@wait_631+2)^0,w,c
  7951   00096A  E106               	bnz	u3241
  7952   00096C  2814               	incf	(change_pass@wait_631+3)^0,w,c
  7953   00096E  A4D8               	btfss	status,2,c
  7954   000970  EFBC  F004         	goto	u3241
  7955   000974  EFBE  F004         	goto	u3240
  7956   000978                     u3241:
  7957   000978  EFAB  F004         	goto	l3929
  7958   00097C                     u3240:
  7959   00097C                     
  7960                           ;password.c: 198:                     clcd_write(0x01, 0);
  7961   00097C  0E00               	movlw	0
  7962   00097E  6E01               	movwf	clcd_write@control_bit^0,c
  7963   000980  0E01               	movlw	1
  7964   000982  ECBF  F00F         	call	_clcd_write
  7965   000986                     
  7966                           ;password.c: 199:                     controlflag=1;
  7967   000986  0E00               	movlw	0
  7968   000988  6E56               	movwf	(_controlflag+1)^0,c
  7969   00098A  0E01               	movlw	1
  7970   00098C  6E55               	movwf	_controlflag^0,c
  7971   00098E                     l392:
  7972   00098E  0012               	return		;funcret
  7973   000990                     __end_of_change_pass:
  7974                           	callstack 0
  7975                           
  7976 ;; *************** function _mystrcmp *****************
  7977 ;; Defined at:
  7978 ;;		line 113 in file "password.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;  s1              2    0[COMRAM] PTR unsigned char 
  7981 ;;		 -> change_pass@passcheck1(5), uckey(5), pass(5), 
  7982 ;;  s2              2    2[COMRAM] PTR unsigned char 
  7983 ;;		 -> change_pass@passcheck(5), pass(5), 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  i               2    6[COMRAM] int 
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  2    0[COMRAM] int 
  7988 ;; Registers used:
  7989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7995 ;;      Params:         4       0       0       0       0       0       0
  7996 ;;      Locals:         2       0       0       0       0       0       0
  7997 ;;      Temps:          2       0       0       0       0       0       0
  7998 ;;      Totals:         8       0       0       0       0       0       0
  7999 ;;Total ram usage:        8 bytes
  8000 ;; Hardware stack levels used: 1
  8001 ;; Hardware stack levels required when called: 1
  8002 ;; This function calls:
  8003 ;;		Nothing
  8004 ;; This function is called by:
  8005 ;;		_logscreen
  8006 ;;		_change_pass
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text51
  8011   001C2C                     __ptext51:
  8012                           	callstack 0
  8013   001C2C                     _mystrcmp:
  8014                           	callstack 28
  8015   001C2C                     
  8016                           ;password.c: 113: int mystrcmp(char*s1, char *s2);password.c: 114: {;password.c: 115:   
      +                            int i=0;
  8017   001C2C  0E00               	movlw	0
  8018   001C2E  6E08               	movwf	(mystrcmp@i+1)^0,c
  8019   001C30  0E00               	movlw	0
  8020   001C32  6E07               	movwf	mystrcmp@i^0,c
  8021                           
  8022                           ;password.c: 116:     while(s1[i]!= '\0')
  8023   001C34  EF39  F00E         	goto	l3353
  8024   001C38                     l3345:
  8025                           
  8026                           ;password.c: 117:     {;password.c: 118:         if(s1[i]!=s2[i])
  8027   001C38  5007               	movf	mystrcmp@i^0,w,c
  8028   001C3A  2403               	addwf	mystrcmp@s2^0,w,c
  8029   001C3C  6ED9               	movwf	fsr2l,c
  8030   001C3E  5008               	movf	(mystrcmp@i+1)^0,w,c
  8031   001C40  2004               	addwfc	(mystrcmp@s2+1)^0,w,c
  8032   001C42  6EDA               	movwf	fsr2h,c
  8033   001C44  5007               	movf	mystrcmp@i^0,w,c
  8034   001C46  2401               	addwf	mystrcmp@s1^0,w,c
  8035   001C48  6EE1               	movwf	fsr1l,c
  8036   001C4A  5008               	movf	(mystrcmp@i+1)^0,w,c
  8037   001C4C  2002               	addwfc	(mystrcmp@s1+1)^0,w,c
  8038   001C4E  6EE2               	movwf	fsr1h,c
  8039   001C50  50DE               	movf	postinc2,w,c
  8040   001C52  18E6               	xorwf	postinc1,w,c
  8041   001C54  B4D8               	btfsc	status,2,c
  8042   001C56  EF2F  F00E         	goto	u2411
  8043   001C5A  EF31  F00E         	goto	u2410
  8044   001C5E                     u2411:
  8045   001C5E  EF37  F00E         	goto	l3351
  8046   001C62                     u2410:
  8047   001C62                     
  8048                           ;password.c: 119:         {;password.c: 120:             return 1;
  8049   001C62  0E00               	movlw	0
  8050   001C64  6E02               	movwf	(?_mystrcmp+1)^0,c
  8051   001C66  0E01               	movlw	1
  8052   001C68  6E01               	movwf	?_mystrcmp^0,c
  8053   001C6A  EF4B  F00E         	goto	l357
  8054   001C6E                     l3351:
  8055                           
  8056                           ;password.c: 122:         i++;
  8057   001C6E  4A07               	infsnz	mystrcmp@i^0,f,c
  8058   001C70  2A08               	incf	(mystrcmp@i+1)^0,f,c
  8059   001C72                     l3353:
  8060                           
  8061                           ;password.c: 116:     while(s1[i]!= '\0')
  8062   001C72  5007               	movf	mystrcmp@i^0,w,c
  8063   001C74  2401               	addwf	mystrcmp@s1^0,w,c
  8064   001C76  6ED9               	movwf	fsr2l,c
  8065   001C78  5008               	movf	(mystrcmp@i+1)^0,w,c
  8066   001C7A  2002               	addwfc	(mystrcmp@s1+1)^0,w,c
  8067   001C7C  6EDA               	movwf	fsr2h,c
  8068   001C7E  50DF               	movf	indf2,w,c
  8069   001C80  A4D8               	btfss	status,2,c
  8070   001C82  EF45  F00E         	goto	u2421
  8071   001C86  EF47  F00E         	goto	u2420
  8072   001C8A                     u2421:
  8073   001C8A  EF1C  F00E         	goto	l3345
  8074   001C8E                     u2420:
  8075   001C8E                     
  8076                           ;password.c: 124:     return 0;
  8077   001C8E  0E00               	movlw	0
  8078   001C90  6E02               	movwf	(?_mystrcmp+1)^0,c
  8079   001C92  0E00               	movlw	0
  8080   001C94  6E01               	movwf	?_mystrcmp^0,c
  8081   001C96                     l357:
  8082   001C96  0012               	return		;funcret
  8083   001C98                     __end_of_mystrcmp:
  8084                           	callstack 0
  8085                           
  8086 ;; *************** function _clcd_print *****************
  8087 ;; Defined at:
  8088 ;;		line 60 in file "clcd.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  data            2    2[COMRAM] PTR const unsigned char 
  8091 ;;		 -> STR_32(20), eventdata(170), STR_31(14), STR_30(14), 
  8092 ;;		 -> STR_29(14), STR_28(14), STR_27(14), STR_26(14), 
  8093 ;;		 -> STR_25(17), STR_24(17), STR_23(15), STR_22(15), 
  8094 ;;		 -> STR_21(17), STR_20(15), STR_19(18), STR_18(5), 
  8095 ;;		 -> STR_17(9), STR_16(15), STR_15(17), STR_14(17), 
  8096 ;;		 -> STR_13(17), STR_12(17), STR_11(17), time(9), 
  8097 ;;		 -> STR_10(16), STR_1(18), 
  8098 ;;  addr            1    4[COMRAM] unsigned char 
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;		None
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  1    wreg      void 
  8103 ;; Registers used:
  8104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8110 ;;      Params:         3       0       0       0       0       0       0
  8111 ;;      Locals:         0       0       0       0       0       0       0
  8112 ;;      Temps:          0       0       0       0       0       0       0
  8113 ;;      Totals:         3       0       0       0       0       0       0
  8114 ;;Total ram usage:        3 bytes
  8115 ;; Hardware stack levels used: 1
  8116 ;; Hardware stack levels required when called: 2
  8117 ;; This function calls:
  8118 ;;		_clcd_write
  8119 ;; This function is called by:
  8120 ;;		_main
  8121 ;;		_display_dashboard
  8122 ;;		_display_times
  8123 ;;		_logscreen
  8124 ;;		_timeleft
  8125 ;;		_change_pass
  8126 ;;		_print
  8127 ;;		_scrolllog
  8128 ;;		_view_log
  8129 ;;		_download_log
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text52
  8134   001C98                     __ptext52:
  8135                           	callstack 0
  8136   001C98                     _clcd_print:
  8137                           	callstack 27
  8138   001C98                     
  8139                           ;clcd.c: 60: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 61: 
      +                          {;clcd.c: 62:  clcd_write(addr, 0);
  8140   001C98  0E00               	movlw	0
  8141   001C9A  6E01               	movwf	clcd_write@control_bit^0,c
  8142   001C9C  5005               	movf	clcd_print@addr^0,w,c
  8143   001C9E  ECBF  F00F         	call	_clcd_write
  8144                           
  8145                           ;clcd.c: 63:  while (*data != '\0')
  8146   001CA2  EF69  F00E         	goto	l2787
  8147   001CA6                     l2783:
  8148                           
  8149                           ;clcd.c: 64:  {;clcd.c: 65:   clcd_write(*data++, 1);
  8150   001CA6  0E01               	movlw	1
  8151   001CA8  6E01               	movwf	clcd_write@control_bit^0,c
  8152   001CAA  C003  FFF6         	movff	clcd_print@data,tblptrl
  8153   001CAE  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  8154   001CB2  6AF8               	clrf	tblptru,c
  8155   001CB4  0E05               	movlw	(high __ramtop+-1)
  8156   001CB6  64F7               	cpfsgt	tblptrh,c
  8157   001CB8  D003               	bra	u1707
  8158   001CBA  0008               	tblrd		*
  8159   001CBC  50F5               	movf	tablat,w,c
  8160   001CBE  D005               	bra	u1700
  8161   001CC0                     u1707:
  8162   001CC0  CFF6 FFE9          	movff	tblptrl,fsr0l
  8163   001CC4  CFF7 FFEA          	movff	tblptrh,fsr0h
  8164   001CC8  50EF               	movf	indf0,w,c
  8165   001CCA                     u1700:
  8166   001CCA  ECBF  F00F         	call	_clcd_write
  8167   001CCE  4A03               	infsnz	clcd_print@data^0,f,c
  8168   001CD0  2A04               	incf	(clcd_print@data+1)^0,f,c
  8169   001CD2                     l2787:
  8170                           
  8171                           ;clcd.c: 63:  while (*data != '\0')
  8172   001CD2  C003  FFF6         	movff	clcd_print@data,tblptrl
  8173   001CD6  C004  FFF7         	movff	clcd_print@data+1,tblptrh
  8174   001CDA  6AF8               	clrf	tblptru,c
  8175   001CDC  0E05               	movlw	(high __ramtop+-1)
  8176   001CDE  64F7               	cpfsgt	tblptrh,c
  8177   001CE0  D003               	bra	u1717
  8178   001CE2  0008               	tblrd		*
  8179   001CE4  50F5               	movf	tablat,w,c
  8180   001CE6  D005               	bra	u1710
  8181   001CE8                     u1717:
  8182   001CE8  CFF6 FFE9          	movff	tblptrl,fsr0l
  8183   001CEC  CFF7 FFEA          	movff	tblptrh,fsr0h
  8184   001CF0  50EF               	movf	indf0,w,c
  8185   001CF2                     u1710:
  8186   001CF2  0900               	iorlw	0
  8187   001CF4  A4D8               	btfss	status,2,c
  8188   001CF6  EF7F  F00E         	goto	u1721
  8189   001CFA  EF81  F00E         	goto	u1720
  8190   001CFE                     u1721:
  8191   001CFE  EF53  F00E         	goto	l2783
  8192   001D02                     u1720:
  8193   001D02  0012               	return		;funcret
  8194   001D04                     __end_of_clcd_print:
  8195                           	callstack 0
  8196                           
  8197 ;; *************** function _clcd_write *****************
  8198 ;; Defined at:
  8199 ;;		line 3 in file "clcd.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;  byte            1    wreg     unsigned char 
  8202 ;;  control_bit     1    0[COMRAM] unsigned char 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;  byte            1    1[COMRAM] unsigned char 
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  1    wreg      void 
  8207 ;; Registers used:
  8208 ;;		wreg
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8214 ;;      Params:         1       0       0       0       0       0       0
  8215 ;;      Locals:         1       0       0       0       0       0       0
  8216 ;;      Temps:          0       0       0       0       0       0       0
  8217 ;;      Totals:         2       0       0       0       0       0       0
  8218 ;;Total ram usage:        2 bytes
  8219 ;; Hardware stack levels used: 1
  8220 ;; Hardware stack levels required when called: 1
  8221 ;; This function calls:
  8222 ;;		Nothing
  8223 ;; This function is called by:
  8224 ;;		_display_dashboard
  8225 ;;		_init_clcd
  8226 ;;		_clcd_print
  8227 ;;		_clcd_putch
  8228 ;;		_logscreen
  8229 ;;		_timeleft
  8230 ;;		_change_pass
  8231 ;;		_print
  8232 ;;		_scrolllog
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           	psect	text53
  8237   001F7E                     __ptext53:
  8238                           	callstack 0
  8239   001F7E                     _clcd_write:
  8240                           	callstack 27
  8241                           
  8242                           ;incstack = 0
  8243                           ;clcd_write@byte stored from wreg
  8244   001F7E  6E02               	movwf	clcd_write@byte^0,c
  8245   001F80                     
  8246                           ;clcd.c: 3: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 4: {;
      +                          clcd.c: 5:  PORTCbits.RC1 = control_bit;
  8247   001F80  B001               	btfsc	clcd_write@control_bit^0,0,c
  8248   001F82  D002               	bra	u1685
  8249   001F84  9282               	bcf	130,1,c	;volatile
  8250   001F86  D001               	bra	u1686
  8251   001F88                     u1685:
  8252   001F88  8282               	bsf	130,1,c	;volatile
  8253   001F8A                     u1686:
  8254   001F8A                     
  8255                           ;clcd.c: 6:  PORTD = byte;
  8256   001F8A  C002  FF83         	movff	clcd_write@byte,3971	;volatile
  8257   001F8E                     
  8258                           ;clcd.c: 9:  PORTCbits.RC2 = 1;
  8259   001F8E  8482               	bsf	130,2,c	;volatile
  8260   001F90                     
  8261                           ;clcd.c: 10:  PORTCbits.RC2 = 0;
  8262   001F90  9482               	bcf	130,2,c	;volatile
  8263   001F92                     
  8264                           ;clcd.c: 12:  TRISD7 = 1;
  8265   001F92  8E95               	bsf	3989,7,c	;volatile
  8266   001F94                     
  8267                           ;clcd.c: 13:  PORTCbits.RC0 = 1;
  8268   001F94  8082               	bsf	130,0,c	;volatile
  8269   001F96                     
  8270                           ;clcd.c: 14:  PORTCbits.RC1 = 0;
  8271   001F96  9282               	bcf	130,1,c	;volatile
  8272   001F98                     l2753:
  8273                           
  8274                           ;clcd.c: 17:  {;clcd.c: 18:   PORTCbits.RC2 = 1;
  8275   001F98  8482               	bsf	130,2,c	;volatile
  8276   001F9A                     
  8277                           ;clcd.c: 19:   PORTCbits.RC2 = 0;
  8278   001F9A  9482               	bcf	130,2,c	;volatile
  8279   001F9C                     
  8280                           ;clcd.c: 20:  } while (PORTDbits.RD7);
  8281   001F9C  BE83               	btfsc	131,7,c	;volatile
  8282   001F9E  EFD3  F00F         	goto	u1691
  8283   001FA2  EFD5  F00F         	goto	u1690
  8284   001FA6                     u1691:
  8285   001FA6  EFCC  F00F         	goto	l2753
  8286   001FAA                     u1690:
  8287   001FAA                     
  8288                           ;clcd.c: 22:  PORTCbits.RC0 = 0;
  8289   001FAA  9082               	bcf	130,0,c	;volatile
  8290                           
  8291                           ;clcd.c: 23:  TRISD7 = 0x00;
  8292   001FAC  9E95               	bcf	3989,7,c	;volatile
  8293   001FAE  0012               	return		;funcret
  8294   001FB0                     __end_of_clcd_write:
  8295                           	callstack 0
  8296                           
  8297 ;; *************** function _isr *****************
  8298 ;; Defined at:
  8299 ;;		line 3 in file "isr.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;		None
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;		None
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  1    wreg      void 
  8306 ;; Registers used:
  8307 ;;		wreg, status,2, status,0
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8313 ;;      Params:         0       0       0       0       0       0       0
  8314 ;;      Locals:         0       0       0       0       0       0       0
  8315 ;;      Temps:          0       0       0       0       0       0       0
  8316 ;;      Totals:         0       0       0       0       0       0       0
  8317 ;;Total ram usage:        0 bytes
  8318 ;; Hardware stack levels used: 1
  8319 ;; This function calls:
  8320 ;;		Nothing
  8321 ;; This function is called by:
  8322 ;;		Interrupt level 2
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           
  8326                           	psect	intcode
  8327   000008                     __pintcode:
  8328                           	callstack 0
  8329   000008                     _isr:
  8330                           	callstack 23
  8331                           
  8332                           ;incstack = 0
  8333   000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8334   00000A  ED39  F00F         	call	int_func,f	;refresh shadow registers
  8335                           
  8336                           	psect	intcode_body
  8337   001E72                     __pintcode_body:
  8338                           	callstack 23
  8339   001E72                     int_func:
  8340                           	callstack 23
  8341   001E72  0006               	pop		; remove dummy address from shadow register refresh
  8342   001E74                     
  8343                           ;isr.c: 5:     static unsigned int count = 0;;isr.c: 6:     if (TMR0IF == 1)
  8344   001E74  A4F2               	btfss	4082,2,c	;volatile
  8345   001E76  EF3F  F00F         	goto	i2u329_41
  8346   001E7A  EF41  F00F         	goto	i2u329_40
  8347   001E7E                     i2u329_41:
  8348   001E7E  EF5E  F00F         	goto	i2l278
  8349   001E82                     i2u329_40:
  8350   001E82                     
  8351                           ;isr.c: 7:     {;isr.c: 8:         TMR0 = TMR0 + 8;
  8352   001E82  0E08               	movlw	8
  8353   001E84  24D6               	addwf	214,w,c	;volatile
  8354   001E86  6ED6               	movwf	214,c	;volatile
  8355   001E88  0E00               	movlw	0
  8356   001E8A  20D7               	addwfc	215,w,c	;volatile
  8357   001E8C  6ED7               	movwf	215,c	;volatile
  8358                           
  8359                           ;isr.c: 9:         if (++count == 20000)
  8360   001E8E  0100               	movlb	0	; () banked
  8361   001E90  4B8F               	infsnz	isr@count& (0+255),f,b
  8362   001E92  2B90               	incf	(isr@count+1)& (0+255),f,b
  8363   001E94  0E20               	movlw	32
  8364   001E96  198F               	xorwf	isr@count& (0+255),w,b
  8365   001E98  E107               	bnz	i2u330_41
  8366   001E9A  0E4E               	movlw	78
  8367   001E9C  1990               	xorwf	(isr@count+1)& (0+255),w,b
  8368   001E9E  A4D8               	btfss	status,2,c
  8369   001EA0  EF54  F00F         	goto	i2u330_41
  8370   001EA4  EF56  F00F         	goto	i2u330_40
  8371   001EA8                     i2u330_41:
  8372   001EA8  EF5D  F00F         	goto	i2l4023
  8373   001EAC                     i2u330_40:
  8374   001EAC                     
  8375                           ; BSR set to: 0
  8376                           ;isr.c: 10:         {;isr.c: 11:             count=0;
  8377   001EAC  0E00               	movlw	0
  8378   001EAE  6F90               	movwf	(isr@count+1)& (0+255),b
  8379   001EB0  0E00               	movlw	0
  8380   001EB2  6F8F               	movwf	isr@count& (0+255),b
  8381   001EB4                     
  8382                           ; BSR set to: 0
  8383                           ;isr.c: 12:             sec--;
  8384   001EB4  0653               	decf	_sec^0,f,c
  8385   001EB6  A0D8               	btfss	status,0,c
  8386   001EB8  0654               	decf	(_sec+1)^0,f,c
  8387   001EBA                     i2l4023:
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;isr.c: 15:         TMR0IF = 0;
  8391   001EBA  94F2               	bcf	4082,2,c	;volatile
  8392   001EBC                     i2l278:
  8393   001EBC  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8394   001EBE  0011               	retfie		f
  8395   001EC0                     __end_of_isr:
  8396                           	callstack 0
  8397                           
  8398                           	psect	rparam
  8399   000000                     
  8400                           	psect	temp
  8401   00005C                     btemp:
  8402                           	callstack 0
  8403   00005C                     	ds	1
  8404   000000                     int$flags	set	btemp
  8405   000000                     wtemp8	set	btemp+1
  8406   000000                     ttemp5	set	btemp+1
  8407   000000                     ttemp6	set	btemp+4
  8408   000000                     ttemp7	set	btemp+8
  8409                           
  8410                           	psect	config
  8411                           
  8412                           ; Padding undefined space
  8413   300000                     	org	3145728
  8414   300000  FF                 	db	255
  8415                           
  8416                           ;Config register CONFIG1H @ 0x300001
  8417                           ;	Oscillator Selection bits
  8418                           ;	OSC = RCIO, External RC oscillator, port function on RA6
  8419                           ;	Fail-Safe Clock Monitor Enable bit
  8420                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8421                           ;	Internal/External Oscillator Switchover bit
  8422                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8423   300001                     	org	3145729
  8424   300001  07                 	db	7
  8425                           
  8426                           ;Config register CONFIG2L @ 0x300002
  8427                           ;	Power-up Timer Enable bit
  8428                           ;	PWRT = OFF, PWRT disabled
  8429                           ;	Brown-out Reset Enable bits
  8430                           ;	BOREN = BOHW, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8431                           ;	Brown-out Reset Voltage bits
  8432                           ;	BORV = 3, VBOR set to 2.1V
  8433   300002                     	org	3145730
  8434   300002  1F                 	db	31
  8435                           
  8436                           ;Config register CONFIG2H @ 0x300003
  8437                           ;	Watchdog Timer Enable bit
  8438                           ;	WDT = ON, WDT enabled
  8439                           ;	Watchdog Timer Postscale Select bits
  8440                           ;	WDTPS = 32768, 1:32768
  8441   300003                     	org	3145731
  8442   300003  1F                 	db	31
  8443                           
  8444                           ; Padding undefined space
  8445   300004                     	org	3145732
  8446   300004  FF                 	db	255
  8447                           
  8448                           ;Config register CONFIG3H @ 0x300005
  8449                           ;	PORTB A/D Enable bit
  8450                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  8451                           ;	Low-Power Timer 1 Oscillator Enable bit
  8452                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8453                           ;	MCLR Pin Enable bit
  8454                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8455   300005                     	org	3145733
  8456   300005  82                 	db	130
  8457                           
  8458                           ;Config register CONFIG4L @ 0x300006
  8459                           ;	Stack Full/Underflow Reset Enable bit
  8460                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8461                           ;	Single-Supply ICSP Enable bit
  8462                           ;	LVP = ON, Single-Supply ICSP enabled
  8463                           ;	Boot Block Size Select bit
  8464                           ;	BBSIZ = 1024, 1K words (2K bytes) boot block
  8465                           ;	Extended Instruction Set Enable bit
  8466                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8467                           ;	Background Debugger Enable bit
  8468                           ;	DEBUG = 0x1, unprogrammed default
  8469   300006                     	org	3145734
  8470   300006  85                 	db	133
  8471                           
  8472                           ; Padding undefined space
  8473   300007                     	org	3145735
  8474   300007  FF                 	db	255
  8475                           
  8476                           ;Config register CONFIG5L @ 0x300008
  8477                           ;	Code Protection bit
  8478                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8479                           ;	Code Protection bit
  8480                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8481                           ;	Code Protection bit
  8482                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8483                           ;	Code Protection bit
  8484                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8485   300008                     	org	3145736
  8486   300008  0F                 	db	15
  8487                           
  8488                           ;Config register CONFIG5H @ 0x300009
  8489                           ;	Boot Block Code Protection bit
  8490                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8491                           ;	Data EEPROM Code Protection bit
  8492                           ;	CPD = OFF, Data EEPROM not code-protected
  8493   300009                     	org	3145737
  8494   300009  C0                 	db	192
  8495                           
  8496                           ;Config register CONFIG6L @ 0x30000A
  8497                           ;	Write Protection bit
  8498                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8499                           ;	Write Protection bit
  8500                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8501                           ;	Write Protection bit
  8502                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8503                           ;	Write Protection bit
  8504                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8505   30000A                     	org	3145738
  8506   30000A  0F                 	db	15
  8507                           
  8508                           ;Config register CONFIG6H @ 0x30000B
  8509                           ;	Configuration Register Write Protection bit
  8510                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8511                           ;	Boot Block Write Protection bit
  8512                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8513                           ;	Data EEPROM Write Protection bit
  8514                           ;	WRTD = OFF, Data EEPROM not write-protected
  8515   30000B                     	org	3145739
  8516   30000B  E0                 	db	224
  8517                           
  8518                           ;Config register CONFIG7L @ 0x30000C
  8519                           ;	Table Read Protection bit
  8520                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8521                           ;	Table Read Protection bit
  8522                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8523                           ;	Table Read Protection bit
  8524                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8525                           ;	Table Read Protection bit
  8526                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8527   30000C                     	org	3145740
  8528   30000C  0F                 	db	15
  8529                           
  8530                           ;Config register CONFIG7H @ 0x30000D
  8531                           ;	Boot Block Table Read Protection bit
  8532                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8533   30000D                     	org	3145741
  8534   30000D  40                 	db	64
  8535                           tosu	equ	0xFFF
  8536                           tosh	equ	0xFFE
  8537                           tosl	equ	0xFFD
  8538                           stkptr	equ	0xFFC
  8539                           pclatu	equ	0xFFB
  8540                           pclath	equ	0xFFA
  8541                           pcl	equ	0xFF9
  8542                           tblptru	equ	0xFF8
  8543                           tblptrh	equ	0xFF7
  8544                           tblptrl	equ	0xFF6
  8545                           tablat	equ	0xFF5
  8546                           prodh	equ	0xFF4
  8547                           prodl	equ	0xFF3
  8548                           indf0	equ	0xFEF
  8549                           postinc0	equ	0xFEE
  8550                           postdec0	equ	0xFED
  8551                           preinc0	equ	0xFEC
  8552                           plusw0	equ	0xFEB
  8553                           fsr0h	equ	0xFEA
  8554                           fsr0l	equ	0xFE9
  8555                           wreg	equ	0xFE8
  8556                           indf1	equ	0xFE7
  8557                           postinc1	equ	0xFE6
  8558                           postdec1	equ	0xFE5
  8559                           preinc1	equ	0xFE4
  8560                           plusw1	equ	0xFE3
  8561                           fsr1h	equ	0xFE2
  8562                           fsr1l	equ	0xFE1
  8563                           bsr	equ	0xFE0
  8564                           indf2	equ	0xFDF
  8565                           postinc2	equ	0xFDE
  8566                           postdec2	equ	0xFDD
  8567                           preinc2	equ	0xFDC
  8568                           plusw2	equ	0xFDB
  8569                           fsr2h	equ	0xFDA
  8570                           fsr2l	equ	0xFD9
  8571                           status	equ	0xFD8

Data Sizes:
    Strings     390
    Constant    0
    Data        41
    BSS         265
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      91
    BANK0           160      0     112
    BANK1           256      0     170
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    puts@data	PTR unsigned char  size(2) Largest target is 170
		 -> eventdata(BANK1[170]), 

    scrolling	PTR unsigned char [5] size(2) Largest target is 14
		 -> STR_30(CODE[14]), STR_29(CODE[14]), STR_28(CODE[14]), STR_27(CODE[14]), 
		 -> STR_26(CODE[14]), 

    mystrcmp@s2	PTR unsigned char  size(2) Largest target is 5
		 -> change_pass@passcheck(BANK0[5]), pass(BANK0[5]), 

    mystrcmp@s1	PTR unsigned char  size(2) Largest target is 5
		 -> change_pass@passcheck1(BANK0[5]), uckey(BANK0[5]), pass(BANK0[5]), 

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 170
		 -> STR_32(CODE[20]), eventdata(BANK1[170]), STR_31(CODE[14]), STR_30(CODE[14]), 
		 -> STR_29(CODE[14]), STR_28(CODE[14]), STR_27(CODE[14]), STR_26(CODE[14]), 
		 -> STR_25(CODE[17]), STR_24(CODE[17]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[17]), STR_20(CODE[15]), STR_19(CODE[18]), STR_18(CODE[5]), 
		 -> STR_17(CODE[9]), STR_16(CODE[15]), STR_15(CODE[17]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), time(BANK0[9]), 
		 -> STR_10(CODE[16]), STR_1(CODE[18]), 

    signature	PTR unsigned char [8] size(2) Largest target is 3
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_getforstoreevent
    _view_log->___wmul
    _scrolllog->_print
    _print->_clcd_putch
    _logscreen->_clcd_putch
    _timeleft->_clcd_putch
    _init_config->_init_clcd
    _init_config->_init_ds1307
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _getforstoreevent->_get_speed
    _log_event->_write_external_eeprom
    _write_external_eeprom->_i2c_write
    _get_speed->___fltol
    ___xxtofl->_read_adc
    ___lwmod->___lwdiv
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _download_log->_puts
    _read_external_eeprom->_i2c_write
    _puts->___wmul
    _display_dashboard->_display_speed
    _display_dashboard->_display_time
    _display_time->_clcd_putch
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_times->_clcd_print
    _display_speed->_clcd_putch
    _clcd_putch->___awmod
    ___awmod->___awdiv
    _change_pass->_mystrcmp
    _clcd_print->_clcd_write

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  124677
                                             62 COMRAM     5     5      0
                            ___fldiv
                            ___fltol
                           ___xxtofl
                        _change_pass
                         _clcd_print
                  _display_dashboard
                       _download_log
                       _gear_monitor
                   _getforstoreevent
                        _init_config
                          _logscreen
                           _read_adc
               _read_external_eeprom
                      _read_switches
                          _scrolllog
                           _set_time
                           _view_log
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _view_log                                             8     8      0    8654
                                              6 COMRAM     8     8      0
                             ___wmul
                         _clcd_print
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _set_time                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _scrolllog                                            6     6      0   25333
                                             19 COMRAM     4     4      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                              _print
 ---------------------------------------------------------------------------------
 (2) _print                                                3     3      0   12599
                                             16 COMRAM     3     3      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _logscreen                                            3     3      0   27145
                                             16 COMRAM     3     3      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                           _mystrcmp
                           _timeleft
 ---------------------------------------------------------------------------------
 (2) _timeleft                                             0     0      0   13911
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    2830
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                  _init_matrixkeypad
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrixkeypad                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     506
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     370
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            2     2      0    2324
                                              2 COMRAM     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getforstoreevent                                     6     6      0    4188
                                             56 COMRAM     6     6      0
                          _get_speed
                           _get_time
                          _log_event
 ---------------------------------------------------------------------------------
 (2) _log_event                                            3     3      0     561
                                              5 COMRAM     3     3      0
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _write_external_eeprom                                4     3      1     469
                                              1 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _get_speed                                            2     2      0    3402
                                             54 COMRAM     2     2      0
                            ___fldiv
                            ___fltol
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                              5 COMRAM    14    10      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     463
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             44 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1551
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) _gear_monitor                                         1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _download_log                                         7     7      0    8774
                                              8 COMRAM     6     6      0
                             ___wmul
                         _clcd_print
                              _putch
                               _puts
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     143
                                              6 COMRAM     2     0      2
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1715
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_dashboard                                    3     1      2   28047
                                             18 COMRAM     3     1      2
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                      _display_speed
                       _display_time
 ---------------------------------------------------------------------------------
 (2) _display_time                                         2     2      0   10298
                                             16 COMRAM     2     2      0
                         _clcd_putch
                      _display_times
                           _get_time
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _display_times                                        0     0      0    6647
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _display_speed                                        2     0      2    5074
                                             16 COMRAM     2     0      2
                            ___awmod
                            ___lwdiv
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (3) _clcd_putch                                           2     1      1    3584
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _change_pass                                         13    13      0    9762
                                              8 COMRAM    13    13      0
                         _clcd_print
                         _clcd_write
                           _mystrcmp
 ---------------------------------------------------------------------------------
 (2) _mystrcmp                                             8     4      4     590
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    6647
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1    2324
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___xxtofl (ARG)
       _read_adc (ARG)
     _read_adc (ARG)
   ___fltol
     ___fldiv (ARG)
     ___xxtofl (ARG)
     _read_adc (ARG)
   ___xxtofl
   _change_pass
     _clcd_print
       _clcd_write
     _clcd_write
     _mystrcmp
   _clcd_print
   _display_dashboard
     _clcd_print
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
         ___lwdiv (ARG)
       ___lwdiv (ARG)
       _clcd_write (ARG)
     _clcd_write
     _display_speed
       ___awmod
       ___lwdiv
       _clcd_putch
     _display_time
       _clcd_putch
       _display_times
         _clcd_print
       _get_time
         _read_ds1307
           _i2c_read
             _i2c_no_ack
             _i2c_rx_mode
               _i2c_idle
           _i2c_rep_start
             _i2c_idle
           _i2c_start
             _i2c_idle
           _i2c_stop
             _i2c_idle
           _i2c_write
             _i2c_idle
   _download_log
     ___wmul
     _clcd_print
     _putch
     _puts
       ___wmul (ARG)
       _putch (ARG)
     _read_external_eeprom
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write
   _gear_monitor
   _getforstoreevent
     _get_speed
       ___fldiv
       ___fltol
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___xxtofl
       _read_adc
     _get_time
     _log_event
       _write_external_eeprom
         _i2c_start
         _i2c_stop
         _i2c_write
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
     _init_matrixkeypad
     _init_timer0
   _logscreen
     _clcd_print
     _clcd_putch
     _clcd_write
     _mystrcmp
     _timeleft
       ___awdiv
       ___awmod
       _clcd_print
       _clcd_putch
       _clcd_write
   _read_adc
   _read_external_eeprom
   _read_switches
     _scan_key
   _scrolllog
     _clcd_print
     _clcd_putch
     _clcd_write
     _print
       _clcd_print
       _clcd_putch
       _clcd_write
   _set_time
   _view_log
     ___wmul
     _clcd_print
     _read_external_eeprom
   _write_external_eeprom

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      30        0.0%
BITBIGSFRll        281      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      AA       7       66.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      70       5       70.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      5B       1       96.8%
BITBIGSFRhlh        19      0       0      17        0.0%
BITBIGSFRlhl         F      0       0      27        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRlhhllh      9      0       0      24        0.0%
BITBIGSFRhllh        9      0       0      18        0.0%
BITBIGSFRlhhlll      6      0       0      26        0.0%
BITBIGSFRlhhllh      4      0       0      23        0.0%
BITBIGSFRlhhlhl      3      0       0      22        0.0%
BITBIGSFRlhhllh      2      0       0      25        0.0%
BITBIGSFRlhhhh       2      0       0      19        0.0%
BITBIGSFRlhhhl       2      0       0      20        0.0%
BITBIGSFRlhhlhh      1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     175      29        0.0%
DATA                 0      0     175       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jan 05 17:30:55 2024

                 ___fldiv@aexp 002C                   ___fldiv@bexp 002B                              _i 004E  
                 ___fldiv@sign 0024          _write_external_eeprom 1F08                 clcd_print@addr 0005  
               clcd_print@data 0003                             l43 20EA                             _GO 7E11  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003              _init_matrixkeypad 2158  
                          l112 20B4                            l115 1F60                            l212 1FAA  
                          l213 1FAE                            l222 1D02                            l118 1F7C  
                          l151 1DC8                            l216 17CC                            l225 211C  
                          l154 2156                            l323 06FA                            l148 1E1E  
                          l180 10A6                            l261 1A32                            l238 2164  
                          l350 1570                            l326 052C                            l254 19D4  
                          l246 1B44                            l159 1ACE                            l183 10A8  
                          l423 2104                            l351 1584                            l255 1A48  
                          l256 19E8                            l248 1B42                            l512 0BD0  
                          l504 0C0C                            l186 1E70                            l258 1A02  
                          l611 2134                            l259 1A16                            l357 1C96  
                          l613 2142                            l621 219E                            l541 218E  
                          l614 2144                            l630 2170                            l550 164A  
                          l392 098E                            l624 2196                            l480 14BE  
                          l608 2132                            l536 12D4                            l633 21AE  
                          l473 1922                            l714 20C2                            l570 2096  
                          l627 21A6                            l715 20C0                            l723 1FDE  
                          l636 21B4                            l573 2032                            l717 20D0  
                          l726 2058                            l494 11C4                            l639 217C  
                          l655 1F46                            l567 1F06                            l488 19B8  
                          l658 2008                            _CKE 7E3E                            l970 187C  
                          l957 170E                            _GIE 7F97                            _PR2 0FCB  
                          _PEN 7E2A                            _SEN 7E28                            _PSA 7EAB  
                          _RX9 7D5E                            _SMP 7E3F                            _TX9 7D66  
                ?_display_time 0001             ?_init_matrixkeypad 0001                            _min 008D  
                          _log 0060                            _sec 0053                            _isr 0008  
               clcd_putch@addr 000F                            _out 0044                 clcd_putch@data 0010  
                 ___awmod@sign 000E                            prod 0FF3                            wreg 0FE8  
          ??_init_matrixkeypad 0001                   ___fltol@exp1 0036                           l1023 13DA  
                         l1310 020A                           l1224 1BB8                           l1217 1BB0  
                         l1321 02C8                           l1313 01CE                           l3001 165E  
                         l1322 02B6                           l1234 1D66                           l1227 1D5E  
                         l3011 1684                           l3003 1666                           l1308 03AA  
                         l3101 1370                           l3021 16BC                           l3013 168C  
                         l3005 166A                           l1319 0250                           l3111 139A  
                         l3103 137A                           l3031 16E8                           l3023 16C2  
                         l3015 169E                           l3007 1678                           l3041 17CE  
                         l3121 1B46                           l3113 13AA                           l3201 0F64  
                         l3025 16D8                           l3017 16A6                           l3033 16EE  
                         l3009 1680                           l4001 0D42                           l3051 17FA  
                         l3043 17D2                           l3131 1B7E                           l3123 1B4E  
                         l3115 13BA                           l3211 1710                           l3035 16FE  
                         l3027 16E0                           l3019 16AE                           l4003 0D4C  
                         l3061 1832                           l3053 1802                           l3045 17E0  
                         l3141 1BAA                           l3133 1B84                           l3125 1B60  
                         l3301 1D70                           l3117 13CA                           l3109 138E  
                         l1381 0E18                           l3221 1724                           l3213 1714  
                         l3205 2158                           l3037 1706                           l3029 16E2  
                         l4005 0D56                           l3071 186C                           l3063 1848  
                         l3055 1814                           l3047 17E8                           l3135 1B9A  
                         l3127 1B68                           l3303 1D94                           l3151 1D34  
                         l3143 1D04                           l3231 175C                           l3223 1728  
                         l3215 171A                           l3207 215C                           l1384 0F74  
                         l3073 1874                           l3065 1850                           l3057 181C  
                         l3049 17EC                           l3137 1BA2                           l3129 1B70  
                         l3305 1E20                           l3153 1D4A                           l3145 1D16  
                         l3161 0DD4                           l3401 197C                           l3241 1788  
                         l3233 1766                           l3225 172A                           l3217 171E  
                         l3209 2162                           l4009 0D6A                           l3067 1856  
                         l3059 1824                           l3139 1BA4                           l3091 1340  
                         l3083 1300                           l3155 1D52                           l3147 1D1E  
                         l1395 0F0C                           l3171 0E52                           l3163 0DE2  
                         l3403 197E                           l3251 17BA                           l3243 1790  
                         l3235 176E                           l3227 1742                           l3219 1722  
                         l3315 19E2                           l3307 19BA                           l3411 10AC  
                         l4051 0D80                           l1388 0EB0                           l3069 185C  
                         l3093 134E                           l3085 132A                           l3077 12D6  
                         l3157 1D58                           l3149 1D26                           l3181 0EA6  
                         l3173 0E5A                           l3165 0E28                           l3405 1982  
                         l3501 14B2                           l3253 17C4                           l3245 179A  
                         l3237 1778                           l3229 174C                           l3261 211E  
                         l3325 1A10                           l3309 19CE                           l3421 10E4  
                         l3413 10BE                           l3351 1C6E                           l3343 1C2C  
                         l3087 132C                           l3079 12EC                           l3191 0F1C  
                         l3183 0EE2                           l3175 0E66                           l3167 0E3E  
                         l3159 0DC4                           l3407 199E                           l3503 14BA  
                         l3255 2098                           l3247 17A2                           l3239 177E  
                         l3271 2130                           l3263 2122                           l3335 1A40  
                         l3319 19FC                           l3431 115C                           l3423 10EE  
                         l3415 10CE                           l3345 1C38                           l3353 1C72  
                         l3089 133C                           l3193 0F20                           l3185 0EEE  
                         l3177 0E98                           l3409 19B4                           l3249 17AC  
                         l3281 1EF2                           l3273 1EC0                           l3265 212A  
                         l3257 20EC                           l3361 14CA                           l3601 04A0  
                         l3329 1A2C                           l3521 1B20                           l3513 1AEA  
                         l3505 1AD2                           l3441 119C                           l3433 1166  
                         l3425 1116                           l3417 10D8                           l3355 1C8E  
                         l3347 1C62                           l2731 2134                           l3451 2034  
                         l3443 1FB0                           l3291 1FF6                           l3283 1FE2  
                         l3099 1366                           l3195 0F44                           l3187 0EFC  
                         l3179 0E9A                           l2811 1F20                           l2803 1F0A  
                         l3275 1EC8                           l3267 212C                           l3259 20FC  
                         l3371 155E                           l3363 14D4                           l3611 04E0  
                         l3603 04A6                           l3339 1A46                           l3515 1AFA  
                         l3531 1B42                           l3507 1AE2                           l3435 1168  
                         l3419 10DA                           l3427 113A                           l2741 1F8A  
                         l2733 21A8                           l3701 1E12                           l3453 2050  
                         l3445 1FB4                           l3293 2002                           l3285 1FE6  
                         l3541 0FAC                           l2901 0104                           l3197 0F54  
                         l3189 0F1A                           l2821 1F6E                           l2813 1F24  
                         l2805 1F0E                           l3381 1926                           l3277 1ED4  
                         l3269 212E                           l3461 20DE                           l3373 1572  
                         l3365 14DA                           l3613 04F6                           l3605 04B8  
                         l3621 053C                           l3517 1B00                           l3437 1172  
                         l3429 114C                           l2751 1F96                           l2743 1F8E  
                         l2735 21AA                           l2831 1A76                           l3447 1FC2  
                         l3287 1FEC                           l3551 101C                           l3543 0FBA  
                         l3535 0F78                           l2911 0134                           l2903 010C  
                         l3199 0F62                           l2815 1F2C                           l2807 1F14  
                         l3391 195A                           l3383 1938                           l3279 1EE8  
                         l3463 20E2                           l3375 157A                           l3367 150A  
                         l3359 14C0                           l3631 05CA                           l3623 0550  
                         l3615 0506                           l3607 04BC                           l3519 1B10  
                         l3527 1B2A                           l3439 117C                           l3711 09F8  
                         l3703 0992                           l2753 1F98                           l2745 1F90  
                         l2825 2108                           l2737 21B0                           l2761 219A  
                         l2841 1AB4                           l2833 1A8C                           l3297 1D68  
                         l3449 1FC6                           l3289 1FF2                           l3561 1062  
                         l3553 1028                           l3545 0FE0                           l3537 0F88  
                         l2921 0172                           l2913 0134                           l2905 0110  
                         l2817 1F4A                           l3377 187E                           l2809 1F1A  
                         l3393 195E                           l3385 193C                           l3481 141A  
                         l3473 13E4                           l3465 20E6                           l3457 20D2  
                         l3369 152A                           l3641 061C                           l3633 05DC  
                         l3625 0576                           l3617 051C                           l3609 04D4  
                         l3529 1B3A                           l3721 0A3A                           l3713 0A0A  
                         l3705 09A6                           l2755 1F9A                           l2747 1F92  
                         l2739 1F80                           l2771 21A0                           l2763 2168  
                         l2843 1ACA                           l2835 1A9E                           l2827 1A4A  
                         l3299 1D6C                           l3555 103A                           l3563 106E  
                         l3571 10A6                           l3547 0FF4                           l3539 0F9A  
                         l2931 01BE                           l2923 0182                           l2819 1F5E  
                         l3387 1946                           l3379 1924                           l3491 1442  
                         l3483 141E                           l3475 13F4                           l3467 13DC  
                         l2851 2080                           l3459 20DA                           l3643 0626  
                         l3635 0602                           l3627 0590                           l3619 0530  
                         l3811 0C0A                           l3723 0A4C                           l3803 0BD4  
                         l3715 0A1C                           l3707 09B0                           l2757 1F9C  
                         l2749 1F94                           l2781 1C98                           l3901 0886  
                         l2845 2146                           l2773 21A2                           l2765 216C  
                         l2837 1AA2                           l2829 1A68                           l3565 1080  
                         l3557 104A                           l3549 100C                           l2941 0208  
                         l2933 01CC                           l2925 0192                           l2917 0148  
                         l2909 0124                           l2861 001E                           l3389 1956  
                         l3493 1446                           l3477 13F8                           l2853 2086  
                         l3661 0684                           l3645 062E                           l3637 060C  
                         l3629 05AA                           l3653 0642                           l3581 03EA  
                         l3573 03AE                           l3805 0BE6                           l3741 0AAC  
                         l3725 0A54                           l3717 0A20                           l3709 09D0  
                         l3821 11DA                           l3813 11C8                           l2783 1CA6  
                         l3911 08BA                           l3903 0890                           l2775 2172  
                         l2759 2198                           l2767 2190                           l2791 2010  
                         l2839 1AAC                           l2847 20B8                           l3567 1090  
                         l3559 1050                           l2951 024E                           l2943 021A  
                         l2935 01D8                           l2927 019A                           l2919 0162  
                         l2871 005E                           l2863 002C                           l3399 1966  
                         l3495 1462                           l3479 1414                           l2855 208C  
                         l3663 0690                           l3655 065C                           l3647 0636  
                         l3639 0614                           l3591 0450                           l3583 03FA  
                         l3671 06E0                           l3575 03B4                           l3807 0BFC  
                         l3751 0AD2                           l3743 0ABC                           l3727 0A5E  
                         l3735 0A74                           l3719 0A24                           l3831 121C  
                         l2785 1CCE                           l3921 08FC                           l3913 08CA  
                         l3905 0894                           l2777 217A                           l2769 2192  
                         l2793 2016                           l3569 10A0                           l2961 02AE  
                         l2945 0230                           l2953 0260                           l2937 01F6  
                         l2929 01AA                           l2881 0084                           l2873 0060  
                         l2865 002E                           l3497 1466                           l3489 1426  
                         l2857 2092                           l2849 207C                           l3673 06E8  
                         l3665 06A2                           l3657 066C                           l3593 0460  
                         l3585 0420                           l3577 03C6                           l3809 0C04  
                         l3753 0AE2                           l3761 0AF8                           l3745 0AC6  
                         l3737 0A8A                           l3729 0A66                           l3841 127A  
                         l3833 1238                           l2787 1CD2                           l3931 097C  
                         l3923 0900                           l3915 08DA                           l3907 0898  
                         l2795 201C                           l3691 1DE6                           l2971 031C  
                         l2955 026E                           l2947 0236                           l2939 01F8  
                         l2891 00C4                           l2883 0092                           l2867 003E  
                         l2875 0068                           l2859 0012                           l3499 1484  
                         l3675 06F2                           l3667 06C8                           l3659 067C  
                         l3595 0472                           l3579 03D6                           l3771 0B2C  
                         l3763 0B0A                           l3755 0AEC                           l3739 0A9C  
                         l3851 12BC                           l3843 1280                           l3835 123C  
                         l3827 11E2                           l3819 11D0                           l3933 0986  
                         l3925 0926                           l3917 08EC                           l3909 08AA  
                         l3861 074E                           l3853 06FE                           l2797 2020  
                         l2789 200C                           l3693 1DF8                           l2981 0386  
                         l2965 02D8                           l2973 0320                           l2957 0272  
                         l2949 0240                           l2893 00C6                           l2885 0094  
                         l2877 0078                           l2869 004E                           l3669 06D2  
                         l3597 0482                           l3589 0448                           l3773 0B2E  
                         l3781 0B60                           l3765 0B14                           l3845 1292  
                         l3837 1258                           l3829 1218                           l3927 0946  
                         l3919 08F2                           l3871 07A0                           l3863 075E  
                         l3855 0708                           l2799 202C                           l3695 1E00  
                         l3687 1DCC                           l3951 15DC                           l3943 159E  
                         l3935 1586                           l2983 038A                           l2975 033A  
                         l2967 02E4                           l2959 0280                           l2887 00A4  
                         l2895 00CE                           l2879 007E                           l3599 0494  
                         l3775 0B3E                           l3767 0B24                           l3847 12A2  
                         l3839 126A                           l3929 0956                           l3881 07EA  
                         l3873 07A6                           l3865 076E                           l3857 0718  
                         l3689 1DDC                           l3961 162A                           l3953 15E0  
                         l3937 1596                           l2985 0398                           l2977 0350  
                         l2969 02F2                           l2897 00DE                           l2889 00B4  
                         l3777 0B4E                           l3769 0B28                           l3785 0B76  
                         l3849 12A4                           l3891 083E                           l3883 07FA  
                         l3875 07B0                           l3867 077E                           l3859 0728  
                         l3699 1E0E                           l3963 162E                           l3955 15FC  
                         l2987 039E                           l2979 036A                           l2899 00F4  
                         l3787 0B92                           l3795 0BA8                           l3779 0B5A  
                         l3971 0C40                           l3893 084E                           l3885 0820  
                         l3877 07B4                           l3869 078E                           l3957 1620  
                         l3949 15A6                           l2989 03A0                           l2997 164C  
                         l3797 0BBA                           l3789 0B9C                           l3965 2188  
                         l3981 0C6C                           l3973 0C4A                           l3895 085E  
                         l3887 082A                           l3879 07DA                           l3959 1626  
                         l2999 1650                           l3799 0BC4                           l3991 0D08  
                         l3983 0CC4                           l3975 0C54                           l3967 0C0E  
                         l3897 086E                           l3889 082E                           l3993 0D12  
                         l3985 0CD6                           l3977 0C5E                           l3969 0C3A  
                         _ADFM 7E07                           l3899 0880                           l3995 0D24  
                         l3987 0CEA                           l3979 0C68                           ?_isr 0001  
                         l3997 0D2E                           l3989 0CF6                           l3999 0D38  
                         _ADON 7E10                           STR_1 2E9F                           STR_2 2FF9  
                         STR_3 2FF6                           STR_4 2FEA                           STR_5 2FED  
                         STR_6 2FF0                           STR_7 2FF3                           STR_8 2FFC  
                         STR_9 2FE7                           _BRGH 7D62                           _CREN 7D5C  
                         _T0CS 7EAD                           u2000 165E                           u2001 165A  
                         u2010 1678                           u2011 1674                           u2100 1848  
                         u2020 169E                           u2101 1844                           u2021 169A  
                         u2110 186C                           u2030 16BC                           u2111 1868  
                         u2031 16B8                           u2200 1B7E                           u2120 12EC  
                         u2040 16D8                           u3000 0B72                           u2201 1B7A  
                         u2121 12E8                           u2041 16D4                           u3001 0B6E  
                         u2210 1B9A                           u2130 1320                           u2050 16FE  
                         u3010 0B92                           u2211 1B96                           u2051 16FA  
                         u3011 0B8E                           u2060 17E0                           u2140 134E  
                         u2220 1D16                           u2300 0EFC                           u3020 0BBA  
                         u3100 12A2                           u2061 17DC                           u2141 134A  
                         u2221 1D12                           u2301 0EF8                           u3021 0BB6  
                         u3101 129E                           u3110 074E                           u2070 17FA  
                         u2150 1362                           u2230 1D34                           u2310 0F0C  
                         u3030 0BE6                           u3111 074A                           u2071 17F6  
                         u2151 135E                           u2135 1316                           u2231 1D30  
                         u2311 0F08                           u3031 0BE2                           u3200 08AA  
                         u3120 075E                           u2080 1814                           u2160 138A  
                         u2240 1D4A                           u2320 0F1A                           u2400 1A40  
                         u3040 0BFC                           u3201 08A6                           u3121 075A  
                         u2081 1810                           u2161 1386                           u2241 1D46  
                         u2321 0F16                           u2401 1A3C                           u3041 0BF8  
                         u2410 1C62                           u3210 08CA                           u3130 077E  
                         u2090 1832                           u2170 13AA                           u2330 0F54  
                         u2250 0DD4                           u3050 1238                           u2411 1C5E  
                         u3211 08C6                           u3131 077A                           u2091 182E  
                         u2171 13A6                           u2331 0F50                           u2251 0DD0  
                         u3051 1234                           u1700 1CCA                           u2420 1C8E  
                         u3220 08DA                           u3140 078E                           u2180 13BA  
                         u2340 0F62                           u2260 0DE2                           u2500 114C  
                         u3060 1258                           u2421 1C8A                           u3221 08D6  
                         u3141 078A                           u2181 13B6                           u2341 0F5E  
                         u2261 0DDE                           u2501 1148                           u3061 1254  
                         u1710 1CF2                           u3230 0926                           u3150 07DA  
                         u2190 1B60                           u2270 0E3E                           u2430 1570  
                         u2350 19CE                           u2510 115C                           u3070 126A  
                         u3231 0922                           u3151 07D6                           u2191 1B5C  
                         u2271 0E3A                           u2431 156C                           u2351 19CA  
                         u2511 1158                           u3071 1266                           u1720 1D02  
                         u3240 097C                           u3160 0820                           u2520 1FDE  
                         u2600 0F88                           u1800 0092                           u2280 0E94  
                         u2440 1938                           u2360 19E2                           u3080 127A  
                         u1721 1CFE                           u3241 0978                           u3161 081C  
                         u2521 1FDA                           u2601 0F84                           u1801 008E  
                         u2281 0E90                           u2441 1934                           u2361 19DE  
                         u3081 1276                           u3170 083E                           u3250 15FC  
                         u2610 0F9A                           u1810 00A4                           u2290 0EDE  
                         u1730 1F46                           u2450 1956                           u2530 1414  
                         u2370 19FC                           u3090 1292                           u1707 1CC0  
                         u3171 083A                           u3251 15F8                           u2611 0F96  
                         u1811 00A0                           u2291 0EDA                           u1731 1F42  
                         u2451 1952                           u2531 1410                           u2371 19F8  
                         u3091 128E                           u3180 085E                           u3260 164A  
                         u2700 1090                           u2620 0FAC                           u1900 024E  
                         u1820 00B4                           u1740 1F6E                           u2460 199E  
                         u2540 1462                           u2380 1A10                           u1717 1CE8  
                         u3181 085A                           u3261 1646                           u2701 108C  
                         u2621 0FA8                           u1901 024A                           u1821 00B0  
                         u1741 1F6A                           u2461 199A                           u2541 145E  
                         u2381 1A0C                           u3190 086E                           u1670 2142  
                         u1750 1A76                           u2710 10A0                           u2630 0FE0  
                         u1910 026E                           u1830 00F4                           u2470 19B4  
                         u2390 1A2C                           u2550 1AE2                           u3270 0CD6  
                         u3191 086A                           u1671 213E                           u1751 1A72  
                         u2711 109C                           u2631 0FDC                           u1911 026A  
                         u1831 00F0                           u2471 19B0                           u3327 1734  
                         u2391 1A28                           u2551 1ADE                           u3271 0CD2  
                         u1760 20D0                           u2640 100C                           u1920 0280  
                         u1840 0134                           u2800 04F6                           u2720 03C6  
                         u2560 1AFA                           u2480 10BE                           u3280 0CEA  
                         u1761 20CC                           u2641 1008                           u1921 027C  
                         u1841 0130                           u3337 1752                           u2801 04F2  
                         u2721 03C2                           u2561 1AF6                           u2481 10BA  
                         u3281 0CE6                           u1690 1FAA                           u2650 101C  
                         u1930 02AE                           u1850 01AA                           u1770 002C  
                         u2810 051C                           u2730 03EA                           u2570 1B10  
                         u2490 10CE          ?_read_external_eeprom 0001                           u1691 1FA6  
                         u2651 1018                           u1931 02AA                           u1851 01A6  
                         u1771 0028                           u3347 1768                           u2811 0518  
                         u2731 03E6                           u2571 1B0C                           u2491 10CA  
                         u2660 103A                           u1940 02C4                           u1860 01CC  
                         u1780 003E                           u2820 0550                           u2740 03FA  
                         u2580 1B20                           u2900 0A1C                           u1685 1F88  
                         u2661 1036                           u1941 02C0                           u1861 01C8  
                         u1781 003A                           u3357 178A                           u2821 054C  
                         u2741 03F6                           u2581 1B1C                           u2901 0A18  
                         u1686 1F8A                           u2670 104A                           u1950 02D8  
                         u1870 01F6                           u1790 004E                           u2830 0576  
                         u2750 0420                           u2590 1B3A                           u2910 0A3A  
                         u2671 1046                           u1951 02D4                           u1871 01F2  
                         u1791 004A                           u3367 179C                           u2831 0572  
                         u2751 041C                           u2591 1B36                           u2911 0A36  
                         u2680 1062                           u1960 02F2                           u1880 021A  
                         u2840 05AA                           u2760 0460                           u2920 0A4C  
                         u2681 105E                           u1961 02EE                           u1881 0216  
                         u3377 17B2                           u2841 05A6                           u2761 045C  
                         u2921 0A48                           u2690 1080                           u1970 033A  
                         u1890 0230                           u2850 0602                           u2770 0472  
                         u2930 0A8A                           u2691 107C                           u1971 0336  
                         u1891 022C                           u3387 17C6                           u2851 05FE  
                         u2771 046E                           u2931 0A86                           _PEIE 7F96  
                         u1980 036A                           u2860 06C8                           u2780 04B8  
                         u2940 0A9C                           u1981 0366                           u2861 06C4  
                         u2781 04B4                           u2941 0A98                           u2870 1DF8  
                         u1990 0398                           u2790 04D4                           u2950 0AAC  
                         u2871 1DF4                           u1991 0394                           u2791 04D0  
                         u2951 0AA8                           u2960 0ABC                           u2880 09A6  
                         u2961 0AB8                           u2881 09A2                           u2970 0AE2  
                         u2890 0A0A                           u2971 0ADE                           u2891 0A06  
                         _RCIE 7CED                           u2980 0B0A                           _RCEN 7E2B  
                         _RCIF 7CF5                           u2981 0B06                           u2990 0B3E  
                         u2991 0B3A                           _RBPU 7F8F                           _TMR0 0FD6  
                         _SPEN 7D5F                           _RSEN 7E29                           _TXIE 7CEC  
                         _TXEN 7D65                           _TXIF 7CF4                           _SYNC 7D64  
               ?_display_speed 0011                 ?_display_times 0001                           _main 0C0E  
                         _logg 004B                           _pass 00AB                           _wait 007A  
                         _time 0093                           fsr0h 0FEA                           indf0 0FEF  
                         fsr2h 0FDA                           fsr0l 0FE9                           indf1 0FE7  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005C                           _puts 1FB0                           prodh 0FF4  
                         prodl 0FF3                           start 000E                ___fldiv@new_exp 0025  
                 ___param_bank 0000                 clcd_write@byte 0002                  _i2c_rep_start 21A0  
                ??_i2c_rx_mode 0001                   _ECCP1CONbits 0FBA      __end_of_init_matrixkeypad 2166  
                        ??_isr 0001                   ?_init_ds1307 0001                  ___fltol@sign1 0035  
                        _ADCS0 7E00                          _ADCS1 7E01                          _ADCS2 7E02  
                        ?_main 0001                   ?_read_ds1307 0001                          _ACKEN 7E2C  
                        _ACKDT 7E2D                 ??_display_time 0011                          _BCLIF 7D0B  
              __end_of___fldiv 03AC                          _ACQT0 7E03                          _ACQT1 7E04  
                        _ACQT2 7E05                __end_of___awdiv 1710                          STR_10 2F39  
                        STR_11 2F06                          STR_20 2F67                          STR_12 2EB1  
                        STR_21 2F28                          STR_13 2ED3                          STR_22 2F49  
                        STR_14 2EF5                          STR_30 2FAF                          STR_31 2FCB  
                        STR_23 2F58                          STR_15 2F17                          STR_16 2F76  
                        STR_24 2EC2                          STR_32 2E79                          _BRG16 7DC3  
                        STR_17 2FD9                          STR_25 2EE4                          STR_18 2FE2  
                        STR_26 2F93                          STR_19 2E8D                          STR_27 2FBD  
                        STR_28 2FA1                __end_of___awmod 187E                          STR_29 2F85  
              __end_of___fltol 13DC                          _CMCON 0FB4                          ?_puts 0007  
              ___awdiv@divisor 0003                          _PCFG0 7E08                          _PCFG1 7E09  
                        _PCFG2 7E0A                          _PCFG3 7E0B                __end_of___lwdiv 1BBA  
              __end_of___lwmod 1D68                   ?_init_config 0001                          i2l278 1EBC  
              ___awdiv@counter 0005                          _VCFG0 7E0C                          _VCFG1 7E0D  
                        _RCREG 0FAE                          _SENDB 7D63                          _SPBRG 0FAF  
                        _PORTB 0F81                          _PORTD 0F83                   get_speed@adc 0037  
                        _TRISB 0F93                          _TRISC 0F94                          _TRISD 0F95  
                        _SSPIF 7CF3                          _TXREG 0FAD                   ?_init_timer0 0001  
    write_external_eeprom@data 0002                          _blink 0048                          _uckey 00A6  
                        _press 0085                          _print 10AA                          _putch 20B6  
                 view_log@vpos 004A                          tablat 0FF5                          ttemp5 005D  
                        ttemp6 0060                          ttemp7 0064                          status 0FD8  
                        wtemp8 005D           __end_of_gear_monitor 10AA               init_ds1307@dummy 0004  
                   _i2c_no_ack 21B0                __initialization 1BBA                 ?_i2c_rep_start 0001  
       ?_write_external_eeprom 0002                   __end_of_main 0DC2                   __end_of_puts 1FE0  
             __end_of_i2c_idle 2146               __end_of_i2c_read 217E               __end_of_i2c_stop 2198  
                ?_download_log 0001                         ??_main 003F           change_pass@passcheck 00A1  
                       ??_puts 0009                  __activetblptr 0002            __end_of_i2c_rx_mode 21B0  
                       _ADCON0 0FC2         ??_read_external_eeprom 0002                ??_display_speed 0013  
              ??_display_times 0006                         _ADRESH 0FC4                         _ADRESL 0FC3  
                       _T08BIT 7EAE               ___awdiv@dividend 0001                         ?_print 0001  
                       ?_putch 0001                         i2l4021 1EB4                         i2l4023 1EBA  
                       i2l4015 1E74                         i2l4017 1E82                         i2l4019 1EAC  
                 _write_ds1307 207A                         _TMR0IE 7F95                         _TMR0IF 7F92  
                       _TMR2IE 7CE9                         _TMR0ON 7EAF                         _TMR2ON 7E52  
                       _SSPADD 0FC8                         _TRISC3 7CA3                         _TRISC4 7CA4  
                       _TRISC6 7CA6                         _TRISC7 7CA7                         _TRISD7 7CAF  
                       _SSPBUF 0FC9               __end_of___xxtofl 0F76               __end_of_get_time 1AD0  
             log_event@address 0006                         ___wmul 2034                      ??___fldiv 001C  
                    ??___awdiv 0005                      ??___awmod 000D                      ??___fltol 0031  
                    ??___lwdiv 0005                      ??___lwmod 000C               __end_of_init_i2c 2134  
             __end_of_init_adc 20B6               __end_of_read_adc 1F7E                         clear_0 1C00  
                       clear_1 1C0C                         clear_2 1C18                 ??_download_log 0009  
                       _logpos 0059               ___awdiv@quotient 0007                         _logout 0091  
              ___awmod@divisor 000B                         isa$std 0001               __end_of_scan_key 1A4A  
              ___awmod@counter 000D          gear_monitor@crashflag 0050                   __pdataCOMRAM 0053  
             __end_of_set_time 2190                   __mediumconst 2E78               __end_of_timeleft 1586  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             __end_of_view_log 12D6               __end_of_mystrcmp 1C98                   ___xxtofl@arg 0010  
                 ___xxtofl@exp 000F                   ___xxtofl@val 0006                     __accesstop 0060  
      __end_of__initialization 1C1E           __end_of_display_time 1DCA                  ___rparam_used 0001  
                   ___fltol@f1 002D                ??_i2c_rep_start 0001                    ?_i2c_no_ack 0001  
               __pcstackCOMRAM 0001                   __pidataBANK0 205A                    _i2c_rx_mode 21A8  
                __end_of_print 11C6                  __end_of_putch 20D2                change_pass@flag 004C  
              change_pass@wait 0009              __end_of_i2c_start 21A0              __end_of_i2c_write 2172  
             _getforstoreevent 13DC          change_pass@passcheck1 009C                        ??_print 0011  
                      ??_putch 0001                     __pbssBANK0 0060                     __pbssBANK1 0100  
       write_external_eeprom@i 0003                      ?_i2c_idle 0001                      ?_i2c_read 0001  
                    ?_i2c_stop 0001                  logscreen@wait 0011                     _clcd_print 1C98  
                   _clcd_putch 2106                     _clcd_write 1F7E          getforstoreevent@i_691 003D  
 write_external_eeprom@address 0005                read_ds1307@data 0003                        ?___wmul 0001  
                      _CCP1CON 0FBD                        _ACKSTAT 7E2E       read_switches@ucdetection 0001  
                      _T2CKPS0 7E50                        _T2CKPS1 7E51                      ?___xxtofl 0006  
                 _gear_monitor 0F76                        _SSPCON1 0FC6                      ?_get_time 0001  
                _read_switches 1AD0                     ??_i2c_idle 0001                     ??_i2c_read 0001  
                   ??_i2c_stop 0001                      ?_init_i2c 0001           __end_of_download_log 164C  
                    ?_init_adc 0001                      ?_read_adc 0001            read_switches@uconce 005A  
                    ?_scan_key 0001        ??_write_external_eeprom 0003                        __Hparam 0000  
                      __Lparam 0000                      ?_set_time 0001                      ?_timeleft 0001  
            __end_of_get_speed 1924                        ___fldiv 0012                        ___awdiv 164C  
                      ___awmod 17CE                      ?_view_log 0001                        ___fltol 12D6  
                   _eventcount 0046             gear_monitor@prekey 005B                        ___lwdiv 1B46  
                      ___lwmod 1D04                      ?_mystrcmp 0001                        __pcinit 1BBA  
                      __ramtop 0600                        __ptext0 0C0E                        __ptext1 11C6  
                      __ptext2 2188                        __ptext3 0990                        __ptext4 10AA  
                      __ptext5 1AD0                        __ptext6 19BA                        __ptext7 03AC  
                      __ptext8 14C0                        __ptext9 164C              __end_of_init_clcd 17CE  
                   ??___xxtofl 000A               ___awmod@dividend 0009                  ??_change_pass 0009  
            __end_of_log_event 19BA         display_dashboard@uckey 0015                 ?_read_switches 0001  
       display_dashboard@usads 0013              __end_of_logscreen 06FC                     ??_get_time 0004  
               __pintcode_body 1E72                        _tryflag 00CE           end_of_initialization 1C1E  
                   ??_init_i2c 0001                     ??_init_adc 0001                  __Lmediumconst 2E78  
                   ??_read_adc 0003                        int_func 1E72                     ??_scan_key 0001  
            __end_of_scrolllog 0C0E                    ?_clcd_print 0003                    ?_clcd_putch 000F  
                  ?_clcd_write 0001                     ??_set_time 0001                     ??_timeleft 0011  
                      postdec1 0FE5                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE                     ??_view_log 0007  
                   ??_mystrcmp 0005                      _PORTBbits 0F81                      _PORTCbits 0F82  
                    _PORTDbits 0F83                read_adc@channel 0005                     _notpressed 00CA  
                 _display_time 1D68                  i2c_write@data 0001                  ___xxtofl@sign 000E  
                    _TRISEbits 0F96                    ___fldiv@grs 0027                    ___fldiv@rem 0020  
        __end_of_display_speed 1E72          __end_of_display_times 2158            __end_of_change_pass 0990  
            getforstoreevent@i 003B       read_external_eeprom@data 0003                   ??_i2c_no_ack 0001  
     __end_of_getforstoreevent 14C0                   ?_i2c_rx_mode 0001                 __end_of___wmul 205A  
                __pidataCOMRAM 217E                    view_log@key 000A            start_initialization 1BBA  
              ??_read_switches 0001                      _i2c_start 2198                    __end_of_isr 1EC0  
                    _i2c_write 2166               change_pass@count 004D               change_pass@ucKey 0015  
           __end_of_i2c_no_ack 21B6            change_pass@wait_631 0011            change_pass@wait_626 000D  
                 _firstrunflag 0052          __end_of_i2c_rep_start 21A8                       ??___wmul 0005  
                ??_init_ds1307 0004                    __pdataBANK0 00B0                  ??_read_ds1307 0002  
                 _download_log 1586                  ??_init_config 0005                      ___fldiv@a 0018  
                    ___fldiv@b 0014                     log_event@i 0007                  ??_init_timer0 0001  
                  __pbssCOMRAM 0044                    _change_pass 06FC                     ?_i2c_start 0001  
                   ?_i2c_write 0001             display_speed@usadc 0011                   logscreen@key 0013  
             scrolllog@prevkey 0058               ___lwdiv@dividend 0001  __end_of_write_external_eeprom 1F48  
                    __pintcode 0008                  __pmediumconst 2E78                      _blinkflag 008B  
                     ?___fldiv 0014                       ?___awdiv 0001                       ?___awmod 0009  
                     ?___fltol 002D              _display_dashboard 1DCA             read_ds1307@address 0002  
                     ?___lwdiv 0001                      _clock_reg 0082                       ?___lwmod 0008  
           ?_display_dashboard 0013                      _get_speed 187E             read_switches@uckey 004F  
          __end_of_init_ds1307 1F08                      _enterflag 0089            ??_display_dashboard 0015  
            gear_monitor@delay 007E            __end_of_read_ds1307 2034                      _eventdata 0100  
            gear_monitor@uckey 0001               ___lwdiv@quotient 0005                      _init_clcd 1710  
          __end_of_init_config 20EC                      _log_event 1924                  ?_write_ds1307 0002  
          __end_of_init_timer0 2106                 ___wmul@product 0005                      _logscreen 03AC  
  read_external_eeprom@address 0002                   ??_clcd_print 0006                   ??_clcd_putch 0010  
                 ??_clcd_write 0002                     scrolllog@k 0016                       i2u330_40 1EAC  
                     i2u330_41 1EA8                       i2u329_40 1E82                       i2u329_41 1E7E  
    __end_of_display_dashboard 1E20                      _signature 00B0                      _signindex 0051  
                    _scrolling 00C0                      _scrolllog 0990                    _compareflag 0087  
                download_log@i 000D                  download_log@j 000B                  download_log@k 0057  
        clcd_write@control_bit 0001                     ?_get_speed 0001              ___wmul@multiplier 0001  
                    main@ucKey 0043                      main@usAdc 0041                    ??_i2c_start 0001  
           __end_of_clcd_print 1D04                    ??_i2c_write 0001             __end_of_clcd_putch 211E  
           __end_of_clcd_write 1FB0                     ?_init_clcd 0001                      copy_data0 1BCE  
                    copy_data1 1BEE                 ??_write_ds1307 0003                    _controlflag 0055  
                   ?_log_event 0001                       _i2c_idle 2134                       _i2c_read 2172  
                     _i2c_stop 2190                     ?_logscreen 0001                       __Hrparam 0000  
                set_time@draft 0071                       __Lrparam 0000                  set_time@ucKey 0001  
                   ?_scrolllog 0001              ?_getforstoreevent 0001   __end_of_read_external_eeprom 200A  
           ??_getforstoreevent 0039                    _init_ds1307 1EC0                    _read_ds1307 200A  
                  _init_config 20D2                       ___xxtofl 0DC2                     mystrcmp@s1 0001  
                   mystrcmp@s2 0003            write_ds1307@address 0003                    _init_timer0 20EC  
              ___lwdiv@divisor 0003                ___lwdiv@counter 0007                       __ptext10 20D2  
                     __ptext11 20EC                       __ptext20 1F08                       __ptext12 2158  
                     __ptext21 187E                       __ptext13 211E                       __ptext30 1FB0  
                     __ptext22 1F48                       __ptext14 1EC0                       __ptext31 20B6  
                     __ptext23 0DC2                       __ptext15 207A                       __ptext40 21A0  
                     __ptext32 2034                       __ptext24 1D04                       __ptext16 1710  
                     __ptext41 2172                       __ptext33 1DCA                       __ptext25 12D6  
                     __ptext17 2098                       __ptext50 06FC                       __ptext42 21A8  
                     __ptext34 1D68                       __ptext26 0012                       __ptext18 13DC  
                     __ptext51 1C2C                       __ptext43 2134                       __ptext35 1A4A  
                     __ptext27 0F76                       __ptext19 1924                       __ptext52 1C98  
                     __ptext44 21B0                       __ptext36 200A                       __ptext28 1586  
                     __ptext53 1F7E                       __ptext45 2146                       __ptext37 2166  
                     __ptext29 1FE0                       __ptext46 1E20                       __ptext38 2190  
                     __ptext47 2106                       __ptext39 2198                       __ptext48 1B46  
                     __ptext49 17CE                       _get_time 1A4A                       _init_i2c 211E  
                     _init_adc 2098                       _read_adc 1F48                       _scan_key 19BA  
              view_log@address 0009                       _set_time 2188                       isa$xinst 0000  
                     _timeleft 14C0                       int$flags 005C                       _view_log 11C6  
                     _mystrcmp 1C2C                    ??_get_speed 0037                      view_log@i 000D  
                    view_log@j 000B                      putch@data 0001                  ?_gear_monitor 0001  
                 ?_change_pass 0001                       isr@count 008F                    ??_init_clcd 0003  
        __end_of_read_switches 1B46                    ??_log_event 0006                       intlevel2 0000  
                    mystrcmp@i 0007                   scrolllog@key 0017               ___lwmod@dividend 0008  
                  ??_logscreen 0011                    ??_scrolllog 0014                       print@key 0013  
         __end_of_write_ds1307 2098                       puts@data 0007                 ??_gear_monitor 0001  
              ___lwmod@divisor 000A                ___lwmod@counter 000C               write_ds1307@data 0002  
         _read_external_eeprom 1FE0                  _display_speed 1E20                  _display_times 2146  
            download_log@ucKey 0001  
